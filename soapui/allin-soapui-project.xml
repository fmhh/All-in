<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="AIS Signing Service" resourceRoot="${projectDir}" soapui-version="4.6.4" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:description>Swissco All-In Signing Service</con:description><con:settings/><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="AIS SOAP" type="wsdl" bindingName="{http://server.ais.swisscom.com/}DigitalSignatureServiceServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="../services/wsdl/aisService.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="..\services\wsdl\aisService.wsdl"><con:part><con:url>..\services\wsdl\aisService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="DigitalSignatureServiceService" targetNamespace="http://server.ais.swisscom.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://server.ais.swisscom.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns2dsig="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://service.ais.swisscom.com/">
  <wsdl:import location="IDigitalSignatureService.wsdl" namespace="http://service.ais.swisscom.com/"/>
  <wsdl:binding name="DigitalSignatureServiceServiceSoapBinding" type="ns1:IDigitalSignatureService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="pending">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="pending">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="pendingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sign">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="sign">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="signResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="DigitalSignatureServiceService">
    <wsdl:port binding="tns:DigitalSignatureServiceServiceSoapBinding" name="DigitalSignatureServicePort">
      <soap:address location="https://ais.pre.swissdigicert.ch/DSS-Server/ws"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>..\services\wsdl\IDigitalSignatureService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="IDigitalSignatureService" targetNamespace="http://service.ais.swisscom.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://service.ais.swisscom.com/">
  <wsdl:types>
    <xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:attribute name="lang" type="xs:string"/>
    </xs:schema>
    <xs:schema elementFormDefault="unqualified" targetNamespace="http://service.ais.swisscom.com/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://service.ais.swisscom.com/" xmlns:dsig="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ns1="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
      <xs:import namespace="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" schemaLocation="../schema/oasis/oasis-dss-profiles-asynchronous-processing-schema-v1.0-os.xsd"/>
      <xs:import namespace="urn:oasis:names:tc:dss:1.0:core:schema" schemaLocation="../schema/oasis/oasis-dss-core-schema-v1.0-os.xsd"/>
      <xs:element name="pending" type="tns:pending"/>
      <xs:element name="pendingResponse" type="tns:pendingResponse"/>
      <xs:element name="sign" type="tns:sign"/>
      <xs:element name="signResponse" type="tns:signResponse"/>
      <xs:complexType name="pending">
        <xs:sequence>
          <xs:element minOccurs="0" ref="ns1:PendingRequest"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pendingResponse">
        <xs:sequence>
          <xs:element minOccurs="0" ref="dsig:Response"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sign">
        <xs:sequence>
          <xs:element minOccurs="0" ref="dsig:SignRequest"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="signResponse">
        <xs:sequence>
          <xs:element minOccurs="0" ref="dsig:SignResponse"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="sign">
    <wsdl:part element="ns1:sign" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="signResponse">
    <wsdl:part element="ns1:signResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="pendingResponse">
    <wsdl:part element="ns1:pendingResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="pending">
    <wsdl:part element="ns1:pending" name="parameters"/>
  </wsdl:message>
  <wsdl:portType name="IDigitalSignatureService">
    <wsdl:operation name="pending">
      <wsdl:input message="ns1:pending" name="pending"/>
      <wsdl:output message="ns1:pendingResponse" name="pendingResponse"/>
    </wsdl:operation>
    <wsdl:operation name="sign">
      <wsdl:input message="ns1:sign" name="sign"/>
      <wsdl:output message="ns1:signResponse" name="signResponse"/>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>..\services\schema\oasis\oasis-dss-profiles-asynchronous-processing-schema-v1.0-os.xsd</con:url><con:content><![CDATA[<!---->
<!--Schema defining the additional elements used for asynchronous processing.-->
<!--This schema extends the OASIS DSS core schema.-->
<!---->
<!--version : cd-r2, 12. Aug. 2006-->
<!--author  : andreas kuehne, kuehne@klup.de-->
<!---->
<xs:schema targetNamespace="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:dss="urn:oasis:names:tc:dss:1.0:core:schema">
  <xs:import namespace="urn:oasis:names:tc:dss:1.0:core:schema" schemaLocation="http://docs.oasis-open.org/dss/v1.0/oasis-dss-core-schema-v1.0-os.xsd"/>
  <!--Additional requests required for asynch protocol-->
  <xs:element name="PendingRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:RequestBaseType"/>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="ResponseID">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://docs.oasis-open.org/dss/v1.0/oasis-dss-core-schema-v1.0-os.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="urn:oasis:names:tc:dss:1.0:core:schema" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:dss="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:saml="urn:oasis:names:tc:SAML:1.0:assertion">
  <xs:annotation>
    <xs:documentation xml:lang="en">This Schema defines the Digital Signature Service Core Protocols, Elements, and Bindings Committee Specification version 1.0 release 1</xs:documentation>
  </xs:annotation>
  <xs:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd"/>
  <xs:import namespace="urn:oasis:names:tc:SAML:1.0:assertion" schemaLocation="http://www.oasis-open.org/committees/download.php/3408/oasis-sstc-saml-schema-protocol-1.1.xsd"/>
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/xml.xsd"/>
  <xs:complexType name="AnyType">
    <xs:sequence>
      <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InternationalStringType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute ref="xml:lang" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="InputDocuments">
    <xs:complexType>
      <xs:sequence>
        <xs:choice maxOccurs="unbounded">
          <xs:element ref="dss:Document"/>
          <xs:element ref="dss:TransformedData"/>
          <xs:element ref="dss:DocumentHash"/>
          <xs:element name="Other" type="dss:AnyType"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="DocumentBaseType" abstract="true">
    <xs:attribute name="ID" type="xs:ID" use="optional"/>
    <xs:attribute name="RefURI" type="xs:anyURI" use="optional"/>
    <xs:attribute name="RefType" type="xs:anyURI" use="optional"/>
    <xs:attribute name="SchemaRefs" type="xs:IDREFS" use="optional"/>
  </xs:complexType>
  <xs:element name="Document" type="dss:DocumentType"/>
  <xs:complexType name="DocumentType">
    <xs:complexContent>
      <xs:extension base="dss:DocumentBaseType">
        <xs:choice>
          <xs:element name="InlineXML" type="dss:InlineXMLType"/>
          <xs:element name="Base64XML" type="xs:base64Binary"/>
          <xs:element name="EscapedXML" type="xs:string"/>
          <xs:element ref="dss:Base64Data"/>
          <xs:element ref="dss:AttachmentReference"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="Base64Data">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:base64Binary">
          <xs:attribute name="MimeType" type="xs:string" use="optional"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="InlineXMLType">
    <xs:sequence>
      <xs:any processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="ignorePIs" type="xs:boolean" use="optional" default="true"/>
    <xs:attribute name="ignoreComments" type="xs:boolean" use="optional" default="true"/>
  </xs:complexType>
  <xs:element name="TransformedData">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:DocumentBaseType">
          <xs:sequence>
            <xs:element ref="ds:Transforms" minOccurs="0"/>
            <xs:element ref="dss:Base64Data"/>
          </xs:sequence>
          <xs:attribute name="WhichReference" type="xs:integer" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="DocumentHash">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:DocumentBaseType">
          <xs:sequence>
            <xs:element ref="ds:Transforms" minOccurs="0"/>
            <xs:element ref="ds:DigestMethod" minOccurs="0"/>
            <xs:element ref="ds:DigestValue"/>
          </xs:sequence>
          <xs:attribute name="WhichReference" type="xs:integer" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignatureObject">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="ds:Signature"/>
          <xs:element ref="dss:Timestamp"/>
          <xs:element ref="dss:Base64Signature"/>
          <xs:element ref="dss:SignaturePtr"/>
          <xs:element name="Other" type="dss:AnyType"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="SchemaRefs" type="xs:IDREFS" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Base64Signature">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:base64Binary">
          <xs:attribute name="Type" type="xs:anyURI"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignaturePtr">
    <xs:complexType>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="XPath" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Result">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ResultMajor" type="xs:anyURI"/>
        <xs:element name="ResultMinor" type="xs:anyURI" minOccurs="0"/>
        <xs:element name="ResultMessage" type="dss:InternationalStringType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="OptionalInputs" type="dss:AnyType"/>
  <xs:element name="OptionalOutputs" type="dss:AnyType"/>
  <xs:element name="ServicePolicy" type="xs:anyURI"/>
  <xs:element name="ClaimedIdentity">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Name" type="saml:NameIdentifierType"/>
        <xs:element name="SupportingInfo" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Language" type="xs:language"/>
  <xs:element name="AdditionalProfile" type="xs:anyURI"/>
  <xs:element name="Schemas" type="dss:SchemasType"/>
  <xs:complexType name="SchemasType">
    <xs:sequence>
      <xs:element ref="dss:Schema" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Schema" type="dss:DocumentType"/>
  <xs:complexType name="RequestBaseType">
    <xs:sequence>
      <xs:element ref="dss:OptionalInputs" minOccurs="0"/>
      <xs:element ref="dss:InputDocuments" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="RequestID" type="xs:string" use="optional"/>
    <xs:attribute name="Profile" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:complexType name="ResponseBaseType">
    <xs:sequence>
      <xs:element ref="dss:Result"/>
      <xs:element ref="dss:OptionalOutputs" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="RequestID" type="xs:string" use="optional"/>
    <xs:attribute name="Profile" type="xs:anyURI" use="required"/>
  </xs:complexType>
  <xs:element name="Response" type="dss:ResponseBaseType"/>
  <xs:element name="SignRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:RequestBaseType"/>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignResponse">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:ResponseBaseType">
          <xs:sequence>
            <xs:element ref="dss:SignatureObject" minOccurs="0"/>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignatureType" type="xs:anyURI"/>
  <xs:element name="AddTimestamp" type="dss:UpdateSignatureInstructionType"/>
  <xs:complexType name="TimeSignatureInstructionType">
    <xs:complexContent>
      <xs:extension base="dss:UpdateSignatureInstructionType">
        <xs:attribute name="TimeStampTheGivenSignature" type="xs:boolean" use="optional" default="false"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UpdateSignatureInstructionType">
    <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:element name="IntendedAudience">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Recipient" type="saml:NameIdentifierType" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="KeySelector">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="ds:KeyInfo"/>
        <xs:element name="Other" type="dss:AnyType"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="Properties">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="SignedProperties" type="dss:PropertiesType" minOccurs="0"/>
        <xs:element name="UnsignedProperties" type="dss:PropertiesType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="PropertiesType">
    <xs:sequence>
      <xs:element ref="dss:Property" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Property">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Identifier" type="xs:anyURI"/>
        <xs:element name="Value" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="IncludeObject">
    <xs:complexType>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="hasObjectTagsAndAttributesSet" type="xs:boolean" default="false"/>
      <xs:attribute name="ObjId" type="xs:string" use="optional"/>
      <xs:attribute name="createReference" type="xs:boolean" use="optional" default="true"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignaturePlacement">
    <xs:complexType>
      <xs:choice>
        <xs:element name="XPathAfter" type="xs:string"/>
        <xs:element name="XPathFirstChildOf" type="xs:string"/>
      </xs:choice>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="CreateEnvelopedSignature" type="xs:boolean" default="true"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="DocumentWithSignature">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:Document"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignedReferences">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:SignedReference" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignedReference">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ds:Transforms" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="WhichDocument" type="xs:IDREF" use="required"/>
      <xs:attribute name="RefURI" type="xs:anyURI" use="optional"/>
      <xs:attribute name="RefId" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="VerifyRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:RequestBaseType">
          <xs:sequence>
            <xs:element ref="dss:SignatureObject" minOccurs="0"/>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="VerifyResponse" type="dss:ResponseBaseType"/>
  <xs:element name="VerifyManifestResults" type="dss:VerifyManifestResultsType"/>
  <xs:complexType name="VerifyManifestResultsType">
    <xs:sequence>
      <xs:element ref="dss:ManifestResult" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ManifestResult">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ReferenceXpath" type="xs:string"/>
        <xs:element name="Status" type="xs:anyURI"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="UseVerificationTime"/>
  <xs:complexType name="UseVerificationTimeType">
    <xs:choice>
      <xs:element name="CurrentTime"/>
      <xs:element name="SpecificTime" type="xs:dateTime"/>
      <xs:any namespace="##other"/>
    </xs:choice>
  </xs:complexType>
  <xs:element name="ReturnVerificationTimeInfo"/>
  <xs:element name="AdditionalTimeInfo" type="dss:AdditionalTimeInfoType"/>
  <xs:complexType name="AdditionalTimeInfoType">
    <xs:simpleContent>
      <xs:extension base="xs:dateTime">
        <xs:attribute name="Type" type="xs:anyURI" use="required"/>
        <xs:attribute name="Ref" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="VerificationTimeInfo" type="dss:VerificationTimeInfoType"/>
  <xs:complexType name="VerificationTimeInfoType">
    <xs:sequence>
      <xs:element name="VerificationTime" type="xs:dateTime"/>
      <xs:element ref="dss:AdditionalTimeInfo" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AdditionalKeyInfo">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ds:KeyInfo"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ReturnProcessingDetails"/>
  <xs:element name="ProcessingDetails">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ValidDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="IndeterminateDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="InvalidDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="DetailType">
    <xs:sequence>
      <xs:element name="Code" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="Message" type="dss:InternationalStringType" minOccurs="0"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:anyURI" use="required"/>
  </xs:complexType>
  <xs:element name="ReturnSigningTimeInfo"/>
  <xs:element name="SigningTimeInfo" type="dss:SigningTimeInfoType"/>
  <xs:complexType name="SigningTimeInfoType">
    <xs:sequence>
      <xs:element name="SigningTime" type="xs:dateTime"/>
      <xs:element name="SigningTimeBoundaries" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="LowerBoundary" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="UpperBoundary" type="xs:dateTime" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ReturnSignerIdentity"/>
  <xs:element name="SignerIdentity" type="saml:NameIdentifierType"/>
  <xs:element name="ReturnUpdatedSignature">
    <xs:complexType>
      <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="UpdatedSignature" type="dss:UpdatedSignatureType"/>
  <xs:complexType name="UpdatedSignatureType">
    <xs:sequence>
      <xs:element ref="dss:SignatureObject"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:element name="ReturnTransformedDocument">
    <xs:complexType>
      <xs:attribute name="WhichReference" type="xs:integer" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="TransformedDocument">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:Document"/>
      </xs:sequence>
      <xs:attribute name="WhichReference" type="xs:integer" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ReturnTimestampedSignature" type="dss:UpdateSignatureInstructionType"/>
  <xs:element name="TimestampedSignature" type="dss:UpdatedSignatureType"/>
  <xs:element name="Timestamp">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="ds:Signature"/>
        <xs:element name="RFC3161TimeStampToken" type="xs:base64Binary"/>
        <xs:element name="Other" type="dss:AnyType"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="TstInfo">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="SerialNumber" type="xs:integer"/>
        <xs:element name="CreationTime" type="xs:dateTime"/>
        <xs:element name="Policy" type="xs:anyURI" minOccurs="0"/>
        <xs:element name="ErrorBound" type="xs:duration" minOccurs="0"/>
        <xs:element name="Ordered" type="xs:boolean" default="false" minOccurs="0"/>
        <xs:element name="TSA" type="saml:NameIdentifierType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="RequesterIdentity">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Name" type="saml:NameIdentifierType"/>
        <xs:element name="SupportingInfo" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="AttachmentReference" type="dss:AttachmentReferenceType"/>
  <xs:complexType name="AttachmentReferenceType">
    <xs:sequence minOccurs="0">
      <xs:element ref="ds:DigestMethod"/>
      <xs:element ref="ds:DigestValue"/>
    </xs:sequence>
    <xs:attribute name="AttRefURI" type="xs:anyURI"/>
    <xs:attribute name="MimeType" type="xs:string" use="optional"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!DOCTYPE schema PUBLIC "-//W3C//DTD XMLSchema 200102//EN" "http://www.w3.org/2001/XMLSchema.dtd">
<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" version="0.1" elementFormDefault="qualified" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"></restriction>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" minOccurs="0" type="ds:HMACOutputLengthType"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
      <element name="XPath" type="string"/>
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any processContents="lax" namespace="##other"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <choice>
      <sequence>
        <element name="PGPKeyID" type="base64Binary"/>
        <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <sequence>
        <element name="PGPKeyPacket" type="base64Binary"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
    </choice>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <!--add a grep facet-->
    <attribute name="Encoding" type="anyURI" use="optional"/>
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://www.oasis-open.org/committees/download.php/3408/oasis-sstc-saml-schema-protocol-1.1.xsd</con:url><con:content><![CDATA[<schema targetNamespace="urn:oasis:names:tc:SAML:1.0:assertion" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="1.1" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:saml="urn:oasis:names:tc:SAML:1.0:assertion" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd"/>
  <annotation>
    <documentation>Document identifier: oasis-sstc-saml-schema-assertion-1.1
                Location: http://www.oasis-open.org/committees/documents.php?wg_abbrev=security
                Revision history:
                V1.0 (November, 2002):
                  Initial standard schema.
                V1.1 (September, 2003):
                  * Note that V1.1 of this schema has the same XML namespace as V1.0.
                  Rebased ID content directly on XML Schema types
                  Added DoNotCacheCondition element and DoNotCacheConditionType</documentation>
  </annotation>
  <simpleType name="DecisionType">
    <restriction base="string">
      <enumeration value="Permit"/>
      <enumeration value="Deny"/>
      <enumeration value="Indeterminate"/>
    </restriction>
  </simpleType>
  <element name="AssertionIDReference" type="NCName"/>
  <element name="Assertion" type="saml:AssertionType"/>
  <complexType name="AssertionType">
    <sequence>
      <element ref="saml:Conditions" minOccurs="0"/>
      <element ref="saml:Advice" minOccurs="0"/>
      <choice maxOccurs="unbounded">
        <element ref="saml:Statement"/>
        <element ref="saml:SubjectStatement"/>
        <element ref="saml:AuthenticationStatement"/>
        <element ref="saml:AuthorizationDecisionStatement"/>
        <element ref="saml:AttributeStatement"/>
      </choice>
      <element ref="ds:Signature" minOccurs="0"/>
    </sequence>
    <attribute name="MajorVersion" type="integer" use="required"/>
    <attribute name="MinorVersion" type="integer" use="required"/>
    <attribute name="AssertionID" type="ID" use="required"/>
    <attribute name="Issuer" type="string" use="required"/>
    <attribute name="IssueInstant" type="dateTime" use="required"/>
  </complexType>
  <element name="Conditions" type="saml:ConditionsType"/>
  <complexType name="ConditionsType">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element ref="saml:AudienceRestrictionCondition"/>
      <element ref="saml:DoNotCacheCondition"/>
      <element ref="saml:Condition"/>
    </choice>
    <attribute name="NotBefore" type="dateTime" use="optional"/>
    <attribute name="NotOnOrAfter" type="dateTime" use="optional"/>
  </complexType>
  <element name="Condition" type="saml:ConditionAbstractType"/>
  <complexType name="ConditionAbstractType" abstract="true"/>
  <element name="AudienceRestrictionCondition" type="saml:AudienceRestrictionConditionType"/>
  <complexType name="AudienceRestrictionConditionType">
    <complexContent>
      <extension base="saml:ConditionAbstractType">
        <sequence>
          <element ref="saml:Audience" maxOccurs="unbounded"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="Audience" type="anyURI"/>
  <element name="DoNotCacheCondition" type="saml:DoNotCacheConditionType"/>
  <complexType name="DoNotCacheConditionType">
    <complexContent>
      <extension base="saml:ConditionAbstractType"/>
    </complexContent>
  </complexType>
  <element name="Advice" type="saml:AdviceType"/>
  <complexType name="AdviceType">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element ref="saml:AssertionIDReference"/>
      <element ref="saml:Assertion"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="Statement" type="saml:StatementAbstractType"/>
  <complexType name="StatementAbstractType" abstract="true"/>
  <element name="SubjectStatement" type="saml:SubjectStatementAbstractType"/>
  <complexType name="SubjectStatementAbstractType" abstract="true">
    <complexContent>
      <extension base="saml:StatementAbstractType">
        <sequence>
          <element ref="saml:Subject"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="Subject" type="saml:SubjectType"/>
  <complexType name="SubjectType">
    <choice>
      <sequence>
        <element ref="saml:NameIdentifier"/>
        <element ref="saml:SubjectConfirmation" minOccurs="0"/>
      </sequence>
      <element ref="saml:SubjectConfirmation"/>
    </choice>
  </complexType>
  <element name="NameIdentifier" type="saml:NameIdentifierType"/>
  <complexType name="NameIdentifierType">
    <simpleContent>
      <extension base="string">
        <attribute name="NameQualifier" type="string" use="optional"/>
        <attribute name="Format" type="anyURI" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <element name="SubjectConfirmation" type="saml:SubjectConfirmationType"/>
  <complexType name="SubjectConfirmationType">
    <sequence>
      <element ref="saml:ConfirmationMethod" maxOccurs="unbounded"/>
      <element ref="saml:SubjectConfirmationData" minOccurs="0"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
    </sequence>
  </complexType>
  <element name="SubjectConfirmationData" type="anyType"/>
  <element name="ConfirmationMethod" type="anyURI"/>
  <element name="AuthenticationStatement" type="saml:AuthenticationStatementType"/>
  <complexType name="AuthenticationStatementType">
    <complexContent>
      <extension base="saml:SubjectStatementAbstractType">
        <sequence>
          <element ref="saml:SubjectLocality" minOccurs="0"/>
          <element ref="saml:AuthorityBinding" minOccurs="0" maxOccurs="unbounded"/>
        </sequence>
        <attribute name="AuthenticationMethod" type="anyURI" use="required"/>
        <attribute name="AuthenticationInstant" type="dateTime" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="SubjectLocality" type="saml:SubjectLocalityType"/>
  <complexType name="SubjectLocalityType">
    <attribute name="IPAddress" type="string" use="optional"/>
    <attribute name="DNSAddress" type="string" use="optional"/>
  </complexType>
  <element name="AuthorityBinding" type="saml:AuthorityBindingType"/>
  <complexType name="AuthorityBindingType">
    <attribute name="AuthorityKind" type="QName" use="required"/>
    <attribute name="Location" type="anyURI" use="required"/>
    <attribute name="Binding" type="anyURI" use="required"/>
  </complexType>
  <element name="AuthorizationDecisionStatement" type="saml:AuthorizationDecisionStatementType"/>
  <complexType name="AuthorizationDecisionStatementType">
    <complexContent>
      <extension base="saml:SubjectStatementAbstractType">
        <sequence>
          <element ref="saml:Action" maxOccurs="unbounded"/>
          <element ref="saml:Evidence" minOccurs="0"/>
        </sequence>
        <attribute name="Resource" type="anyURI" use="required"/>
        <attribute name="Decision" type="saml:DecisionType" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Action" type="saml:ActionType"/>
  <complexType name="ActionType">
    <simpleContent>
      <extension base="string">
        <attribute name="Namespace" type="anyURI"/>
      </extension>
    </simpleContent>
  </complexType>
  <element name="Evidence" type="saml:EvidenceType"/>
  <complexType name="EvidenceType">
    <choice maxOccurs="unbounded">
      <element ref="saml:AssertionIDReference"/>
      <element ref="saml:Assertion"/>
    </choice>
  </complexType>
  <element name="AttributeStatement" type="saml:AttributeStatementType"/>
  <complexType name="AttributeStatementType">
    <complexContent>
      <extension base="saml:SubjectStatementAbstractType">
        <sequence>
          <element ref="saml:Attribute" maxOccurs="unbounded"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AttributeDesignator" type="saml:AttributeDesignatorType"/>
  <complexType name="AttributeDesignatorType">
    <attribute name="AttributeName" type="string" use="required"/>
    <attribute name="AttributeNamespace" type="anyURI" use="required"/>
  </complexType>
  <element name="Attribute" type="saml:AttributeType"/>
  <complexType name="AttributeType">
    <complexContent>
      <extension base="saml:AttributeDesignatorType">
        <sequence>
          <element ref="saml:AttributeValue" maxOccurs="unbounded"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AttributeValue" type="anyType"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://www.w3.org/2001/xml.xsd</con:url><con:content><![CDATA[<?xml-stylesheet href="../2008/09/xsd.xsl" type="text/xsl"?>
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
  <xs:annotation>
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation>
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>..\services\schema\oasis\oasis-dss-core-schema-v1.0-os.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="urn:oasis:names:tc:dss:1.0:core:schema" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:dss="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:saml="urn:oasis:names:tc:SAML:1.0:assertion">
  <xs:annotation>
    <xs:documentation xml:lang="en">This Schema defines the Digital Signature Service Core Protocols, Elements, and Bindings Committee Specification version 1.0 release 1</xs:documentation>
  </xs:annotation>
  <xs:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd"/>
  <xs:import namespace="urn:oasis:names:tc:SAML:1.0:assertion" schemaLocation="http://www.oasis-open.org/committees/download.php/3408/oasis-sstc-saml-schema-protocol-1.1.xsd"/>
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/xml.xsd"/>
  <xs:complexType name="AnyType">
    <xs:sequence>
      <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InternationalStringType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute ref="xml:lang" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="InputDocuments">
    <xs:complexType>
      <xs:sequence>
        <xs:choice maxOccurs="unbounded">
          <xs:element ref="dss:Document"/>
          <xs:element ref="dss:TransformedData"/>
          <xs:element ref="dss:DocumentHash"/>
          <xs:element name="Other" type="dss:AnyType"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="DocumentBaseType" abstract="true">
    <xs:attribute name="ID" type="xs:ID" use="optional"/>
    <xs:attribute name="RefURI" type="xs:anyURI" use="optional"/>
    <xs:attribute name="RefType" type="xs:anyURI" use="optional"/>
    <xs:attribute name="SchemaRefs" type="xs:IDREFS" use="optional"/>
  </xs:complexType>
  <xs:element name="Document" type="dss:DocumentType"/>
  <xs:complexType name="DocumentType">
    <xs:complexContent>
      <xs:extension base="dss:DocumentBaseType">
        <xs:choice>
          <xs:element name="InlineXML" type="dss:InlineXMLType"/>
          <xs:element name="Base64XML" type="xs:base64Binary"/>
          <xs:element name="EscapedXML" type="xs:string"/>
          <xs:element ref="dss:Base64Data"/>
          <xs:element ref="dss:AttachmentReference"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="Base64Data">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:base64Binary">
          <xs:attribute name="MimeType" type="xs:string" use="optional"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="InlineXMLType">
    <xs:sequence>
      <xs:any processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="ignorePIs" type="xs:boolean" use="optional" default="true"/>
    <xs:attribute name="ignoreComments" type="xs:boolean" use="optional" default="true"/>
  </xs:complexType>
  <xs:element name="TransformedData">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:DocumentBaseType">
          <xs:sequence>
            <xs:element ref="ds:Transforms" minOccurs="0"/>
            <xs:element ref="dss:Base64Data"/>
          </xs:sequence>
          <xs:attribute name="WhichReference" type="xs:integer" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="DocumentHash">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:DocumentBaseType">
          <xs:sequence>
            <xs:element ref="ds:Transforms" minOccurs="0"/>
            <xs:element ref="ds:DigestMethod" minOccurs="0"/>
            <xs:element ref="ds:DigestValue"/>
          </xs:sequence>
          <xs:attribute name="WhichReference" type="xs:integer" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignatureObject">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="ds:Signature"/>
          <xs:element ref="dss:Timestamp"/>
          <xs:element ref="dss:Base64Signature"/>
          <xs:element ref="dss:SignaturePtr"/>
          <xs:element name="Other" type="dss:AnyType"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="SchemaRefs" type="xs:IDREFS" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Base64Signature">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:base64Binary">
          <xs:attribute name="Type" type="xs:anyURI"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignaturePtr">
    <xs:complexType>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="XPath" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Result">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ResultMajor" type="xs:anyURI"/>
        <xs:element name="ResultMinor" type="xs:anyURI" minOccurs="0"/>
        <xs:element name="ResultMessage" type="dss:InternationalStringType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="OptionalInputs" type="dss:AnyType"/>
  <xs:element name="OptionalOutputs" type="dss:AnyType"/>
  <xs:element name="ServicePolicy" type="xs:anyURI"/>
  <xs:element name="ClaimedIdentity">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Name" type="saml:NameIdentifierType"/>
        <xs:element name="SupportingInfo" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Language" type="xs:language"/>
  <xs:element name="AdditionalProfile" type="xs:anyURI"/>
  <xs:element name="Schemas" type="dss:SchemasType"/>
  <xs:complexType name="SchemasType">
    <xs:sequence>
      <xs:element ref="dss:Schema" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Schema" type="dss:DocumentType"/>
  <xs:complexType name="RequestBaseType">
    <xs:sequence>
      <xs:element ref="dss:OptionalInputs" minOccurs="0"/>
      <xs:element ref="dss:InputDocuments" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="RequestID" type="xs:string" use="optional"/>
    <xs:attribute name="Profile" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:complexType name="ResponseBaseType">
    <xs:sequence>
      <xs:element ref="dss:Result"/>
      <xs:element ref="dss:OptionalOutputs" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="RequestID" type="xs:string" use="optional"/>
    <xs:attribute name="Profile" type="xs:anyURI" use="required"/>
  </xs:complexType>
  <xs:element name="Response" type="dss:ResponseBaseType"/>
  <xs:element name="SignRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:RequestBaseType"/>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignResponse">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:ResponseBaseType">
          <xs:sequence>
            <xs:element ref="dss:SignatureObject" minOccurs="0"/>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignatureType" type="xs:anyURI"/>
  <xs:element name="AddTimestamp" type="dss:UpdateSignatureInstructionType"/>
  <xs:complexType name="TimeSignatureInstructionType">
    <xs:complexContent>
      <xs:extension base="dss:UpdateSignatureInstructionType">
        <xs:attribute name="TimeStampTheGivenSignature" type="xs:boolean" use="optional" default="false"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UpdateSignatureInstructionType">
    <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:element name="IntendedAudience">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Recipient" type="saml:NameIdentifierType" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="KeySelector">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="ds:KeyInfo"/>
        <xs:element name="Other" type="dss:AnyType"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="Properties">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="SignedProperties" type="dss:PropertiesType" minOccurs="0"/>
        <xs:element name="UnsignedProperties" type="dss:PropertiesType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="PropertiesType">
    <xs:sequence>
      <xs:element ref="dss:Property" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Property">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Identifier" type="xs:anyURI"/>
        <xs:element name="Value" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="IncludeObject">
    <xs:complexType>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="hasObjectTagsAndAttributesSet" type="xs:boolean" default="false"/>
      <xs:attribute name="ObjId" type="xs:string" use="optional"/>
      <xs:attribute name="createReference" type="xs:boolean" use="optional" default="true"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignaturePlacement">
    <xs:complexType>
      <xs:choice>
        <xs:element name="XPathAfter" type="xs:string"/>
        <xs:element name="XPathFirstChildOf" type="xs:string"/>
      </xs:choice>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="CreateEnvelopedSignature" type="xs:boolean" default="true"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="DocumentWithSignature">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:Document"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignedReferences">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:SignedReference" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignedReference">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ds:Transforms" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="WhichDocument" type="xs:IDREF" use="required"/>
      <xs:attribute name="RefURI" type="xs:anyURI" use="optional"/>
      <xs:attribute name="RefId" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="VerifyRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:RequestBaseType">
          <xs:sequence>
            <xs:element ref="dss:SignatureObject" minOccurs="0"/>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="VerifyResponse" type="dss:ResponseBaseType"/>
  <xs:element name="VerifyManifestResults" type="dss:VerifyManifestResultsType"/>
  <xs:complexType name="VerifyManifestResultsType">
    <xs:sequence>
      <xs:element ref="dss:ManifestResult" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ManifestResult">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ReferenceXpath" type="xs:string"/>
        <xs:element name="Status" type="xs:anyURI"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="UseVerificationTime"/>
  <xs:complexType name="UseVerificationTimeType">
    <xs:choice>
      <xs:element name="CurrentTime"/>
      <xs:element name="SpecificTime" type="xs:dateTime"/>
      <xs:any namespace="##other"/>
    </xs:choice>
  </xs:complexType>
  <xs:element name="ReturnVerificationTimeInfo"/>
  <xs:element name="AdditionalTimeInfo" type="dss:AdditionalTimeInfoType"/>
  <xs:complexType name="AdditionalTimeInfoType">
    <xs:simpleContent>
      <xs:extension base="xs:dateTime">
        <xs:attribute name="Type" type="xs:anyURI" use="required"/>
        <xs:attribute name="Ref" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="VerificationTimeInfo" type="dss:VerificationTimeInfoType"/>
  <xs:complexType name="VerificationTimeInfoType">
    <xs:sequence>
      <xs:element name="VerificationTime" type="xs:dateTime"/>
      <xs:element ref="dss:AdditionalTimeInfo" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AdditionalKeyInfo">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ds:KeyInfo"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ReturnProcessingDetails"/>
  <xs:element name="ProcessingDetails">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ValidDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="IndeterminateDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="InvalidDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="DetailType">
    <xs:sequence>
      <xs:element name="Code" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="Message" type="dss:InternationalStringType" minOccurs="0"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:anyURI" use="required"/>
  </xs:complexType>
  <xs:element name="ReturnSigningTimeInfo"/>
  <xs:element name="SigningTimeInfo" type="dss:SigningTimeInfoType"/>
  <xs:complexType name="SigningTimeInfoType">
    <xs:sequence>
      <xs:element name="SigningTime" type="xs:dateTime"/>
      <xs:element name="SigningTimeBoundaries" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="LowerBoundary" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="UpperBoundary" type="xs:dateTime" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ReturnSignerIdentity"/>
  <xs:element name="SignerIdentity" type="saml:NameIdentifierType"/>
  <xs:element name="ReturnUpdatedSignature">
    <xs:complexType>
      <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="UpdatedSignature" type="dss:UpdatedSignatureType"/>
  <xs:complexType name="UpdatedSignatureType">
    <xs:sequence>
      <xs:element ref="dss:SignatureObject"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:element name="ReturnTransformedDocument">
    <xs:complexType>
      <xs:attribute name="WhichReference" type="xs:integer" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="TransformedDocument">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:Document"/>
      </xs:sequence>
      <xs:attribute name="WhichReference" type="xs:integer" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ReturnTimestampedSignature" type="dss:UpdateSignatureInstructionType"/>
  <xs:element name="TimestampedSignature" type="dss:UpdatedSignatureType"/>
  <xs:element name="Timestamp">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="ds:Signature"/>
        <xs:element name="RFC3161TimeStampToken" type="xs:base64Binary"/>
        <xs:element name="Other" type="dss:AnyType"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="TstInfo">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="SerialNumber" type="xs:integer"/>
        <xs:element name="CreationTime" type="xs:dateTime"/>
        <xs:element name="Policy" type="xs:anyURI" minOccurs="0"/>
        <xs:element name="ErrorBound" type="xs:duration" minOccurs="0"/>
        <xs:element name="Ordered" type="xs:boolean" default="false" minOccurs="0"/>
        <xs:element name="TSA" type="saml:NameIdentifierType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="RequesterIdentity">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Name" type="saml:NameIdentifierType"/>
        <xs:element name="SupportingInfo" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="AttachmentReference" type="dss:AttachmentReferenceType"/>
  <xs:complexType name="AttachmentReferenceType">
    <xs:sequence minOccurs="0">
      <xs:element ref="ds:DigestMethod"/>
      <xs:element ref="ds:DigestValue"/>
    </xs:sequence>
    <xs:attribute name="AttRefURI" type="xs:anyURI"/>
    <xs:attribute name="MimeType" type="xs:string" use="optional"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="pending" bindingOperationName="pending" type="Request-Response" outputName="pendingResponse" inputName="pending" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="PendingRequest (Poll)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>cartel.ch:OnDemand-Advanced</Name>
               </ClaimedIdentity>
               <async:ResponseID>a67f584c-4a76-4f1d-bd1d-bc05f9b81b0a</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.ais.swisscom.com/IDigitalSignatureService/pending"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="sign" bindingOperationName="sign" type="Request-Response" outputName="signResponse" inputName="sign" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Timestamp [synch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>cartel.ch</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>GcXfOzOP8GsBu7odeT1w3GnMedppEWvngCQ7Ef1IBMA=</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.ais.swisscom.com/IDigitalSignatureService/sign"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Static [synch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>cartel.ch:kp2-cartel.ch</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>GcXfOzOP8GsBu7odeT1w3GnMedppEWvngCQ7Ef1IBMA=</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.ais.swisscom.com/IDigitalSignatureService/sign"/><con:wsrmConfig version="1.2"/></con:call><con:call name="OnDemand [synch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>cartel.ch:OnDemand-Advanced</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>GcXfOzOP8GsBu7odeT1w3GnMedppEWvngCQ7Ef1IBMA=</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.ais.swisscom.com/IDigitalSignatureService/sign"/><con:wsrmConfig version="1.2"/></con:call><con:call name="OnDemand MID [synch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>cartel.ch:OnDemand-Advanced</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.0">
                        <sc:MSISDN>+41790000000</sc:MSISDN>
                        <sc:Message>SoapUI: Please Authenticate with your PIN</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>GcXfOzOP8GsBu7odeT1w3GnMedppEWvngCQ7Ef1IBMA=</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.ais.swisscom.com/IDigitalSignatureService/sign"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Timestamp [asynch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>cartel.ch</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>GcXfOzOP8GsBu7odeT1w3GnMedppEWvngCQ7Ef1IBMA=</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.ais.swisscom.com/IDigitalSignatureService/sign"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Timestamp BATCH [synch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>cartel.ch</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="sco-case1.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>1WON4H3Hrinf7LYRNmhV6Uf7apdUvuYEsmhxAklxumA=</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="sco-case2.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>PMbaV562vh2HjLeEQ+Xz2qYAqXNPylp/KrHHnlZrmag=</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="sco-case3.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>qQYswQVETwZqPEV8HIxHhfP2+ID65jD4lWQjzrXXFAs=</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.ais.swisscom.com/IDigitalSignatureService/sign"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Static BATCH [synch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>cartel.ch:kp2-cartel.ch</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="sco-case1.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>1WON4H3Hrinf7LYRNmhV6Uf7apdUvuYEsmhxAklxumA=</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="sco-case2.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>PMbaV562vh2HjLeEQ+Xz2qYAqXNPylp/KrHHnlZrmag=</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="sco-case3.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>qQYswQVETwZqPEV8HIxHhfP2+ID65jD4lWQjzrXXFAs=</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.ais.swisscom.com/IDigitalSignatureService/sign"/><con:wsrmConfig version="1.2"/></con:call><con:call name="OnDemand BATCH [synch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>cartel.ch:OnDemand-Advanced</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="sco-case1.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>1WON4H3Hrinf7LYRNmhV6Uf7apdUvuYEsmhxAklxumA=</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="sco-case2.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>PMbaV562vh2HjLeEQ+Xz2qYAqXNPylp/KrHHnlZrmag=</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="sco-case3.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>qQYswQVETwZqPEV8HIxHhfP2+ID65jD4lWQjzrXXFAs=</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.ais.swisscom.com/IDigitalSignatureService/sign"/><con:wsrmConfig version="1.2"/></con:call><con:call name="OnDemand MID BATCH [synch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>cartel.ch:OnDemand-Advanced</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.0">
                        <sc:MSISDN>+41790000000</sc:MSISDN>
                        <sc:Message>SoapUI: Please Authenticate with your PIN</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="sco-case1.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>1WON4H3Hrinf7LYRNmhV6Uf7apdUvuYEsmhxAklxumA=</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="sco-case2.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>PMbaV562vh2HjLeEQ+Xz2qYAqXNPylp/KrHHnlZrmag=</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="sco-case3.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>qQYswQVETwZqPEV8HIxHhfP2+ID65jD4lWQjzrXXFAs=</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.ais.swisscom.com/IDigitalSignatureService/sign"/><con:wsrmConfig version="1.2"/></con:call><con:call name="OnDemand MID [asynch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>cartel.ch:OnDemand-Advanced</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.0">
                        <sc:MSISDN>+41790000000</sc:MSISDN>
                        <sc:Message>SoapUI: Please Authenticate with your PIN</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>GcXfOzOP8GsBu7odeT1w3GnMedppEWvngCQ7Ef1IBMA=</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AIS RESTful" type="rest" basePath="/DSS-Server/rs" definitionUrl="..\services\wadl\aisService.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="../services/wadl/aisService.wadl"><con:part><con:url>../services/wadl/aisService.wadl</con:url><con:content><![CDATA[<application xmlns="http://wadl.dev.java.net/2009/02" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:prefix1="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:prefix2="urn:oasis:names:tc:dss:1.0:core:schema">
  <grammars>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://www.w3.org/XML/1998/namespace">
      <xs:attribute name="lang" type="xs:string"/>
    </xs:schema>
    <include href="../schema/oasis/oasis-dss-core-schema-v1.0-os.xsd"/>
    <include href="../schema/oasis/oasis-dss-profiles-asynchronous-processing-schema-v1.0-os.xsd"/>
  </grammars>
  <resources base="https://ais.pre.swissdigicert.ch/DSS-Server/rs">
    <resource path="/v1.0">
      <resource path="/pending">
        <method name="POST">
          <request>
            <representation mediaType="application/xml" element="prefix1:PendingRequest"/>
            <representation mediaType="application/json"/>
          </request>
          <response>
            <representation mediaType="application/xml" element="prefix2:Response"/>
            <representation mediaType="application/json"/>
          </response>
        </method>
      </resource>
      <resource path="/sign">
        <method name="POST">
          <request>
            <representation mediaType="application/xml" element="prefix2:SignRequest"/>
            <representation mediaType="application/json"/>
          </request>
          <response>
            <representation mediaType="application/xml" element="prefix2:Response"/>
            <representation mediaType="application/json"/>
          </response>
        </method>
      </resource>
    </resource>
  </resources>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>..\services\schema\oasis\oasis-dss-core-schema-v1.0-os.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="urn:oasis:names:tc:dss:1.0:core:schema" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:dss="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:saml="urn:oasis:names:tc:SAML:1.0:assertion">
  <xs:annotation>
    <xs:documentation xml:lang="en">This Schema defines the Digital Signature Service Core Protocols, Elements, and Bindings Committee Specification version 1.0 release 1</xs:documentation>
  </xs:annotation>
  <xs:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd"/>
  <xs:import namespace="urn:oasis:names:tc:SAML:1.0:assertion" schemaLocation="http://www.oasis-open.org/committees/download.php/3408/oasis-sstc-saml-schema-protocol-1.1.xsd"/>
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/xml.xsd"/>
  <xs:complexType name="AnyType">
    <xs:sequence>
      <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InternationalStringType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute ref="xml:lang" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="InputDocuments">
    <xs:complexType>
      <xs:sequence>
        <xs:choice maxOccurs="unbounded">
          <xs:element ref="dss:Document"/>
          <xs:element ref="dss:TransformedData"/>
          <xs:element ref="dss:DocumentHash"/>
          <xs:element name="Other" type="dss:AnyType"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="DocumentBaseType" abstract="true">
    <xs:attribute name="ID" type="xs:ID" use="optional"/>
    <xs:attribute name="RefURI" type="xs:anyURI" use="optional"/>
    <xs:attribute name="RefType" type="xs:anyURI" use="optional"/>
    <xs:attribute name="SchemaRefs" type="xs:IDREFS" use="optional"/>
  </xs:complexType>
  <xs:element name="Document" type="dss:DocumentType"/>
  <xs:complexType name="DocumentType">
    <xs:complexContent>
      <xs:extension base="dss:DocumentBaseType">
        <xs:choice>
          <xs:element name="InlineXML" type="dss:InlineXMLType"/>
          <xs:element name="Base64XML" type="xs:base64Binary"/>
          <xs:element name="EscapedXML" type="xs:string"/>
          <xs:element ref="dss:Base64Data"/>
          <xs:element ref="dss:AttachmentReference"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="Base64Data">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:base64Binary">
          <xs:attribute name="MimeType" type="xs:string" use="optional"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="InlineXMLType">
    <xs:sequence>
      <xs:any processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="ignorePIs" type="xs:boolean" use="optional" default="true"/>
    <xs:attribute name="ignoreComments" type="xs:boolean" use="optional" default="true"/>
  </xs:complexType>
  <xs:element name="TransformedData">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:DocumentBaseType">
          <xs:sequence>
            <xs:element ref="ds:Transforms" minOccurs="0"/>
            <xs:element ref="dss:Base64Data"/>
          </xs:sequence>
          <xs:attribute name="WhichReference" type="xs:integer" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="DocumentHash">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:DocumentBaseType">
          <xs:sequence>
            <xs:element ref="ds:Transforms" minOccurs="0"/>
            <xs:element ref="ds:DigestMethod" minOccurs="0"/>
            <xs:element ref="ds:DigestValue"/>
          </xs:sequence>
          <xs:attribute name="WhichReference" type="xs:integer" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignatureObject">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="ds:Signature"/>
          <xs:element ref="dss:Timestamp"/>
          <xs:element ref="dss:Base64Signature"/>
          <xs:element ref="dss:SignaturePtr"/>
          <xs:element name="Other" type="dss:AnyType"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="SchemaRefs" type="xs:IDREFS" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Base64Signature">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:base64Binary">
          <xs:attribute name="Type" type="xs:anyURI"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignaturePtr">
    <xs:complexType>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="XPath" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Result">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ResultMajor" type="xs:anyURI"/>
        <xs:element name="ResultMinor" type="xs:anyURI" minOccurs="0"/>
        <xs:element name="ResultMessage" type="dss:InternationalStringType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="OptionalInputs" type="dss:AnyType"/>
  <xs:element name="OptionalOutputs" type="dss:AnyType"/>
  <xs:element name="ServicePolicy" type="xs:anyURI"/>
  <xs:element name="ClaimedIdentity">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Name" type="saml:NameIdentifierType"/>
        <xs:element name="SupportingInfo" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Language" type="xs:language"/>
  <xs:element name="AdditionalProfile" type="xs:anyURI"/>
  <xs:element name="Schemas" type="dss:SchemasType"/>
  <xs:complexType name="SchemasType">
    <xs:sequence>
      <xs:element ref="dss:Schema" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Schema" type="dss:DocumentType"/>
  <xs:complexType name="RequestBaseType">
    <xs:sequence>
      <xs:element ref="dss:OptionalInputs" minOccurs="0"/>
      <xs:element ref="dss:InputDocuments" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="RequestID" type="xs:string" use="optional"/>
    <xs:attribute name="Profile" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:complexType name="ResponseBaseType">
    <xs:sequence>
      <xs:element ref="dss:Result"/>
      <xs:element ref="dss:OptionalOutputs" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="RequestID" type="xs:string" use="optional"/>
    <xs:attribute name="Profile" type="xs:anyURI" use="required"/>
  </xs:complexType>
  <xs:element name="Response" type="dss:ResponseBaseType"/>
  <xs:element name="SignRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:RequestBaseType"/>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignResponse">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:ResponseBaseType">
          <xs:sequence>
            <xs:element ref="dss:SignatureObject" minOccurs="0"/>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignatureType" type="xs:anyURI"/>
  <xs:element name="AddTimestamp" type="dss:UpdateSignatureInstructionType"/>
  <xs:complexType name="TimeSignatureInstructionType">
    <xs:complexContent>
      <xs:extension base="dss:UpdateSignatureInstructionType">
        <xs:attribute name="TimeStampTheGivenSignature" type="xs:boolean" use="optional" default="false"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UpdateSignatureInstructionType">
    <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:element name="IntendedAudience">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Recipient" type="saml:NameIdentifierType" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="KeySelector">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="ds:KeyInfo"/>
        <xs:element name="Other" type="dss:AnyType"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="Properties">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="SignedProperties" type="dss:PropertiesType" minOccurs="0"/>
        <xs:element name="UnsignedProperties" type="dss:PropertiesType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="PropertiesType">
    <xs:sequence>
      <xs:element ref="dss:Property" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Property">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Identifier" type="xs:anyURI"/>
        <xs:element name="Value" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="IncludeObject">
    <xs:complexType>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="hasObjectTagsAndAttributesSet" type="xs:boolean" default="false"/>
      <xs:attribute name="ObjId" type="xs:string" use="optional"/>
      <xs:attribute name="createReference" type="xs:boolean" use="optional" default="true"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignaturePlacement">
    <xs:complexType>
      <xs:choice>
        <xs:element name="XPathAfter" type="xs:string"/>
        <xs:element name="XPathFirstChildOf" type="xs:string"/>
      </xs:choice>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="CreateEnvelopedSignature" type="xs:boolean" default="true"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="DocumentWithSignature">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:Document"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignedReferences">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:SignedReference" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignedReference">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ds:Transforms" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="WhichDocument" type="xs:IDREF" use="required"/>
      <xs:attribute name="RefURI" type="xs:anyURI" use="optional"/>
      <xs:attribute name="RefId" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="VerifyRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:RequestBaseType">
          <xs:sequence>
            <xs:element ref="dss:SignatureObject" minOccurs="0"/>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="VerifyResponse" type="dss:ResponseBaseType"/>
  <xs:element name="VerifyManifestResults" type="dss:VerifyManifestResultsType"/>
  <xs:complexType name="VerifyManifestResultsType">
    <xs:sequence>
      <xs:element ref="dss:ManifestResult" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ManifestResult">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ReferenceXpath" type="xs:string"/>
        <xs:element name="Status" type="xs:anyURI"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="UseVerificationTime"/>
  <xs:complexType name="UseVerificationTimeType">
    <xs:choice>
      <xs:element name="CurrentTime"/>
      <xs:element name="SpecificTime" type="xs:dateTime"/>
      <xs:any namespace="##other"/>
    </xs:choice>
  </xs:complexType>
  <xs:element name="ReturnVerificationTimeInfo"/>
  <xs:element name="AdditionalTimeInfo" type="dss:AdditionalTimeInfoType"/>
  <xs:complexType name="AdditionalTimeInfoType">
    <xs:simpleContent>
      <xs:extension base="xs:dateTime">
        <xs:attribute name="Type" type="xs:anyURI" use="required"/>
        <xs:attribute name="Ref" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="VerificationTimeInfo" type="dss:VerificationTimeInfoType"/>
  <xs:complexType name="VerificationTimeInfoType">
    <xs:sequence>
      <xs:element name="VerificationTime" type="xs:dateTime"/>
      <xs:element ref="dss:AdditionalTimeInfo" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AdditionalKeyInfo">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ds:KeyInfo"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ReturnProcessingDetails"/>
  <xs:element name="ProcessingDetails">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ValidDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="IndeterminateDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="InvalidDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="DetailType">
    <xs:sequence>
      <xs:element name="Code" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="Message" type="dss:InternationalStringType" minOccurs="0"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:anyURI" use="required"/>
  </xs:complexType>
  <xs:element name="ReturnSigningTimeInfo"/>
  <xs:element name="SigningTimeInfo" type="dss:SigningTimeInfoType"/>
  <xs:complexType name="SigningTimeInfoType">
    <xs:sequence>
      <xs:element name="SigningTime" type="xs:dateTime"/>
      <xs:element name="SigningTimeBoundaries" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="LowerBoundary" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="UpperBoundary" type="xs:dateTime" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ReturnSignerIdentity"/>
  <xs:element name="SignerIdentity" type="saml:NameIdentifierType"/>
  <xs:element name="ReturnUpdatedSignature">
    <xs:complexType>
      <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="UpdatedSignature" type="dss:UpdatedSignatureType"/>
  <xs:complexType name="UpdatedSignatureType">
    <xs:sequence>
      <xs:element ref="dss:SignatureObject"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:element name="ReturnTransformedDocument">
    <xs:complexType>
      <xs:attribute name="WhichReference" type="xs:integer" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="TransformedDocument">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:Document"/>
      </xs:sequence>
      <xs:attribute name="WhichReference" type="xs:integer" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ReturnTimestampedSignature" type="dss:UpdateSignatureInstructionType"/>
  <xs:element name="TimestampedSignature" type="dss:UpdatedSignatureType"/>
  <xs:element name="Timestamp">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="ds:Signature"/>
        <xs:element name="RFC3161TimeStampToken" type="xs:base64Binary"/>
        <xs:element name="Other" type="dss:AnyType"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="TstInfo">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="SerialNumber" type="xs:integer"/>
        <xs:element name="CreationTime" type="xs:dateTime"/>
        <xs:element name="Policy" type="xs:anyURI" minOccurs="0"/>
        <xs:element name="ErrorBound" type="xs:duration" minOccurs="0"/>
        <xs:element name="Ordered" type="xs:boolean" default="false" minOccurs="0"/>
        <xs:element name="TSA" type="saml:NameIdentifierType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="RequesterIdentity">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Name" type="saml:NameIdentifierType"/>
        <xs:element name="SupportingInfo" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="AttachmentReference" type="dss:AttachmentReferenceType"/>
  <xs:complexType name="AttachmentReferenceType">
    <xs:sequence minOccurs="0">
      <xs:element ref="ds:DigestMethod"/>
      <xs:element ref="ds:DigestValue"/>
    </xs:sequence>
    <xs:attribute name="AttRefURI" type="xs:anyURI"/>
    <xs:attribute name="MimeType" type="xs:string" use="optional"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!DOCTYPE schema PUBLIC "-//W3C//DTD XMLSchema 200102//EN" "http://www.w3.org/2001/XMLSchema.dtd">
<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" version="0.1" elementFormDefault="qualified" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"></restriction>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" minOccurs="0" type="ds:HMACOutputLengthType"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
      <element name="XPath" type="string"/>
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any processContents="lax" namespace="##other"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <choice>
      <sequence>
        <element name="PGPKeyID" type="base64Binary"/>
        <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <sequence>
        <element name="PGPKeyPacket" type="base64Binary"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
    </choice>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <!--add a grep facet-->
    <attribute name="Encoding" type="anyURI" use="optional"/>
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://www.oasis-open.org/committees/download.php/3408/oasis-sstc-saml-schema-protocol-1.1.xsd</con:url><con:content><![CDATA[<schema targetNamespace="urn:oasis:names:tc:SAML:1.0:assertion" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="1.1" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:saml="urn:oasis:names:tc:SAML:1.0:assertion" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd"/>
  <annotation>
    <documentation>Document identifier: oasis-sstc-saml-schema-assertion-1.1
                Location: http://www.oasis-open.org/committees/documents.php?wg_abbrev=security
                Revision history:
                V1.0 (November, 2002):
                  Initial standard schema.
                V1.1 (September, 2003):
                  * Note that V1.1 of this schema has the same XML namespace as V1.0.
                  Rebased ID content directly on XML Schema types
                  Added DoNotCacheCondition element and DoNotCacheConditionType</documentation>
  </annotation>
  <simpleType name="DecisionType">
    <restriction base="string">
      <enumeration value="Permit"/>
      <enumeration value="Deny"/>
      <enumeration value="Indeterminate"/>
    </restriction>
  </simpleType>
  <element name="AssertionIDReference" type="NCName"/>
  <element name="Assertion" type="saml:AssertionType"/>
  <complexType name="AssertionType">
    <sequence>
      <element ref="saml:Conditions" minOccurs="0"/>
      <element ref="saml:Advice" minOccurs="0"/>
      <choice maxOccurs="unbounded">
        <element ref="saml:Statement"/>
        <element ref="saml:SubjectStatement"/>
        <element ref="saml:AuthenticationStatement"/>
        <element ref="saml:AuthorizationDecisionStatement"/>
        <element ref="saml:AttributeStatement"/>
      </choice>
      <element ref="ds:Signature" minOccurs="0"/>
    </sequence>
    <attribute name="MajorVersion" type="integer" use="required"/>
    <attribute name="MinorVersion" type="integer" use="required"/>
    <attribute name="AssertionID" type="ID" use="required"/>
    <attribute name="Issuer" type="string" use="required"/>
    <attribute name="IssueInstant" type="dateTime" use="required"/>
  </complexType>
  <element name="Conditions" type="saml:ConditionsType"/>
  <complexType name="ConditionsType">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element ref="saml:AudienceRestrictionCondition"/>
      <element ref="saml:DoNotCacheCondition"/>
      <element ref="saml:Condition"/>
    </choice>
    <attribute name="NotBefore" type="dateTime" use="optional"/>
    <attribute name="NotOnOrAfter" type="dateTime" use="optional"/>
  </complexType>
  <element name="Condition" type="saml:ConditionAbstractType"/>
  <complexType name="ConditionAbstractType" abstract="true"/>
  <element name="AudienceRestrictionCondition" type="saml:AudienceRestrictionConditionType"/>
  <complexType name="AudienceRestrictionConditionType">
    <complexContent>
      <extension base="saml:ConditionAbstractType">
        <sequence>
          <element ref="saml:Audience" maxOccurs="unbounded"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="Audience" type="anyURI"/>
  <element name="DoNotCacheCondition" type="saml:DoNotCacheConditionType"/>
  <complexType name="DoNotCacheConditionType">
    <complexContent>
      <extension base="saml:ConditionAbstractType"/>
    </complexContent>
  </complexType>
  <element name="Advice" type="saml:AdviceType"/>
  <complexType name="AdviceType">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element ref="saml:AssertionIDReference"/>
      <element ref="saml:Assertion"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="Statement" type="saml:StatementAbstractType"/>
  <complexType name="StatementAbstractType" abstract="true"/>
  <element name="SubjectStatement" type="saml:SubjectStatementAbstractType"/>
  <complexType name="SubjectStatementAbstractType" abstract="true">
    <complexContent>
      <extension base="saml:StatementAbstractType">
        <sequence>
          <element ref="saml:Subject"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="Subject" type="saml:SubjectType"/>
  <complexType name="SubjectType">
    <choice>
      <sequence>
        <element ref="saml:NameIdentifier"/>
        <element ref="saml:SubjectConfirmation" minOccurs="0"/>
      </sequence>
      <element ref="saml:SubjectConfirmation"/>
    </choice>
  </complexType>
  <element name="NameIdentifier" type="saml:NameIdentifierType"/>
  <complexType name="NameIdentifierType">
    <simpleContent>
      <extension base="string">
        <attribute name="NameQualifier" type="string" use="optional"/>
        <attribute name="Format" type="anyURI" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <element name="SubjectConfirmation" type="saml:SubjectConfirmationType"/>
  <complexType name="SubjectConfirmationType">
    <sequence>
      <element ref="saml:ConfirmationMethod" maxOccurs="unbounded"/>
      <element ref="saml:SubjectConfirmationData" minOccurs="0"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
    </sequence>
  </complexType>
  <element name="SubjectConfirmationData" type="anyType"/>
  <element name="ConfirmationMethod" type="anyURI"/>
  <element name="AuthenticationStatement" type="saml:AuthenticationStatementType"/>
  <complexType name="AuthenticationStatementType">
    <complexContent>
      <extension base="saml:SubjectStatementAbstractType">
        <sequence>
          <element ref="saml:SubjectLocality" minOccurs="0"/>
          <element ref="saml:AuthorityBinding" minOccurs="0" maxOccurs="unbounded"/>
        </sequence>
        <attribute name="AuthenticationMethod" type="anyURI" use="required"/>
        <attribute name="AuthenticationInstant" type="dateTime" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="SubjectLocality" type="saml:SubjectLocalityType"/>
  <complexType name="SubjectLocalityType">
    <attribute name="IPAddress" type="string" use="optional"/>
    <attribute name="DNSAddress" type="string" use="optional"/>
  </complexType>
  <element name="AuthorityBinding" type="saml:AuthorityBindingType"/>
  <complexType name="AuthorityBindingType">
    <attribute name="AuthorityKind" type="QName" use="required"/>
    <attribute name="Location" type="anyURI" use="required"/>
    <attribute name="Binding" type="anyURI" use="required"/>
  </complexType>
  <element name="AuthorizationDecisionStatement" type="saml:AuthorizationDecisionStatementType"/>
  <complexType name="AuthorizationDecisionStatementType">
    <complexContent>
      <extension base="saml:SubjectStatementAbstractType">
        <sequence>
          <element ref="saml:Action" maxOccurs="unbounded"/>
          <element ref="saml:Evidence" minOccurs="0"/>
        </sequence>
        <attribute name="Resource" type="anyURI" use="required"/>
        <attribute name="Decision" type="saml:DecisionType" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Action" type="saml:ActionType"/>
  <complexType name="ActionType">
    <simpleContent>
      <extension base="string">
        <attribute name="Namespace" type="anyURI"/>
      </extension>
    </simpleContent>
  </complexType>
  <element name="Evidence" type="saml:EvidenceType"/>
  <complexType name="EvidenceType">
    <choice maxOccurs="unbounded">
      <element ref="saml:AssertionIDReference"/>
      <element ref="saml:Assertion"/>
    </choice>
  </complexType>
  <element name="AttributeStatement" type="saml:AttributeStatementType"/>
  <complexType name="AttributeStatementType">
    <complexContent>
      <extension base="saml:SubjectStatementAbstractType">
        <sequence>
          <element ref="saml:Attribute" maxOccurs="unbounded"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AttributeDesignator" type="saml:AttributeDesignatorType"/>
  <complexType name="AttributeDesignatorType">
    <attribute name="AttributeName" type="string" use="required"/>
    <attribute name="AttributeNamespace" type="anyURI" use="required"/>
  </complexType>
  <element name="Attribute" type="saml:AttributeType"/>
  <complexType name="AttributeType">
    <complexContent>
      <extension base="saml:AttributeDesignatorType">
        <sequence>
          <element ref="saml:AttributeValue" maxOccurs="unbounded"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AttributeValue" type="anyType"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://www.w3.org/2001/xml.xsd</con:url><con:content><![CDATA[<?xml-stylesheet href="../2008/09/xsd.xsl" type="text/xsl"?>
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
  <xs:annotation>
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation>
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>..\services\schema\oasis\oasis-dss-profiles-asynchronous-processing-schema-v1.0-os.xsd</con:url><con:content><![CDATA[<!---->
<!--Schema defining the additional elements used for asynchronous processing.-->
<!--This schema extends the OASIS DSS core schema.-->
<!---->
<!--version : cd-r2, 12. Aug. 2006-->
<!--author  : andreas kuehne, kuehne@klup.de-->
<!---->
<xs:schema targetNamespace="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:dss="urn:oasis:names:tc:dss:1.0:core:schema">
  <xs:import namespace="urn:oasis:names:tc:dss:1.0:core:schema" schemaLocation="http://docs.oasis-open.org/dss/v1.0/oasis-dss-core-schema-v1.0-os.xsd"/>
  <!--Additional requests required for asynch protocol-->
  <xs:element name="PendingRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:RequestBaseType"/>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="ResponseID">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://docs.oasis-open.org/dss/v1.0/oasis-dss-core-schema-v1.0-os.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="urn:oasis:names:tc:dss:1.0:core:schema" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:dss="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:saml="urn:oasis:names:tc:SAML:1.0:assertion">
  <xs:annotation>
    <xs:documentation xml:lang="en">This Schema defines the Digital Signature Service Core Protocols, Elements, and Bindings Committee Specification version 1.0 release 1</xs:documentation>
  </xs:annotation>
  <xs:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd"/>
  <xs:import namespace="urn:oasis:names:tc:SAML:1.0:assertion" schemaLocation="http://www.oasis-open.org/committees/download.php/3408/oasis-sstc-saml-schema-protocol-1.1.xsd"/>
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/xml.xsd"/>
  <xs:complexType name="AnyType">
    <xs:sequence>
      <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InternationalStringType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute ref="xml:lang" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="InputDocuments">
    <xs:complexType>
      <xs:sequence>
        <xs:choice maxOccurs="unbounded">
          <xs:element ref="dss:Document"/>
          <xs:element ref="dss:TransformedData"/>
          <xs:element ref="dss:DocumentHash"/>
          <xs:element name="Other" type="dss:AnyType"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="DocumentBaseType" abstract="true">
    <xs:attribute name="ID" type="xs:ID" use="optional"/>
    <xs:attribute name="RefURI" type="xs:anyURI" use="optional"/>
    <xs:attribute name="RefType" type="xs:anyURI" use="optional"/>
    <xs:attribute name="SchemaRefs" type="xs:IDREFS" use="optional"/>
  </xs:complexType>
  <xs:element name="Document" type="dss:DocumentType"/>
  <xs:complexType name="DocumentType">
    <xs:complexContent>
      <xs:extension base="dss:DocumentBaseType">
        <xs:choice>
          <xs:element name="InlineXML" type="dss:InlineXMLType"/>
          <xs:element name="Base64XML" type="xs:base64Binary"/>
          <xs:element name="EscapedXML" type="xs:string"/>
          <xs:element ref="dss:Base64Data"/>
          <xs:element ref="dss:AttachmentReference"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="Base64Data">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:base64Binary">
          <xs:attribute name="MimeType" type="xs:string" use="optional"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="InlineXMLType">
    <xs:sequence>
      <xs:any processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="ignorePIs" type="xs:boolean" use="optional" default="true"/>
    <xs:attribute name="ignoreComments" type="xs:boolean" use="optional" default="true"/>
  </xs:complexType>
  <xs:element name="TransformedData">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:DocumentBaseType">
          <xs:sequence>
            <xs:element ref="ds:Transforms" minOccurs="0"/>
            <xs:element ref="dss:Base64Data"/>
          </xs:sequence>
          <xs:attribute name="WhichReference" type="xs:integer" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="DocumentHash">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:DocumentBaseType">
          <xs:sequence>
            <xs:element ref="ds:Transforms" minOccurs="0"/>
            <xs:element ref="ds:DigestMethod" minOccurs="0"/>
            <xs:element ref="ds:DigestValue"/>
          </xs:sequence>
          <xs:attribute name="WhichReference" type="xs:integer" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignatureObject">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="ds:Signature"/>
          <xs:element ref="dss:Timestamp"/>
          <xs:element ref="dss:Base64Signature"/>
          <xs:element ref="dss:SignaturePtr"/>
          <xs:element name="Other" type="dss:AnyType"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="SchemaRefs" type="xs:IDREFS" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Base64Signature">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:base64Binary">
          <xs:attribute name="Type" type="xs:anyURI"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignaturePtr">
    <xs:complexType>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="XPath" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Result">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ResultMajor" type="xs:anyURI"/>
        <xs:element name="ResultMinor" type="xs:anyURI" minOccurs="0"/>
        <xs:element name="ResultMessage" type="dss:InternationalStringType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="OptionalInputs" type="dss:AnyType"/>
  <xs:element name="OptionalOutputs" type="dss:AnyType"/>
  <xs:element name="ServicePolicy" type="xs:anyURI"/>
  <xs:element name="ClaimedIdentity">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Name" type="saml:NameIdentifierType"/>
        <xs:element name="SupportingInfo" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Language" type="xs:language"/>
  <xs:element name="AdditionalProfile" type="xs:anyURI"/>
  <xs:element name="Schemas" type="dss:SchemasType"/>
  <xs:complexType name="SchemasType">
    <xs:sequence>
      <xs:element ref="dss:Schema" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Schema" type="dss:DocumentType"/>
  <xs:complexType name="RequestBaseType">
    <xs:sequence>
      <xs:element ref="dss:OptionalInputs" minOccurs="0"/>
      <xs:element ref="dss:InputDocuments" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="RequestID" type="xs:string" use="optional"/>
    <xs:attribute name="Profile" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:complexType name="ResponseBaseType">
    <xs:sequence>
      <xs:element ref="dss:Result"/>
      <xs:element ref="dss:OptionalOutputs" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="RequestID" type="xs:string" use="optional"/>
    <xs:attribute name="Profile" type="xs:anyURI" use="required"/>
  </xs:complexType>
  <xs:element name="Response" type="dss:ResponseBaseType"/>
  <xs:element name="SignRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:RequestBaseType"/>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignResponse">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:ResponseBaseType">
          <xs:sequence>
            <xs:element ref="dss:SignatureObject" minOccurs="0"/>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignatureType" type="xs:anyURI"/>
  <xs:element name="AddTimestamp" type="dss:UpdateSignatureInstructionType"/>
  <xs:complexType name="TimeSignatureInstructionType">
    <xs:complexContent>
      <xs:extension base="dss:UpdateSignatureInstructionType">
        <xs:attribute name="TimeStampTheGivenSignature" type="xs:boolean" use="optional" default="false"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UpdateSignatureInstructionType">
    <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:element name="IntendedAudience">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Recipient" type="saml:NameIdentifierType" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="KeySelector">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="ds:KeyInfo"/>
        <xs:element name="Other" type="dss:AnyType"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="Properties">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="SignedProperties" type="dss:PropertiesType" minOccurs="0"/>
        <xs:element name="UnsignedProperties" type="dss:PropertiesType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="PropertiesType">
    <xs:sequence>
      <xs:element ref="dss:Property" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Property">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Identifier" type="xs:anyURI"/>
        <xs:element name="Value" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="IncludeObject">
    <xs:complexType>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="hasObjectTagsAndAttributesSet" type="xs:boolean" default="false"/>
      <xs:attribute name="ObjId" type="xs:string" use="optional"/>
      <xs:attribute name="createReference" type="xs:boolean" use="optional" default="true"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignaturePlacement">
    <xs:complexType>
      <xs:choice>
        <xs:element name="XPathAfter" type="xs:string"/>
        <xs:element name="XPathFirstChildOf" type="xs:string"/>
      </xs:choice>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="CreateEnvelopedSignature" type="xs:boolean" default="true"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="DocumentWithSignature">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:Document"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignedReferences">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:SignedReference" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignedReference">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ds:Transforms" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="WhichDocument" type="xs:IDREF" use="required"/>
      <xs:attribute name="RefURI" type="xs:anyURI" use="optional"/>
      <xs:attribute name="RefId" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="VerifyRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:RequestBaseType">
          <xs:sequence>
            <xs:element ref="dss:SignatureObject" minOccurs="0"/>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="VerifyResponse" type="dss:ResponseBaseType"/>
  <xs:element name="VerifyManifestResults" type="dss:VerifyManifestResultsType"/>
  <xs:complexType name="VerifyManifestResultsType">
    <xs:sequence>
      <xs:element ref="dss:ManifestResult" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ManifestResult">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ReferenceXpath" type="xs:string"/>
        <xs:element name="Status" type="xs:anyURI"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="UseVerificationTime"/>
  <xs:complexType name="UseVerificationTimeType">
    <xs:choice>
      <xs:element name="CurrentTime"/>
      <xs:element name="SpecificTime" type="xs:dateTime"/>
      <xs:any namespace="##other"/>
    </xs:choice>
  </xs:complexType>
  <xs:element name="ReturnVerificationTimeInfo"/>
  <xs:element name="AdditionalTimeInfo" type="dss:AdditionalTimeInfoType"/>
  <xs:complexType name="AdditionalTimeInfoType">
    <xs:simpleContent>
      <xs:extension base="xs:dateTime">
        <xs:attribute name="Type" type="xs:anyURI" use="required"/>
        <xs:attribute name="Ref" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="VerificationTimeInfo" type="dss:VerificationTimeInfoType"/>
  <xs:complexType name="VerificationTimeInfoType">
    <xs:sequence>
      <xs:element name="VerificationTime" type="xs:dateTime"/>
      <xs:element ref="dss:AdditionalTimeInfo" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AdditionalKeyInfo">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ds:KeyInfo"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ReturnProcessingDetails"/>
  <xs:element name="ProcessingDetails">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ValidDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="IndeterminateDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="InvalidDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="DetailType">
    <xs:sequence>
      <xs:element name="Code" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="Message" type="dss:InternationalStringType" minOccurs="0"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:anyURI" use="required"/>
  </xs:complexType>
  <xs:element name="ReturnSigningTimeInfo"/>
  <xs:element name="SigningTimeInfo" type="dss:SigningTimeInfoType"/>
  <xs:complexType name="SigningTimeInfoType">
    <xs:sequence>
      <xs:element name="SigningTime" type="xs:dateTime"/>
      <xs:element name="SigningTimeBoundaries" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="LowerBoundary" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="UpperBoundary" type="xs:dateTime" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ReturnSignerIdentity"/>
  <xs:element name="SignerIdentity" type="saml:NameIdentifierType"/>
  <xs:element name="ReturnUpdatedSignature">
    <xs:complexType>
      <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="UpdatedSignature" type="dss:UpdatedSignatureType"/>
  <xs:complexType name="UpdatedSignatureType">
    <xs:sequence>
      <xs:element ref="dss:SignatureObject"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:element name="ReturnTransformedDocument">
    <xs:complexType>
      <xs:attribute name="WhichReference" type="xs:integer" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="TransformedDocument">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:Document"/>
      </xs:sequence>
      <xs:attribute name="WhichReference" type="xs:integer" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ReturnTimestampedSignature" type="dss:UpdateSignatureInstructionType"/>
  <xs:element name="TimestampedSignature" type="dss:UpdatedSignatureType"/>
  <xs:element name="Timestamp">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="ds:Signature"/>
        <xs:element name="RFC3161TimeStampToken" type="xs:base64Binary"/>
        <xs:element name="Other" type="dss:AnyType"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="TstInfo">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="SerialNumber" type="xs:integer"/>
        <xs:element name="CreationTime" type="xs:dateTime"/>
        <xs:element name="Policy" type="xs:anyURI" minOccurs="0"/>
        <xs:element name="ErrorBound" type="xs:duration" minOccurs="0"/>
        <xs:element name="Ordered" type="xs:boolean" default="false" minOccurs="0"/>
        <xs:element name="TSA" type="saml:NameIdentifierType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="RequesterIdentity">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Name" type="saml:NameIdentifierType"/>
        <xs:element name="SupportingInfo" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="AttachmentReference" type="dss:AttachmentReferenceType"/>
  <xs:complexType name="AttachmentReferenceType">
    <xs:sequence minOccurs="0">
      <xs:element ref="ds:DigestMethod"/>
      <xs:element ref="ds:DigestValue"/>
    </xs:sequence>
    <xs:attribute name="AttRefURI" type="xs:anyURI"/>
    <xs:attribute name="MimeType" type="xs:string" use="optional"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint></con:endpoints><con:resource name="/v1.0" path="/v1.0"><con:settings/><con:parameters/><con:resource name="/pending" path="/pending"><con:settings/><con:parameters><con:parameter><con:name>Accept</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="POST" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:urn="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">urn:PendingRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:urn="urn:oasis:names:tc:dss:1.0:core:schema">urn:Response</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="XML PendingRequest (Poll)" mediaType="application/xml" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>cartel.ch</Name>
        </ClaimedIdentity>
        <async:ResponseID>ee238271-57af-435e-a8be-3d0ac95c0f5c</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>

]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>Accept</con:entry></con:parameterOrder></con:request><con:request name="JSON PendingRequest (Poll)" mediaType="application/json" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "cartel.ch"
      },
      "async.ResponseID": "ee238271-57af-435e-a8be-3d0ac95c0f5c"
    }
  }
}</con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>Accept</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="/sign" path="/sign"><con:settings/><con:parameters><con:parameter><con:name>Accept</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="POST" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:urn="urn:oasis:names:tc:dss:1.0:core:schema">urn:SignRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:urn="urn:oasis:names:tc:dss:1.0:core:schema">urn:Response</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="XML Timestamp [synch]" mediaType="application/xml" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<SignRequest xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" RequestID="${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSS''HH:mm:ss.SSSZ')}" Profile="urn:com:swisscom:dss:v1.0">
<OptionalInputs>
    <ClaimedIdentity>
        <Name>cartel.ch</Name>
    </ClaimedIdentity>
    <SignatureType>urn:ietf:rfc:3161</SignatureType>
    <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
</OptionalInputs>
<InputDocuments>
    <DocumentHash>
        <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
        <dsig:DigestValue>GcXfOzOP8GsBu7odeT1w3GnMedppEWvngCQ7Ef1IBMA=</dsig:DigestValue>
    </DocumentHash>
</InputDocuments>
</SignRequest>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:request><con:request name="XML Timestamp [asynch]" mediaType="application/xml" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<SignRequest xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
<OptionalInputs>
    <ClaimedIdentity>
        <Name>cartel.ch</Name>
    </ClaimedIdentity>
    <SignatureType>urn:ietf:rfc:3161</SignatureType>
    <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
    <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
</OptionalInputs>
<InputDocuments>
    <DocumentHash>
        <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
        <dsig:DigestValue>GcXfOzOP8GsBu7odeT1w3GnMedppEWvngCQ7Ef1IBMA=</dsig:DigestValue>
    </DocumentHash>
</InputDocuments>
</SignRequest>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:request><con:request name="JSON Timestamp [synch]" mediaType="application/json" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "cartel.ch"
      },
      "SignatureType": "urn:ietf:rfc:3161",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:timestamping"
    },
    "InputDocuments": {
      "DocumentHash": {
        "dsig.DigestMethod": {
          "@Algorithm": "http://www.w3.org/2001/04/xmlenc#sha256"
        },
        "dsig.DigestValue": "GcXfOzOP8GsBu7odeT1w3GnMedppEWvngCQ7Ef1IBMA="
      }
    }
  }
}</con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:request><con:request name="JSON Timestamp [asynch]" mediaType="application/json" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "cartel.ch"
      },
      "SignatureType": "urn:ietf:rfc:3161",
      "AdditionalProfile": [
            "urn:oasis:names:tc:dss:1.0:profiles:timestamping",
            "urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing"
        ]
    },
    "InputDocuments": {
      "DocumentHash": {
        "dsig.DigestMethod": {
          "@Algorithm": "http://www.w3.org/2001/04/xmlenc#sha256"
        },
        "dsig.DigestValue": "GcXfOzOP8GsBu7odeT1w3GnMedppEWvngCQ7Ef1IBMA="
      }
    }
  }
}</con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:request></con:method></con:resource></con:resource></con:interface><con:testSuite name="Automatic Regression Test Suite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="01 SOAP Timestamps" searchProperties="true" id="aed39093-604a-494a-bb0e-75ed51d729ab" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="TS Sha256 [syn]" id="2d2432a0-b6d2-4d47-bd7a-19695cbb7942"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="TS Sha256 [syn]" sslKeystore=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Timestamp>
      <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
    </Timestamp>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Check RequestID 1" id="e32f1173-6909-45ac-9a86-0b60223a3a05"><con:settings/><con:config><script>// http://www.soapui.org/Scripting-Properties/tips-a-tricks.html

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )

// Get RequestID from Request
def holder = groovyUtils.getXmlHolder( "TS Sha256 [syn]#RawRequest" )
holder.namespaces['dsig']='http://www.xyz.com/schemas/xyz/klm'
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
def req = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:sign/xmlns:SignRequest/@RequestID" )

// Get RequestID from Response
holder = groovyUtils.getXmlHolder( "TS Sha256 [syn]#Response" )
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
holder.namespaces['async']='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['sc']='urn:com:swisscom:dss:1.0:schema'
def resp = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/@RequestID" )

// Ensure that values have been found
if (req == null || resp == null)
	testRunner.fail("RequestID is null")

// Compare both RequestID
else if( req != resp )
	testRunner.fail("RequestID of Request: '" + req + "' is not equal to RequestID of Response: '" + resp + "'")</script></con:config></con:testStep><con:testStep type="request" name="TS Batch [syn]" id="040871ee-74d3-4841-95a1-9de6166b9afa"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="TS Batch [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Check RequestID 2" id="cc62a877-5ab1-4c1d-a964-c11c5d3d9dbc"><con:settings/><con:config><script>// http://www.soapui.org/Scripting-Properties/tips-a-tricks.html

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )

// Get RequestID from Request
def holder = groovyUtils.getXmlHolder( "TS Batch [syn]#RawRequest" )
holder.namespaces['dsig']='http://www.xyz.com/schemas/xyz/klm'
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
def req = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:sign/xmlns:SignRequest/@RequestID" )

// Get RequestID from Response
holder = groovyUtils.getXmlHolder( "TS Batch [syn]#Response" )
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
holder.namespaces['async']='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['sc']='urn:com:swisscom:dss:1.0:schema'
def resp = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/@RequestID" )

// Ensure that values have been found
if (req == null || resp == null)
	testRunner.fail("RequestID is null")

// Compare both RequestID
else if( req != resp )
	testRunner.fail("RequestID of Request: '" + req + "' is not equal to RequestID of Response: '" + resp + "'")</script></con:config></con:testStep><con:testStep type="request" name="TS Batch [asyn]" id="4d543e71-6d51-449e-94e2-254e99608247"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="TS Batch [asyn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_3">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_4">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_5">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_6">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_7">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_8">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Check RequestID 3" id="7db658c6-fe4f-471d-98f4-122de6d48cf0"><con:settings/><con:config><script>// http://www.soapui.org/Scripting-Properties/tips-a-tricks.html

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )

// Get RequestID from Request
def holder = groovyUtils.getXmlHolder( "TS Batch [asyn]#RawRequest" )
holder.namespaces['dsig']='http://www.xyz.com/schemas/xyz/klm'
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
def req = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:sign/xmlns:SignRequest/@RequestID" )

// Get RequestID from Response
holder = groovyUtils.getXmlHolder( "TS Batch [asyn]#Response" )
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
holder.namespaces['async']='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['sc']='urn:com:swisscom:dss:1.0:schema'
def resp = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/@RequestID" )

// Ensure that values have been found
if (req == null || resp == null)
	testRunner.fail("RequestID is null")

// Compare both RequestID
else if( req != resp )
	testRunner.fail("RequestID of Request: '" + req + "' is not equal to RequestID of Response: '" + resp + "'")</script></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1" id="07491194-15f9-482b-8343-f6f414ccde6b"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>TS Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" useXQuery="false" transferChildNodes="false"><con:name>Poll Final</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>TS Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1" id="47e1e1a7-84bb-4f7e-a916-67cb0cf1084e"><con:settings/><con:config><delay>0</delay></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Pending)" id="04d1b646-bdcf-48c6-8fa8-cd3d6b4dc0da"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Pending)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>33e7088a-7ae0-40c6-a3e2-903cf1e8fb6f</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="Check RequestID 4" id="d6167f8f-0e81-4360-810c-de9be235ba17"><con:settings/><con:config><script>// http://www.soapui.org/Scripting-Properties/tips-a-tricks.html

def groovyUtils = new com.eviware.soapui.support.GroovyUtils( context )

// Get RequestID from Request (initial Batch Request)
def holder = groovyUtils.getXmlHolder( "TS Batch [asyn]#RawRequest" )
holder.namespaces['dsig']='http://www.xyz.com/schemas/xyz/klm'
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
def req = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:sign/xmlns:SignRequest/@RequestID" )

// Get RequestID from Response (Poll Response)
holder = groovyUtils.getXmlHolder( "Poll RequestID (Pending)#Response" )
holder.namespaces['soap']='http://schemas.xmlsoap.org/soap/envelope/'
holder.namespaces['xmlns']='urn:oasis:names:tc:dss:1.0:core:schema'
holder.namespaces['dsig']='http://www.w3.org/2000/09/xmldsig#'
holder.namespaces['async']='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0'
holder.namespaces['ais']='http://service.ais.swisscom.com/'
holder.namespaces['sc']='urn:com:swisscom:dss:1.0:schema'
def resp = holder.getNodeValue( "//soap:Envelope/soap:Body/ais:pendingResponse/xmlns:Response/@RequestID" )

// Ensure that values have been found
if (req == null || resp == null)
	testRunner.fail("RequestID is null")

// Compare both RequestID
else if( req != resp )
	testRunner.fail("RequestID of Request: '" + req + "' is not equal to RequestID of Response: '" + resp + "'")</script></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1" id="b7d3ba89-c4c6-4b71-ae5a-d2d28778f522"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Final)" id="cdbb192e-7c38-4a81-adbc-a56d6cda51f9"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Final)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="urn:com:swisscom:dss:v1.0" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>33e7088a-7ae0-40c6-a3e2-903cf1e8fb6f</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:pendingResponse</path><content><![CDATA[<ais:pendingResponse xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Response xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <Result>
      <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
    </Result>
    <SignatureObject>
      <Other>
        <sc:SignatureObjects>
          <sc:ExtendedSignatureObject WhichDocument="256">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="384">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_1">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_2">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_3">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_4">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_5">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_6">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_7">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_8">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </sc:ExtendedSignatureObject>
        </sc:SignatureObjects>
      </Other>
    </SignatureObject>
  </Response>
</ais:pendingResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="#2570 Groovy Jar Test" disabled="true" id="0136f700-da43-4e4f-ba77-1adfb5d667c8"><con:settings/><con:config><script>// Import custom jar from &lt;soapui>/bin/ext
import DecoderTest

// Get Test Suite Property
def msisdn = testRunner.testCase.testSuite.getPropertyValue("MSISDN");

// Call custom jar method
def name = new DecoderTest().getHello( msisdn );

// Print the output of the custom jar
log.info("$name");</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="02 SOAP Timestamps [Error]" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b86fb256-cd64-4676-b408-7d04a84c5703"><con:settings/><con:testStep type="request" name="TS WrongCust [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="TS WrongCust [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>xxxxxx</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:UnknownCustomer</ResultMinor>
  <ResultMessage xml:lang="en"/>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS WrongAlgo [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="TS WrongAlgo [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="xxxxxx"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:UnsupportedDigestAlgorithm</ResultMinor>
  <ResultMessage xml:lang="en">xxxxxx</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS WrongDigest [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="TS WrongDigest [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>xxxxxx</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">digest size doesn't match the expected size</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS MissingAddProfile [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="TS MissingAddProfile [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <!--<AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>-->
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">Please specify which profile should be used to create the timestamp</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS WrongAddProfile 1 [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="TS WrongAddProfile 1 [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:xxxxxx</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">unknown AdditionalProfile 'urn:oasis:names:tc:dss:1.0:profiles:xxxxxx'</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS WrongAddProfile 2 [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="TS WrongAddProfile 2 [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:xxxxxx</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">unknown AdditionalProfile 'urn:oasis:names:tc:dss:1.0:profiles:xxxxxx'</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS WrongSigType [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="TS WrongSigType [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:0000</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">SignatureType</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS WrongBatch [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="TS WrongBatch [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">More than one document has the same ID</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS BatchButSameDocId [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="TS BatchButSameDocId [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">More than one document has the same ID</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="03 RESTful Timestamps" searchProperties="true" id="c1054c17-4bc7-42dd-9b43-b3bb7b27d0e2" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="XML TS Sha384 [syn]"><con:settings/><con:config service="AIS RESTful" resourcePath="/DSS-Server/rs/v1.0/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML TS Sha384 [syn]" mediaType="application/xml" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSSZ')}${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3161</SignatureType>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="urn:com:swisscom:dss:1.0:schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Timestamp>
      <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
    </Timestamp>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON TS Sha512 [syn]"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="/DSS-Server/rs/v1.0/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON TS Sha512 [syn]" mediaType="application/json" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "SignatureType": "urn:ietf:rfc:3161",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:timestamping"
    },
    "InputDocuments": {
      "DocumentHash": {
        "dsig.DigestMethod": {
          "@Algorithm": "${#TestSuite#SHA512}"
        },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      }
    }
  }
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace xmlns='https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/sign';
//xmlns:Response/xmlns:SignResponse</path><content><![CDATA[<SignResponse Profile="urn:com:swisscom:dss:v1.0" RequestID="*" xmlns="https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/sign">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Timestamp>
      <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
    </Timestamp>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="XML TS Batch [syn]"><con:settings/><con:config service="AIS RESTful" resourcePath="/DSS-Server/rs/v1.0/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML TS Batch [syn]" mediaType="application/xml" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3161</SignatureType>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
      <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="384">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON TS Batch [syn]"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="/DSS-Server/rs/v1.0/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON TS Batch [syn]" mediaType="application/json" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "SignatureType": "urn:ietf:rfc:3161",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:timestamping",
      "AdditionalProfile": "urn:com:swisscom:dss:v1.0:profiles:batchprocessing"
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA256}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      },
     "DocumentHash": {
        "@ID": "384",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA384}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_384}"
      },
     "DocumentHash": {
        "@ID": "512",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      }
    }
  }
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace xmlns='https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/sign';
//xmlns:Response/xmlns:SignResponse</path><content><![CDATA[<SignResponse Profile="urn:com:swisscom:dss:v1.0" RequestID="*" xmlns="https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/sign">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Other>
      <sc.SignatureObjects>
        <sc.ExtendedSignatureObject>
          <e WhichDocument="256">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="384">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
        </sc.ExtendedSignatureObject>
      </sc.SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="XML TS Batch [asyn]"><con:settings/><con:config service="AIS RESTful" resourcePath="/DSS-Server/rs/v1.0/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML TS Batch [asyn]" mediaType="application/xml" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3161</SignatureType>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
      <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="384">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_1">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_2">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_3">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_4">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_5">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_6">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_7">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_8">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="urn:com:swisscom:dss:1.0:schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML TS Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="urn:com:swisscom:dss:1.0:schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML TS Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="urn:com:swisscom:dss:1.0:schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1"><con:settings/><con:config><delay>0</delay></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Pending)"><con:settings/><con:config service="AIS RESTful" resourcePath="/DSS-Server/rs/v1.0/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Pending)" mediaType="application/xml" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>992f2f7a-e83c-46b5-80c1-36d5d0bdbed3</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Final)"><con:settings/><con:config service="AIS RESTful" resourcePath="/DSS-Server/rs/v1.0/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Final)" mediaType="application/xml" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="urn:com:swisscom:dss:v1.0" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>992f2f7a-e83c-46b5-80c1-36d5d0bdbed3</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON TS Batch [asyn]"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="/DSS-Server/rs/v1.0/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON TS Batch [asyn]" mediaType="application/json" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "SignatureType": "urn:ietf:rfc:3161",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:timestamping",
      "AdditionalProfile": "urn:com:swisscom:dss:v1.0:profiles:batchprocessing",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing"
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA256}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      },
     "DocumentHash": {
        "@ID": "384",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA384}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_384}"
      },
     "DocumentHash": {
        "@ID": "512_1",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_2",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_3",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_4",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_5",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_6",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_7",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_8",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      }
    }
  }
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace xmlns='https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/sign';
//xmlns:Response/xmlns:SignResponse</path><content><![CDATA[<SignResponse Profile="urn:com:swisscom:dss:v1.0" RequestID="*" xmlns="https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/sign">
  <OptionalOutputs>
    <async.ResponseID>*</async.ResponseID>
  </OptionalOutputs>
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Get ResponseID 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ID</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>JSON TS Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/sign';
//xmlns:Response/xmlns:SignResponse/xmlns:OptionalOutputs/xmlns:async.ResponseID</con:sourcePath><con:targetType>_tmp</con:targetType><con:targetStep>#TestSuite#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 2"><con:settings/><con:config><delay>0</delay></con:config></con:testStep><con:testStep type="restrequest" name="JSON Poll RequestID (Pending)"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="/DSS-Server/rs/v1.0/pending" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Poll RequestID (Pending)" mediaType="application/json" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "async.ResponseID": "${#TestSuite#_tmp}"
    }
  }
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 2"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/pending';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 2</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="restrequest" name="JSON Poll RequestID (Final)"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="/DSS-Server/rs/v1.0/pending" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Poll RequestID (Final)" mediaType="application/json" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "async.ResponseID": "${#TestSuite#_tmp}"
    }
  }
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace xmlns='https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/pending';
//xmlns:Response/xmlns:SignResponse</path><content><![CDATA[<SignResponse Profile="urn:com:swisscom:dss:v1.0" RequestID="*" xmlns="https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/pending">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Other>
      <sc.SignatureObjects>
        <sc.ExtendedSignatureObject>
          <e WhichDocument="256">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="384">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_1">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_2">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_3">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_4">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_5">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_6">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_7">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_8">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
        </sc.ExtendedSignatureObject>
      </sc.SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="04 SOAP Static" searchProperties="true" id="a6c6b5b7-ddeb-49d0-83cc-402213f514cb" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="Static [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="Static [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static Batch [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="Static Batch [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_3">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_4">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_5">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_6">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_7">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_8">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static Batch [asyn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="Static Batch [asyn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_3">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_4">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_5">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_6">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_7">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_8">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Static Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Static Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1"><con:settings/><con:config><delay>0</delay></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Pending)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Pending)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>6eac583e-a3cc-4dbd-80c7-310c91b6db76</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Final)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Final)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <async:ResponseID>6eac583e-a3cc-4dbd-80c7-310c91b6db76</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:pendingResponse</path><content><![CDATA[<ais:pendingResponse xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Response xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <Result>
      <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
    </Result>
    <SignatureObject>
      <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
      </Other>
    </SignatureObject>
  </Response>
</ais:pendingResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="05 SOAP Static [Error]" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="67be2b3b-3d19-4545-bdbc-a40f0bb0c7d0"><con:settings/><con:testStep type="request" name="Static WrongCust [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="Static WrongCust [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>xxxxxx:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:UnknownCustomer</ResultMinor>
    <ResultMessage xml:lang="en"/>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static WrongStaticId [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="Static WrongStaticId [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:xxxxxx</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:UnknownServiceEntity</ResultMinor>
    <ResultMessage xml:lang="en"/>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static WrongAlgo [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="Static WrongAlgo [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="xxxxxx"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:UnsupportedDigestAlgorithm</ResultMinor>
    <ResultMessage xml:lang="en">xxxxxx</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static WrongDigest [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="Static WrongDigest [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>xxxxxx</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:UnexpectedData</ResultMinor>
  <ResultMessage xml:lang="en">digest size doesn't match the expected size</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static WrongBatch [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="Static WrongBatch [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">More than one document provided in single document profile</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static BatchButSameDocId [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="Static BatchButSameDocId [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">More than one document has the same ID</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="06 RESTful Static" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="0a46f06e-56e6-4570-bd09-9e6d57639b65"><con:settings/><con:testStep type="restrequest" name="XML Static [syn]"><con:settings/><con:config service="AIS RESTful" resourcePath="/DSS-Server/rs/v1.0/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Static [syn]" mediaType="application/xml" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="urn:com:swisscom:dss:1.0:schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON Static [syn]"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="/DSS-Server/rs/v1.0/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Static [syn]" mediaType="application/json" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}"
      },
      "SignatureType": "urn:ietf:rfc:3369",
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddOcspResponse": {"@Type": "urn:ietf:rfc:2560"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA256}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      }
    }
  }
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Validate JSON Response 1"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

def response = context.expand( '${JSON Static [syn]#Response}' ).toString()
def slurper = new JsonSlurper()
def json = slurper.parseText response

if ( json."SignResponse"."Result"."ResultMajor" != "urn:oasis:names:tc:dss:1.0:resultmajor:Success" ) {
	testRunner.fail("ResultMajor was not successful")
	return
}

if ( json."SignResponse"."SignatureObject"."Base64Signature"."@Type" != "urn:ietf:rfc:3369" ) {
	testRunner.fail("Signature type invalid")
	return
}
	
if ( ! ( json."SignResponse"."SignatureObject"."Base64Signature"."\$" ==~ /MII.*/ ) ) {
	testRunner.fail("Signature content invalid") 
	return
}
</script></con:config></con:testStep><con:testStep type="restrequest" name="XML Static Batch [asyn]"><con:settings/><con:config service="AIS RESTful" resourcePath="/DSS-Server/rs/v1.0/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Static Batch [asyn]" mediaType="application/xml" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="384">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_1">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_2">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_3">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_4">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_5">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_6">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_7">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_8">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="urn:com:swisscom:dss:1.0:schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML Static Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="urn:com:swisscom:dss:1.0:schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML Static Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="urn:com:swisscom:dss:1.0:schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1"><con:settings/><con:config><delay>0</delay></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Pending)"><con:settings/><con:config service="AIS RESTful" resourcePath="/DSS-Server/rs/v1.0/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Pending)" mediaType="application/xml" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>270715ff-eb93-49ea-ac2a-e51134e76ac1</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Final)"><con:settings/><con:config service="AIS RESTful" resourcePath="/DSS-Server/rs/v1.0/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Final)" mediaType="application/xml" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="urn:com:swisscom:dss:v1.0" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
        </ClaimedIdentity>
        <async:ResponseID>270715ff-eb93-49ea-ac2a-e51134e76ac1</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON Static Batch [asyn]"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="/DSS-Server/rs/v1.0/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Static Batch [asyn]" mediaType="application/json" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}"
      },
      "SignatureType": "urn:ietf:rfc:3369",
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddOcspResponse": {"@Type": "urn:ietf:rfc:2560"},
      "AdditionalProfile": "urn:com:swisscom:dss:v1.0:profiles:batchprocessing",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing"
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA256}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      },
     "DocumentHash": {
        "@ID": "384",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA384}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_384}"
      },
     "DocumentHash": {
        "@ID": "512_1",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_2",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_3",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_4",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_5",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_6",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_7",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_8",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      }
    }
  }
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace xmlns='https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/sign';
//xmlns:Response/xmlns:SignResponse</path><content><![CDATA[<SignResponse Profile="urn:com:swisscom:dss:v1.0" RequestID="*" xmlns="https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/sign">
  <OptionalOutputs>
    <async.ResponseID>*</async.ResponseID>
  </OptionalOutputs>
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Get ResponseID 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ID</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>JSON Static Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/sign';
//xmlns:Response/xmlns:SignResponse/xmlns:OptionalOutputs/xmlns:async.ResponseID</con:sourcePath><con:targetType>_tmp</con:targetType><con:targetStep>#TestSuite#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 2"><con:settings/><con:config><delay>0</delay></con:config></con:testStep><con:testStep type="restrequest" name="JSON Poll RequestID (Pending)"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="/DSS-Server/rs/v1.0/pending" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Poll RequestID (Pending)" mediaType="application/json" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}"
      },
      "async.ResponseID": "${#TestSuite#_tmp}"
    }
  }
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 2"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/pending';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 2</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="groovy" name="Validate JSON Response 2"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

def response = context.expand( '${JSON Poll RequestID (Pending)#Response}' ).toString()
def slurper = new JsonSlurper()
def json = slurper.parseText response

if ( json."SignResponse"."Result"."ResultMajor" != "urn:oasis:names:tc:dss:1.0:resultmajor:Success" ) {
	testRunner.fail("ResultMajor was not successful")
	return
}

if ( json."SignResponse"."SignatureObject"."Other"."sc.SignatureObjects"."sc.ExtendedSignatureObject"."Base64Signature"."@Type"[9] != "urn:ietf:rfc:3369" ) {
	testRunner.fail("Signature type invalid")
	return
}
	
if ( ! ( json."SignResponse"."SignatureObject"."Other"."sc.SignatureObjects"."sc.ExtendedSignatureObject"."Base64Signature"."\$"[9] ==~ /MII.*/ ) ) {
	testRunner.fail("Signature content invalid") 
	return
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="07 SOAP OnDemand" searchProperties="true" id="49af4756-b8a6-4266-8352-081638c22cdb" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="OnDemand ADV [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster, o=ACME, c=CH</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV Batch [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV Batch [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_3">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_4">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_5">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_6">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_7">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_8">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV Batch [asyn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV Batch [asyn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_3">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_4">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_5">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_6">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_7">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_8">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand ADV Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand ADV Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1"><con:settings/><con:config><delay>0</delay></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Pending)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Pending)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <async:ResponseID>b74e2087-9562-47ea-aaaa-07759847208d</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Final)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Final)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <async:ResponseID>b74e2087-9562-47ea-aaaa-07759847208d</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:pendingResponse</path><content><![CDATA[<ais:pendingResponse xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Response xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <Result>
      <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
    </Result>
    <SignatureObject>
      <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
      </Other>
    </SignatureObject>
  </Response>
</ais:pendingResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV DN-Special-Chars [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV DN-Special-Chars [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=ô crèche,o=où ex æquo,c=CH</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="08 SOAP OnDemand [Error]" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="8d47d59d-4173-4037-ab83-0bbc6ea6adb0"><con:settings/><con:testStep type="request" name="OnDemand QUA noMID [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand QUA noMID [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:InsufficientData</ResultMinor>
    <ResultMessage xml:lang="en">MSISDN</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV WrongCust [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV WrongCust [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>xxxxxx:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:UnknownCustomer</ResultMinor>
    <ResultMessage xml:lang="en"/>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV WrongStaticId [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV WrongStaticId [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:xxxxxx</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:UnknownServiceEntity</ResultMinor>
    <ResultMessage xml:lang="en"/>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV WrongDN 1 [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV WrongDN 1 [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>xxxxxx</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:com:swisscom:dss:1.0:resultmajor:SubsystemError</ResultMajor>
  <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:subsystem:Cmp</ResultMinor>
  <ResultMessage xml:lang="en">distinguished name could not be parsed</ResultMessage>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV WrongDN 2 [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV WrongDN 2 [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=,o=,c=</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:com:swisscom:dss:1.0:resultmajor:SubsystemError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:subsystem:Cmp</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name RDN 'CN' must not be empty</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV OnlyCountryDN [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV OnlyCountryDN [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>c=CH</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:com:swisscom:dss:1.0:resultmajor:SubsystemError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:subsystem:Cmp</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name is missing required RDN 'commonName' or 'CN'</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV fakeDN [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV fakeDN [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=.,o=.,c=CH</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV WrongOCSP [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV WrongOCSP [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster, o=ACME, c=CH</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:xxxx"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">Only supported OCSPResponse type is 'urn:ietf:rfc:2560'</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV WrongTimestamp [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV WrongTimestamp [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster, o=ACME, c=CH</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:xxxx"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">Only supported timestamp type is 'urn:ietf:rfc:3161'</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="09 RESTful OnDemand" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="dca8662e-59fd-41c7-a37d-59a7844d605f"><con:settings/><con:testStep type="restrequest" name="XML OnDemand ADV [syn]"><con:settings/><con:config service="AIS RESTful" resourcePath="/DSS-Server/rs/v1.0/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML OnDemand ADV [syn]" mediaType="application/xml" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="urn:com:swisscom:dss:1.0:schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON OnDemand ADV [syn]"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="/DSS-Server/rs/v1.0/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON OnDemand ADV [syn]" mediaType="application/json" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}"
      },
      "SignatureType": "urn:ietf:rfc:3369",
      "AdditionalProfile": "urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate", 
      "sc.CertificateRequest": { "sc.DistinguishedName": "cn=Hans Muster,o=ACME,c=CH" },
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddOcspResponse": {"@Type": "urn:ietf:rfc:2560"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "dsig.DigestMethod": {
          "@Algorithm": "${#TestSuite#SHA256}"
        },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      }
    }
  }
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Validate JSON Response 1"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

def response = context.expand( '${JSON OnDemand ADV [syn]#Response}' ).toString()
def slurper = new JsonSlurper()
def json = slurper.parseText response

if ( json."SignResponse"."Result"."ResultMajor" != "urn:oasis:names:tc:dss:1.0:resultmajor:Success" ) {
	testRunner.fail("ResultMajor was not successful")
	return
}

if ( json."SignResponse"."SignatureObject"."Base64Signature"."@Type" != "urn:ietf:rfc:3369" ) {
	testRunner.fail("Signature type invalid")
	return
}
	
if ( ! ( json."SignResponse"."SignatureObject"."Base64Signature"."\$" ==~ /MII.*/ ) ) {
	testRunner.fail("Signature content invalid") 
	return
}
</script></con:config></con:testStep><con:testStep type="restrequest" name="XML OnDemand ADV Batch [asyn]"><con:settings/><con:config service="AIS RESTful" resourcePath="/DSS-Server/rs/v1.0/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML OnDemand ADV Batch [asyn]" mediaType="application/xml" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
      <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="384">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_1">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_2">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_3">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_4">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_5">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_6">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_7">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_8">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="urn:com:swisscom:dss:1.0:schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand ADV Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="urn:com:swisscom:dss:1.0:schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand ADV Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="urn:com:swisscom:dss:1.0:schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1"><con:settings/><con:config><delay>0</delay></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Pending)"><con:settings/><con:config service="AIS RESTful" resourcePath="/DSS-Server/rs/v1.0/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Pending)" mediaType="application/xml" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
        </ClaimedIdentity>
        <async:ResponseID>766c2417-9130-4980-968b-b3ab27cab0ea</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Final)"><con:settings/><con:config service="AIS RESTful" resourcePath="/DSS-Server/rs/v1.0/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Final)" mediaType="application/xml" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="urn:com:swisscom:dss:v1.0" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
        </ClaimedIdentity>
        <async:ResponseID>766c2417-9130-4980-968b-b3ab27cab0ea</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON OnDemand ADV Batch [asyn]"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="/DSS-Server/rs/v1.0/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON OnDemand ADV Batch [asyn]" mediaType="application/json" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}"
      },
      "SignatureType": "urn:ietf:rfc:3369",
      "AdditionalProfile": "urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate", 
      "AdditionalProfile": "urn:com:swisscom:dss:v1.0:profiles:batchprocessing",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing",
      "sc.CertificateRequest": { "sc.DistinguishedName": "cn=Hans Muster,o=ACME,c=CH" },
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddOcspResponse": {"@Type": "urn:ietf:rfc:2560"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA256}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      },
     "DocumentHash": {
        "@ID": "384",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA384}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_384}"
      },
     "DocumentHash": {
        "@ID": "512_1",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_2",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_3",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_4",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_5",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_6",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_7",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_8",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      }
    }
  }
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace xmlns='https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/sign';
//xmlns:Response/xmlns:SignResponse</path><content><![CDATA[<SignResponse Profile="urn:com:swisscom:dss:v1.0" RequestID="*" xmlns="https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/sign">
  <OptionalOutputs>
    <async.ResponseID>*</async.ResponseID>
  </OptionalOutputs>
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Get ResponseID 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ID</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>JSON OnDemand ADV Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/sign';
//xmlns:Response/xmlns:SignResponse/xmlns:OptionalOutputs/xmlns:async.ResponseID</con:sourcePath><con:targetType>_tmp</con:targetType><con:targetStep>#TestSuite#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 2"><con:settings/><con:config><delay>0</delay></con:config></con:testStep><con:testStep type="restrequest" name="JSON Poll RequestID (Pending)"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="/DSS-Server/rs/v1.0/pending" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Poll RequestID (Pending)" mediaType="application/json" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}"
      },
      "async.ResponseID": "${#TestSuite#_tmp}"
    }
  }
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 2"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/pending';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 2</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="groovy" name="Validate JSON Response 2"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

def response = context.expand( '${JSON Poll RequestID (Pending)#Response}' ).toString()
def slurper = new JsonSlurper()
def json = slurper.parseText response

if ( json."SignResponse"."Result"."ResultMajor" != "urn:oasis:names:tc:dss:1.0:resultmajor:Success" ) {
	testRunner.fail("ResultMajor was not successful")
	return
}

if ( json."SignResponse"."SignatureObject"."Other"."sc.SignatureObjects"."sc.ExtendedSignatureObject"."Base64Signature"."@Type"[9] != "urn:ietf:rfc:3369" ) {
	testRunner.fail("Signature type invalid")
	return
}
	
if ( ! ( json."SignResponse"."SignatureObject"."Other"."sc.SignatureObjects"."sc.ExtendedSignatureObject"."Base64Signature"."\$"[9] ==~ /MII.*/ ) ) {
	testRunner.fail("Signature content invalid") 
	return
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="10 SOAP OnDemand MID" searchProperties="true" id="48772586-0c45-42fb-aa09-2b1b82f1525e" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="groovy" name="UserAlert Mobile ID 1"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")</script></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>RegressionTest: OnDemand with MID (en) ô crèche où ex æquo</sc:Message>
                        <sc:Language>eN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDAPTransID>*</sc:MobileIDAPTransID>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="UserAlert Mobile ID 2"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")</script></con:config></con:testStep><con:testStep type="request" name="#2424 OnDemand QUA MID [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="#2424 OnDemand QUA MID [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>commonName=Hans Muster,organizationName=ACME,countryName=CH</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>RegressionTest: OnDemand with MID (en) ô crèche où ex æquo</sc:Message>
                        <sc:Language>en</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDAPTransID>*</sc:MobileIDAPTransID>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="UserAlert Mobile ID 3"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")</script></con:config></con:testStep><con:testStep type="request" name="OnDemand MID ADV Batch [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand MID ADV Batch [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH,emailAddress=hans.muster@acme.com,givenName=Hans,surname=Muster,localityName=Hauptgebäude,organizationalUnitName=SCS,serialNumber=123456,stateOrProvinceName=ZH</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>RegressionTest: OnDemand with MID (en)</sc:Message>
                        <sc:Language>En</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_3">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_4">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_5">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_6">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_7">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_8">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDAPTransID>*</sc:MobileIDAPTransID>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="UserAlert Mobile ID 4"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")</script></con:config></con:testStep><con:testStep type="request" name="OnDemand MID ADV Batch [asyn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand MID ADV Batch [asyn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>RegressionTest: OnDemand with MID (en)</sc:Message>
                        <sc:Language>En</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_1">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_2">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_3">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_4">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_5">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_6">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_7">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_8">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand MID ADV Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand MID ADV Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1"><con:settings/><con:config><delay>0</delay></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Pending)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Pending)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <async:ResponseID>c853789c-8f28-40f5-bf9d-84108009f09d</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Final)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Final)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <async:ResponseID>c853789c-8f28-40f5-bf9d-84108009f09d</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:pendingResponse</path><content><![CDATA[<ais:pendingResponse xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Response xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <Result>
      <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
    </Result>
    <OptionalOutputs>
      <sc:MobileIDAPTransID>*</sc:MobileIDAPTransID>
    </OptionalOutputs>
    <SignatureObject>
      <Other>
        <sc:SignatureObjects>
          <sc:ExtendedSignatureObject WhichDocument="256">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="384">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_1">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_2">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_3">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_4">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_5">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_6">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_7">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_8">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
        </sc:SignatureObjects>
      </Other>
    </SignatureObject>
  </Response>
</ais:pendingResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="11 SOAP OnDemand MID [Error]" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="245cd2c1-2c10-48a0-8bbc-353d865d23d8"><con:settings/><con:testStep type="request" name="OnDemand ADV MID 41000092101 WRONG_PARAM [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID 41000092101 WRONG_PARAM [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.0">
                        <sc:MSISDN>41000092101</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:com:swisscom:dss:1.0:resultmajor:SubsystemError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:subsystem:MobileID:service</ResultMinor>
    <ResultMessage xml:lang="en">mss:_101</ResultMessage>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDFault>
      <sc:Subcode xmlns:mss="http://uri.etsi.org/TS102204/v1.1.2#">mss:_101</sc:Subcode>
      <sc:Reason>WRONG_PARAM</sc:Reason>
      <sc:Detail>
        <sc:detail>Fault received from URL: https://b-hmssp.prod.mobileid:8443/soap/services/MSS_SignaturePort
At node: http://b-ae.prod.mobileid/</sc:detail>
        <sc:detail>Error among the arguments of the request</sc:detail>
      </sc:Detail>
    </sc:MobileIDFault>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID 41000092102 MISSING_PARAM [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID 41000092102 MISSING_PARAM [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.0">
                        <sc:MSISDN>41000092102</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:com:swisscom:dss:1.0:resultmajor:SubsystemError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:subsystem:MobileID:service</ResultMinor>
    <ResultMessage xml:lang="en">mss:_102</ResultMessage>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDFault>
      <sc:Subcode xmlns:mss="http://uri.etsi.org/TS102204/v1.1.2#">mss:_102</sc:Subcode>
      <sc:Reason>MISSING_PARAM</sc:Reason>
      <sc:Detail>
        <sc:detail>Fault received from URL: https://b-hmssp.prod.mobileid:8443/soap/services/MSS_SignaturePort
At node: http://b-ae.prod.mobileid/</sc:detail>
        <sc:detail>An argument in the request is missing</sc:detail>
      </sc:Detail>
    </sc:MobileIDFault>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID 41000092103 WRONG_DATA_LENGTH [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID 41000092103 WRONG_DATA_LENGTH [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.0">
                        <sc:MSISDN>41000092103</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:com:swisscom:dss:1.0:resultmajor:SubsystemError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:subsystem:MobileID:service</ResultMinor>
    <ResultMessage xml:lang="en">mss:_103</ResultMessage>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDFault>
      <sc:Subcode xmlns:mss="http://uri.etsi.org/TS102204/v1.1.2#">mss:_103</sc:Subcode>
      <sc:Reason>WRONG_DATA_LENGTH</sc:Reason>
      <sc:Detail>
        <sc:detail>Fault received from URL: https://b-hmssp.prod.mobileid:8443/soap/services/MSS_SignaturePort
At node: http://b-ae.prod.mobileid/</sc:detail>
        <sc:detail>The DataToBeSigned are too large. Limitations are due to the Mobile Signature technology implemented by the MSSP</sc:detail>
      </sc:Detail>
    </sc:MobileIDFault>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID WrongTypeAttr [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID WrongTypeAttr [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.x">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>eN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:UnexpectedData</ResultMinor>
    <ResultMessage xml:lang="en">unknown &lt;MobileID> type 'urn:com:swisscom:auth:mobileid:v1.x'</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID MissingTypeAttr [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID MissingTypeAttr [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID>
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>eN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:InsufficientData</ResultMinor>
    <ResultMessage xml:lang="en">&lt;MobileID> type is missing</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand QUA MID MissingLangElement [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand QUA MID MissingLangElement [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_QUALIFIED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <!--<sc:Language>EN</sc:Language>-->
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:InsufficientData</ResultMinor>
    <ResultMessage xml:lang="en">Language</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID MissingDN [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID MissingDN [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <!--<sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>-->
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>eN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:InsufficientData</ResultMinor>
    <ResultMessage xml:lang="en">DistinguishedName</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="#2529 OnDemand ADV MID MissingC [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="#2529 OnDemand ADV MID MissingC [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:com:swisscom:dss:1.0:resultmajor:SubsystemError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:subsystem:Cmp</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name is missing required RDN 'countryCode' or 'C'</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="#2529 OnDemand ADV MID MissingCN [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="#2529 OnDemand ADV MID MissingCN [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>c=CH</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:com:swisscom:dss:1.0:resultmajor:SubsystemError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:subsystem:Cmp</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name is missing required RDN 'commonName' or 'CN'</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="#2529 OnDemand ADV MID InvalidC [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="#2529 OnDemand ADV MID InvalidC [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,c=xxx</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:com:swisscom:dss:1.0:resultmajor:SubsystemError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:subsystem:Cmp</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name RDN 'C' value must be exactly two characters long</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="#2529 OnDemand ADV MID WrongC [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="#2529 OnDemand ADV MID WrongC [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,c=$$</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>THIS TEXT SHOULD NOT BE SENT TO THE MOBILE</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:com:swisscom:dss:1.0:resultmajor:SubsystemError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:subsystem:Cmp</ResultMinor>
    <ResultMessage xml:lang="en">distinguished name could not be parsed</ResultMessage>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="UserAlert CANCEL Mobile ID 1"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN\nPLEASE >>> CANCEL &lt;&lt;&lt; THE REQUEST ON YOUR MOBILE")</script></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID Cancelled [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID Cancelled [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>Please CANCEL this message!</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:com:swisscom:dss:1.0:resultmajor:SubsystemError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:subsystem:MobileID:service</ResultMinor>
    <ResultMessage xml:lang="en">mss:_401</ResultMessage>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDFault>
      <sc:Subcode xmlns:mss="http://uri.etsi.org/TS102204/v1.1.2#">mss:_401</sc:Subcode>
      <sc:Reason>USER_CANCEL</sc:Reason>
      <sc:Detail>
        <sc:detail>Fault received from URL: https://b-hmssp.prod.mobileid:8443/soap/services/MSS_StatusQueryPort
At node: http://b-ae.prod.mobileid/</sc:detail>
        <sc:detail>User Cancelled the request</sc:detail>
      </sc:Detail>
    </sc:MobileIDFault>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="UserAlert TIMEOUT Mobile ID 1"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN\nPLEASE >>> IGNORE &lt;&lt;&lt; THE REQUEST ON YOUR MOBILE FOR AT LEAST 60 SECONDS")</script></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID STK-Timeout 60s [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID STK-Timeout 60s [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>Please IGNORE this message for at least 60 seconds</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:com:swisscom:dss:1.0:resultmajor:SubsystemError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:subsystem:MobileID:service</ResultMinor>
    <ResultMessage xml:lang="en">mss:_208</ResultMessage>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDFault>
      <sc:Subcode xmlns:mss="http://uri.etsi.org/TS102204/v1.1.2#">mss:_208</sc:Subcode>
      <sc:Reason>EXPIRED_TRANSACTION</sc:Reason>
      <sc:Detail>
        <sc:detail>Fault received from URL: https://b-hmssp.prod.mobileid:8443/soap/services/MSS_StatusQueryPort
At node: http://b-ae.prod.mobileid/</sc:detail>
        <sc:detail>Timeout waiting response</sc:detail>
      </sc:Detail>
    </sc:MobileIDFault>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="UserAlert AIRPLANE=ON Mobile ID"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
alert.showInfoMessage("Please >>> ENABLE AIRPLANE &lt;&lt;&lt; mode and click OK to continue..")</script></con:config></con:testStep><con:testStep type="request" name="OnDemand ADV MID Transaction-Timeout 180s [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand ADV MID Transaction-Timeout 180s [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>Please CANCEL this message</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:com:swisscom:dss:1.0:resultmajor:SubsystemError</ResultMajor>
    <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:subsystem:MobileID:service</ResultMinor>
    <ResultMessage xml:lang="en">mss:_208</ResultMessage>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDFault>
      <sc:Subcode xmlns:mss="http://uri.etsi.org/TS102204/v1.1.2#">mss:_208</sc:Subcode>
      <sc:Reason>EXPIRED_TRANSACTION</sc:Reason>
      <sc:Detail>
        <sc:detail>Original request timed out.</sc:detail>
      </sc:Detail>
    </sc:MobileIDFault>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="groovy" name="UserAlert AIRPLANE=OFF Mobile ID"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
alert.showInfoMessage("Done! Please >>> DISABLE AIRPLANE &lt;&lt;&lt; mode and WAIT 2 MINUTES TO CANCEL ANY INCOMING MID REQUESTS. THen click OK to continue..")</script></con:config></con:testStep><con:testStep type="delay" name="Delay (ensure GSM connectivity)"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="12 RESTful OnDemand MID" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b9d7afad-fa05-4124-b631-02dfdffca3ee"><con:settings/><con:testStep type="groovy" name="UserAlert Mobile ID 1"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")</script></con:config></con:testStep><con:testStep type="restrequest" name="XML OnDemand ADV MID [syn]"><con:settings/><con:config service="AIS RESTful" resourcePath="/DSS-Server/rs/v1.0/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML OnDemand ADV MID [syn]" mediaType="application/xml" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/xml"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
         <sc:StepUpAuthorisation>
            <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.0">
               <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
               <sc:Message>RegressionTest: OnDemand with MID (fr) ô crèche où ex æquo</sc:Message>
               <sc:Language>FR</sc:Language>
            </sc:MobileID>
         </sc:StepUpAuthorisation>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash>
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDAPTransID>*</sc:MobileIDAPTransID>
  </OptionalOutputs>
  <SignatureObject>
    <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="UserAlert Mobile ID 2"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")</script></con:config></con:testStep><con:testStep type="restrequest" name="JSON OnDemand ADV MID [syn]"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="/DSS-Server/rs/v1.0/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON OnDemand ADV MID [syn]" mediaType="application/json" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}"
      },
      "SignatureType": "urn:ietf:rfc:3369",
      "AdditionalProfile": "urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate", 
      "sc.CertificateRequest": { 
        "sc.DistinguishedName": "cn=Hans Muster,o=ACME,c=CH",
        "sc.StepUpAuthorisation": {
          "sc.MobileID": {
            "@Type": "urn:com:swisscom:auth:mobileid:v1.0",
            "sc.MSISDN": "${#TestSuite#MSISDN}",
            "sc.Message": "RegressionTest: OnDemand with MID (de) ô crèche où ex æquo",
            "sc.Language": "DE"
            }
          }
        },
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddOcspResponse": {"@Type": "urn:ietf:rfc:2560"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA256}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      }
    }
  }
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Validate JSON Response 1"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

def response = context.expand( '${JSON OnDemand ADV MID [syn]#Response}' ).toString()
def slurper = new JsonSlurper()
def json = slurper.parseText response

if ( json."SignResponse"."Result"."ResultMajor" != "urn:oasis:names:tc:dss:1.0:resultmajor:Success" ) {
	testRunner.fail("ResultMajor was not successful")
	return
}

if ( json."SignResponse"."SignatureObject"."Base64Signature"."@Type" != "urn:ietf:rfc:3369" ) {
	testRunner.fail("Signature type invalid")
	return
}
	
if ( ! ( json."SignResponse"."SignatureObject"."Base64Signature"."\$" ==~ /MII.*/ ) ) {
	testRunner.fail("Signature content invalid") 
	return
}
</script></con:config></con:testStep><con:testStep type="groovy" name="UserAlert Mobile ID 3"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")</script></con:config></con:testStep><con:testStep type="restrequest" name="XML OnDemand ADV MID Batch [asyn]"><con:settings/><con:config service="AIS RESTful" resourcePath="/DSS-Server/rs/v1.0/sign" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML OnDemand ADV MID Batch [asyn]" mediaType="application/xml" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/xml"/>
  &lt;con:entry key="Accept" value="application/xml"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <OptionalInputs>
      <ClaimedIdentity>
         <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
      </ClaimedIdentity>
      <SignatureType>urn:ietf:rfc:3369</SignatureType>
      <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
      <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
      <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
      <sc:CertificateRequest>
         <sc:DistinguishedName>CN=Hans Muster, O=ACME, C=CH</sc:DistinguishedName>
         <sc:StepUpAuthorisation>
            <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.0">
               <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
               <sc:Message>RegressionTest: OnDemand with MID (fr) ô crèche où ex æquo</sc:Message>
               <sc:Language>FR</sc:Language>
            </sc:MobileID>
         </sc:StepUpAuthorisation>
      </sc:CertificateRequest>
      <AddTimestamp Type="urn:ietf:rfc:3161"/>
      <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
   </OptionalInputs>
   <InputDocuments>
      <DocumentHash ID="256">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="384">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_1">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_2">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_3">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_4">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_5">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_6">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_7">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
      <DocumentHash ID="512_8">
         <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
         <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
      </DocumentHash>
   </InputDocuments>
</SignRequest>]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="urn:com:swisscom:dss:1.0:schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand ADV MID Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="urn:com:swisscom:dss:1.0:schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>XML OnDemand ADV MID Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>XML Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace dsig="http://www.w3.org/2000/09/xmldsig#" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="urn:com:swisscom:dss:1.0:schema" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0"
//async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1"><con:settings/><con:config><delay>0</delay></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Pending)"><con:settings/><con:config service="AIS RESTful" resourcePath="/DSS-Server/rs/v1.0/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Pending)" mediaType="application/xml" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
        </ClaimedIdentity>
        <async:ResponseID>08e6abd6-b62c-4e1b-b5fb-f458b02e486c</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="restrequest" name="XML Poll RequestID (Final)"><con:settings/><con:config service="AIS RESTful" resourcePath="/DSS-Server/rs/v1.0/pending" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="XML Poll RequestID (Final)" mediaType="application/xml" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<async:PendingRequest Profile="urn:com:swisscom:dss:v1.0" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
        </ClaimedIdentity>
        <async:ResponseID>08e6abd6-b62c-4e1b-b5fb-f458b02e486c</async:ResponseID>
    </OptionalInputs>
</async:PendingRequest>]]></con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//xmlns:SignResponse</path><content><![CDATA[<SignResponse RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <OptionalOutputs>
    <sc:MobileIDAPTransID>*</sc:MobileIDAPTransID>
  </OptionalOutputs>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="256">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="384">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_1">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_2">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_3">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_4">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_5">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_6">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_7">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_8">
          <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="UserAlert Mobile ID 4"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")</script></con:config></con:testStep><con:testStep type="restrequest" name="JSON OnDemand ADV MID Batch [asyn]"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="/DSS-Server/rs/v1.0/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON OnDemand ADV MID Batch [asyn]" mediaType="application/json" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}"
      },
      "SignatureType": "urn:ietf:rfc:3369",
      "AdditionalProfile": "urn:com:swisscom:dss:v1.0:profiles:batchprocessing",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing",
      "AdditionalProfile": "urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate", 
      "sc.CertificateRequest": { 
        "sc.DistinguishedName": "cn=Hans Muster,o=ACME,c=CH",
        "sc.StepUpAuthorisation": {
          "sc.MobileID": {
            "@Type": "urn:com:swisscom:auth:mobileid:v1.0",
            "sc.MSISDN": "${#TestSuite#MSISDN}",
            "sc.Message": "RegressionTest: OnDemand with MID (de) ô crèche où ex æquo",
            "sc.Language": "DE"
            }
          }
        },
      "AddTimestamp": {"@Type": "urn:ietf:rfc:3161"},
      "sc.AddOcspResponse": {"@Type": "urn:ietf:rfc:2560"}
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "256",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA256}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_256}"
      },
     "DocumentHash": {
        "@ID": "384",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA384}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_384}"
      },
     "DocumentHash": {
        "@ID": "512_1",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_2",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_3",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_4",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_5",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_6",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_7",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
      "DocumentHash": {
        "@ID": "512_8",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      }
    }
  }
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace xmlns='https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/sign';
//xmlns:Response/xmlns:SignResponse</path><content><![CDATA[<SignResponse Profile="urn:com:swisscom:dss:v1.0" RequestID="*" xmlns="https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/sign">
  <OptionalOutputs>
    <async.ResponseID>*</async.ResponseID>
  </OptionalOutputs>
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Get ResponseID 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ID</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>JSON OnDemand ADV MID Batch [asyn]</con:sourceStep><con:sourcePath>declare namespace xmlns='https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/sign';
//xmlns:Response/xmlns:SignResponse/xmlns:OptionalOutputs/xmlns:async.ResponseID</con:sourcePath><con:targetType>_tmp</con:targetType><con:targetStep>#TestSuite#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 2"><con:settings/><con:config><delay>0</delay></con:config></con:testStep><con:testStep type="restrequest" name="JSON Poll RequestID (Pending)"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="/DSS-Server/rs/v1.0/pending" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Poll RequestID (Pending)" mediaType="application/json" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}"
      },
      "async.ResponseID": "${#TestSuite#_tmp}"
    }
  }
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 2"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace xmlns='https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/pending';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 2</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="groovy" name="Validate JSON Response 2"><con:settings/><con:config><script>import com.eviware.soapui.support.XmlHolder
import groovy.json.JsonSlurper

def response = context.expand( '${JSON Poll RequestID (Pending)#Response}' ).toString()
def slurper = new JsonSlurper()
def json = slurper.parseText response

if ( json."SignResponse"."Result"."ResultMajor" != "urn:oasis:names:tc:dss:1.0:resultmajor:Success" ) {
	testRunner.fail("ResultMajor was not successful")
	return
}

if ( json."SignResponse"."SignatureObject"."Other"."sc.SignatureObjects"."sc.ExtendedSignatureObject"."Base64Signature"."@Type"[9] != "urn:ietf:rfc:3369" ) {
	testRunner.fail("Signature type invalid")
	return
}
	
if ( ! ( json."SignResponse"."SignatureObject"."Other"."sc.SignatureObjects"."sc.ExtendedSignatureObject"."Base64Signature"."\$"[9] ==~ /MII.*/ ) ) {
	testRunner.fail("Signature content invalid") 
	return
}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="13 SOAP OnDemand MID 101-Docs" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="95edf8d5-d815-411e-a981-3ba8148e0929"><con:settings/><con:testStep type="groovy" name="UserAlert Mobile ID 4"><con:settings/><con:config><script>def alert = com.eviware.soapui.support.UISupport;
def myMSISDN = testRunner.testCase.testSuite.getPropertyValue("MSISDN");
alert.showInfoMessage("Please first click OK and then proceed the Mobile ID Request on your Mobile $myMSISDN")</script></con:config></con:testStep><con:testStep type="request" name="OnDemand MID Batch 101-Docs [asyn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="OnDemand MID Batch 101-Docs [asyn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster, o=ACME, c=CH</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID Type="urn:com:swisscom:auth:mobileid:v1.0">
                        <sc:MSISDN>${#TestSuite#MSISDN}</sc:MSISDN>
                        <sc:Message>RegressionTest: Sign 101 Documents ?</sc:Message>
                        <sc:Language>En</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="512_001">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_002">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_003">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_004">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_005">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_006">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_007">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_008">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_009">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_010">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_011">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_012">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_013">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_014">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_015">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_016">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_017">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_018">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_019">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_020">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_021">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_022">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_023">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_024">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_025">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_026">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_027">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_028">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_029">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_030">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_031">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_032">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_033">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_034">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_035">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_036">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_037">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_038">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_039">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_040">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_041">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_042">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_043">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_044">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_045">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_046">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_047">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_048">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_049">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_050">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>      
               <DocumentHash ID="512_051">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_052">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_053">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_054">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_055">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_056">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_057">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_058">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_059">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_060">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_061">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_062">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_063">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_064">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_065">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_066">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_067">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_068">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_069">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_070">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_071">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_072">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_073">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_074">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_075">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_076">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_077">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_078">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_079">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_080">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_081">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_082">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_083">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_084">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_085">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_086">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_087">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_088">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_089">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_090">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_091">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_092">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_093">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_094">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_095">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_096">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_097">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_098">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_099">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_100">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_101">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Transfer ResponseID 1"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>Poll Pending</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand MID Batch 101-Docs [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Pending)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>Poll Final</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>OnDemand MID Batch 101-Docs [asyn]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse/xmlns:OptionalOutputs/async:ResponseID</con:sourcePath><con:targetType>Request</con:targetType><con:targetStep>Poll RequestID (Final)</con:targetStep><con:targetPath>declare namespace soap="http://schemas.xmlsoap.org/soap/envelope/" 
declare namespace async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" 
declare namespace xmlns="urn:oasis:names:tc:dss:1.0:core:schema" 
declare namespace ais="http://service.ais.swisscom.com/"
//soap:Envelope/soap:Body/ais:pending/async:PendingRequest/xmlns:OptionalInputs/async:ResponseID</con:targetPath></con:transfers></con:config></con:testStep><con:testStep type="delay" name="Poll Delay 1"><con:settings/><con:config><delay>0</delay></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Pending)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Pending)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <async:ResponseID>d76d54cb-c055-41b7-b941-f00e83b54359</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="goto" name="Check-If-Pending 1"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Check-If-Ready</con:name><con:type>XPATH</con:type><con:expression>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';
matches(//xmlns:ResultMajor/text(),'Pending')</con:expression><con:targetStep>Poll Delay 1</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="request" name="Poll RequestID (Final)"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="Poll RequestID (Final)"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <async:PendingRequest Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <async:ResponseID>d76d54cb-c055-41b7-b941-f00e83b54359</async:ResponseID>
            </OptionalInputs>
         </async:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:pendingResponse</path><content><![CDATA[<ais:pendingResponse xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Response xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <Result>
      <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
    </Result>
    <OptionalOutputs>
      <sc:MobileIDAPTransID>*</sc:MobileIDAPTransID>
    </OptionalOutputs>
    <SignatureObject>
      <Other>
        <sc:SignatureObjects>
          <sc:ExtendedSignatureObject WhichDocument="512_001">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_002">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_003">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_004">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_005">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_006">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_007">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_008">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_009">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_010">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_011">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_012">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_013">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_014">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_015">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_016">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_017">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_018">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_019">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_020">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_021">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_022">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_023">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_024">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_025">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_026">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_027">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_028">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_029">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_030">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_031">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_032">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_033">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_034">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_035">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_036">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_037">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_038">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_039">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_040">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_041">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_042">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_043">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_044">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_045">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_046">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_047">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_048">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_049">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_050">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_051">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_052">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_053">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_054">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_055">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_056">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_057">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_058">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_059">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_060">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_061">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_062">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_063">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_064">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_065">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_066">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_067">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_068">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_069">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_070">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_071">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_072">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_073">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_074">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_075">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_076">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_077">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_078">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_079">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_080">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_081">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_082">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_083">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_084">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_085">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_086">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_087">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_088">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_089">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_090">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_091">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_092">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_093">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_094">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_095">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_096">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_097">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_098">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_099">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_100">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_101">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
        </sc:SignatureObjects>
      </Other>
    </SignatureObject>
  </Response>
</ais:pendingResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="14 SOAP SimHighTraffic" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true"><con:settings/><con:testStep type="request" name="TS Batch 101-Docs [syn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="TS Batch 101-Docs [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="512_001">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_002">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_003">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_004">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_005">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_006">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_007">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_008">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_009">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_010">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_011">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_012">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_013">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_014">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_015">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_016">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_017">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_018">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_019">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_020">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_021">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_022">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_023">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_024">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_025">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_026">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_027">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_028">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_029">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_030">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_031">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_032">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_033">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_034">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_035">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_036">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_037">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_038">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_039">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_040">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_041">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_042">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_043">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_044">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_045">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_046">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_047">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_048">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_049">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_050">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>      
               <DocumentHash ID="512_051">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_052">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_053">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_054">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_055">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_056">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_057">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_058">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_059">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_060">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_061">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_062">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_063">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_064">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_065">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_066">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_067">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_068">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_069">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_070">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_071">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_072">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_073">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_074">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_075">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_076">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_077">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_078">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_079">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_080">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_081">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_082">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_083">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_084">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_085">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_086">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_087">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_088">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_089">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_090">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_091">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_092">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_093">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_094">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_095">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_096">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_097">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_098">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_099">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_100">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_101">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="512_001">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_002">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_003">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_004">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_005">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_006">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_007">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_008">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_009">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_010">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_011">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_012">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_013">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_014">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_015">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_016">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_017">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_018">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_019">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_020">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_021">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_022">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_023">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_024">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_025">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_026">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_027">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_028">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_029">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_030">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_031">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_032">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_033">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_034">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_035">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_036">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_037">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_038">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_039">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_040">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_041">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_042">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_043">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_044">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_045">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_046">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_047">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_048">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_049">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_050">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_051">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_052">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_053">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_054">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_055">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_056">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_057">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_058">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_059">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_060">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_061">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_062">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_063">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_064">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_065">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_066">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_067">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_068">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_069">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_070">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_071">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_072">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_073">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_074">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_075">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_076">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_077">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_078">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_079">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_080">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_081">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_082">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_083">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_084">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_085">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_086">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_087">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_088">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_089">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_090">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_091">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_092">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_093">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_094">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_095">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_096">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_097">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_098">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_099">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_100">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
        <sc:ExtendedSignatureObject WhichDocument="512_101">
          <Timestamp>
            <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
          </Timestamp>
        </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="TS Batch 101-Docs [asyn]"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="TS Batch 101-Docs [asyn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="512_001">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_002">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_003">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_004">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_005">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_006">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_007">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_008">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_009">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_010">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_011">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_012">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_013">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_014">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_015">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_016">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_017">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_018">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_019">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_020">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_021">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_022">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_023">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_024">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_025">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_026">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_027">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_028">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_029">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_030">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_031">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_032">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_033">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_034">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_035">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_036">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_037">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_038">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_039">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_040">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_041">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_042">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_043">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_044">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_045">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_046">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_047">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_048">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_049">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_050">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>      
               <DocumentHash ID="512_051">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_052">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_053">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_054">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_055">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_056">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_057">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_058">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_059">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_060">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_061">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_062">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_063">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_064">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_065">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_066">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_067">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_068">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_069">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_070">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_071">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_072">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_073">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_074">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_075">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_076">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_077">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_078">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_079">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_080">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_081">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_082">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_083">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_084">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_085">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_086">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_087">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_088">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_089">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_090">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_091">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_092">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_093">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_094">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_095">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_096">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_097">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_098">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_099">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_100">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_101">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static Batch 101-Docs [syn]" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="Static Batch 101-Docs [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="512_001">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_002">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_003">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_004">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_005">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_006">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_007">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_008">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_009">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_010">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_011">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_012">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_013">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_014">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_015">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_016">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_017">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_018">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_019">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_020">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_021">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_022">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_023">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_024">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_025">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_026">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_027">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_028">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_029">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_030">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_031">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_032">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_033">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_034">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_035">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_036">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_037">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_038">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_039">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_040">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_041">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_042">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_043">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_044">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_045">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_046">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_047">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_048">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_049">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_050">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>      
               <DocumentHash ID="512_051">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_052">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_053">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_054">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_055">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_056">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_057">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_058">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_059">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_060">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_061">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_062">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_063">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_064">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_065">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_066">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_067">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_068">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_069">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_070">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_071">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_072">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_073">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_074">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_075">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_076">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_077">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_078">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_079">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_080">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_081">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_082">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_083">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_084">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_085">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_086">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_087">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_088">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_089">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_090">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_091">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_092">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_093">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_094">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_095">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_096">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_097">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_098">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_099">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_100">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_101">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="512_001">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_002">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_003">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_004">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_005">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_006">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_007">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_008">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_009">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_010">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_011">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_012">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_013">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_014">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_015">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_016">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_017">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_018">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_019">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_020">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_021">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_022">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_023">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_024">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_025">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_026">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_027">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_028">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_029">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_030">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_031">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_032">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_033">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_034">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_035">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_036">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_037">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_038">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_039">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_040">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_041">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_042">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_043">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_044">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_045">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_046">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_047">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_048">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_049">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_050">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_051">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_052">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_053">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_054">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_055">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_056">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_057">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_058">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_059">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_060">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_061">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_062">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_063">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_064">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_065">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_066">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_067">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_068">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_069">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_070">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_071">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_072">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_073">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_074">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_075">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_076">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_077">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_078">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_079">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_080">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_081">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_082">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_083">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_084">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_085">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_086">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_087">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_088">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_089">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_090">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_091">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_092">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_093">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_094">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_095">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_096">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_097">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_098">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_099">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_100">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_101">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Static Batch 101-Docs [asyn]" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="Static Batch 101-Docs [asyn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#STATIC_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="512_001">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_002">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_003">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_004">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_005">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_006">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_007">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_008">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_009">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_010">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_011">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_012">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_013">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_014">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_015">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_016">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_017">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_018">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_019">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_020">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_021">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_022">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_023">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_024">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_025">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_026">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_027">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_028">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_029">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_030">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_031">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_032">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_033">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_034">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_035">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_036">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_037">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_038">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_039">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_040">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_041">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_042">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_043">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_044">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_045">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_046">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_047">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_048">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_049">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_050">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>      
               <DocumentHash ID="512_051">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_052">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_053">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_054">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_055">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_056">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_057">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_058">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_059">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_060">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_061">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_062">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_063">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_064">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_065">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_066">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_067">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_068">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_069">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_070">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_071">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_072">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_073">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_074">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_075">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_076">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_077">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_078">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_079">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_080">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_081">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_082">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_083">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_084">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_085">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_086">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_087">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_088">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_089">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_090">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_091">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_092">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_093">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_094">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_095">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_096">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_097">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_098">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_099">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_100">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_101">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="#2434 OnDemand Batch 101-Docs [syn]" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="#2434 OnDemand Batch 101-Docs [syn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="512_001">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_002">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_003">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_004">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_005">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_006">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_007">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_008">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_009">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_010">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_011">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_012">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_013">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_014">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_015">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_016">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_017">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_018">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_019">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_020">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_021">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_022">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_023">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_024">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_025">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_026">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_027">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_028">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_029">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_030">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_031">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_032">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_033">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_034">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_035">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_036">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_037">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_038">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_039">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_040">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_041">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_042">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_043">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_044">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_045">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_046">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_047">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_048">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_049">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_050">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>      
               <DocumentHash ID="512_051">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_052">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_053">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_054">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_055">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_056">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_057">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_058">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_059">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_060">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_061">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_062">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_063">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_064">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_065">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_066">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_067">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_068">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_069">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_070">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_071">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_072">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_073">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_074">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_075">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_076">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_077">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_078">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_079">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_080">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_081">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_082">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_083">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_084">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_085">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_086">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_087">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_088">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_089">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_090">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_091">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_092">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_093">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_094">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_095">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_096">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_097">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_098">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_099">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_100">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_101">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Other>
      <sc:SignatureObjects>
        <sc:ExtendedSignatureObject WhichDocument="512_001">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_002">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_003">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_004">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_005">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_006">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_007">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_008">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_009">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_010">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_011">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_012">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_013">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_014">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_015">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_016">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_017">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_018">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_019">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_020">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_021">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_022">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_023">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_024">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_025">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_026">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_027">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_028">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_029">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_030">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_031">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_032">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_033">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_034">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_035">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_036">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_037">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_038">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_039">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_040">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_041">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_042">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_043">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_044">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_045">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_046">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_047">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_048">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_049">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_050">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_051">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_052">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_053">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_054">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_055">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_056">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_057">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_058">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_059">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_060">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_061">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_062">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_063">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_064">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_065">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_066">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_067">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_068">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_069">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_070">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_071">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_072">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_073">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_074">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_075">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_076">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_077">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_078">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_079">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_080">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_081">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_082">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_083">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_084">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_085">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_086">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_087">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_088">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_089">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_090">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_091">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_092">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_093">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_094">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_095">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_096">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_097">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_098">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_099">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_100">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
          <sc:ExtendedSignatureObject WhichDocument="512_101">
            <Base64Signature Type="urn:ietf:rfc:3369">*</Base64Signature>
          </sc:ExtendedSignatureObject>
      </sc:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="#2434 OnDemand Batch 101-Docs [asyn]" disabled="true"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>AIS SOAP</con:interface><con:operation>sign</con:operation><con:request name="#2434 OnDemand Batch 101-Docs [asyn]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}:${#TestSuite#ONDEMAND_ADVANCED}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="512_001">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_002">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_003">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_004">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_005">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_006">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_007">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_008">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_009">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_010">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_011">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_012">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_013">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_014">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_015">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_016">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_017">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_018">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_019">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_020">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_021">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_022">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_023">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_024">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_025">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_026">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_027">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_028">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_029">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_030">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_031">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_032">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_033">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_034">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_035">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_036">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_037">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_038">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_039">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_040">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_041">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_042">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_043">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_044">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_045">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_046">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_047">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_048">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_049">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_050">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>      
               <DocumentHash ID="512_051">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_052">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_053">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_054">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_055">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_056">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_057">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_058">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_059">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_060">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_061">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_062">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_063">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_064">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_065">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_066">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_067">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_068">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_069">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_070">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_071">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_072">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_073">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_074">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_075">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_076">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_077">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_078">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_079">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_080">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_081">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_082">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_083">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_084">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_085">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_086">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_087">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_088">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_089">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_090">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_091">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_092">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_093">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_094">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_095">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_096">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_097">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_098">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_099">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_100">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512_101">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace xmlns='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace sc='urn:com:swisscom:dss:1.0:schema';
declare namespace ais='http://service.ais.swisscom.com/';
declare namespace async='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace dsig='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ais:signResponse/xmlns:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ais="http://service.ais.swisscom.com/" xmlns:sc="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <async:ResponseID>*</async:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:loadTest name="Basic Simple Run"><con:settings><con:setting id="HttpSettings@close-connections">true</con:setting></con:settings><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>5</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>1000</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>true</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="15 RESTful SimHighTraffic" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" disabled="true"><con:settings/><con:testStep type="restrequest" name="JSON TS Batch 101-Docs [syn]"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="/DSS-Server/rs/v1.0/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON TS Batch 101-Docs [syn]" mediaType="application/json" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "SignatureType": "urn:ietf:rfc:3161",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:timestamping",
      "AdditionalProfile": "urn:com:swisscom:dss:v1.0:profiles:batchprocessing"
    },
    "InputDocuments": {
      "DocumentHash": {
        "@ID": "512_001",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_002",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_003",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_004",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_005",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_006",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_007",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_008",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_009",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_010",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_011",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_012",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_013",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_014",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_015",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_016",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_017",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_018",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_019",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_020",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_021",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_022",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_023",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_024",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_025",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_026",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_027",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_028",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_029",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_030",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_031",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_032",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_033",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_034",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_035",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_036",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_037",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_038",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_039",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_040",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_041",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_042",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_043",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_044",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_045",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_046",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_047",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_048",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_049",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_050",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_051",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_052",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_053",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_054",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_055",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_056",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_057",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_058",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_059",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_060",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_061",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_062",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_063",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_064",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_065",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_066",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_067",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_068",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_069",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_070",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_071",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_072",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_073",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_074",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_075",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_076",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_077",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_078",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_079",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_080",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_081",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_082",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_083",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_084",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_085",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_086",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_087",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_088",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_089",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_090",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_091",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_092",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_093",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_094",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_095",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_096",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_097",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_098",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_099",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_100",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_101",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      }
    }
  }
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace xmlns='https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/sign';
//xmlns:Response/xmlns:SignResponse</path><content><![CDATA[<SignResponse Profile="urn:com:swisscom:dss:v1.0" RequestID="*" xmlns="https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/sign">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Other>
      <sc.SignatureObjects>
        <sc.ExtendedSignatureObject>
          <e WhichDocument="512_001">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_002">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_003">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_004">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_005">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_006">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_007">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_008">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_009">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_010">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_011">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_012">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_013">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_014">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_015">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_016">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_017">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_018">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_019">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_020">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_021">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_022">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_023">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_024">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_025">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_026">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_027">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_028">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_029">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_030">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_031">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_032">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_033">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_034">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_035">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_036">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_037">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_038">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_039">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_040">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_041">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_042">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_043">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_044">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_045">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_046">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_047">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_048">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_049">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_050">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_051">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_052">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_053">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_054">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_055">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_056">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_057">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_058">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_059">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_060">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_061">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_062">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_063">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_064">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_065">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_066">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_067">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_068">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_069">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_070">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_071">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_072">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_073">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_074">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_075">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_076">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_077">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_078">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_079">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_080">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_081">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_082">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_083">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_084">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_085">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_086">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_087">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_088">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_089">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_090">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_091">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_092">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_093">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_094">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_095">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_096">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_097">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_098">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_099">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_100">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
          <e WhichDocument="512_101">
            <Timestamp>
              <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
            </Timestamp>
          </e>
        </sc.ExtendedSignatureObject>
      </sc.SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="JSON TS Batch 101-Docs [asyn]"><con:settings/><con:config service="AIS RESTful" methodName="POST" resourcePath="/DSS-Server/rs/v1.0/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON TS Batch 101-Docs [asyn]" mediaType="application/json" postQueryString="false" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment xmlns:con="http://eviware.com/soapui/config">
  &lt;con:entry key="Accept" value="application/json"/>
  &lt;con:entry key="Accept" value="application/json"/>
&lt;/xml-fragment></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "SignRequest": {
    "@RequestID": "${=new Date().format("yyyy-MM-dd'T'HH:mm:ss.SSSZ")}",
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "OptionalInputs": {
      "ClaimedIdentity": {
        "Name": "${#TestSuite#AP_ID}"
      },
      "SignatureType": "urn:ietf:rfc:3161",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:timestamping",
      "AdditionalProfile": "urn:com:swisscom:dss:v1.0:profiles:batchprocessing",
      "AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing"
    },
    "InputDocuments": {
            "DocumentHash": {
        "@ID": "512_001",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_002",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_003",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_004",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_005",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_006",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_007",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_008",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_009",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_010",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_011",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_012",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_013",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_014",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_015",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_016",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_017",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_018",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_019",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_020",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_021",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_022",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_023",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_024",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_025",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_026",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_027",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_028",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_029",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_030",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_031",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_032",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_033",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_034",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_035",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_036",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_037",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_038",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_039",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_040",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_041",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_042",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_043",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_044",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_045",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_046",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_047",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_048",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_049",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_050",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_051",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_052",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_053",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_054",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_055",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_056",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_057",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_058",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_059",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_060",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_061",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_062",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_063",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_064",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_065",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_066",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_067",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_068",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_069",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_070",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_071",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_072",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_073",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_074",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_075",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_076",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_077",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_078",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_079",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_080",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_081",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_082",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_083",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_084",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_085",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_086",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_087",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_088",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_089",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_090",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_091",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_092",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_093",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_094",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_095",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_096",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_097",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_098",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_099",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_100",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      },
     "DocumentHash": {
        "@ID": "512_101",
        "dsig.DigestMethod": { "@Algorithm": "${#TestSuite#SHA512}" },
        "dsig.DigestValue": "${#TestSuite#DIGEST_512}"
      }
    }
  }
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace xmlns='https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/sign';
//xmlns:Response/xmlns:SignResponse</path><content><![CDATA[<SignResponse Profile="urn:com:swisscom:dss:v1.0" RequestID="*" xmlns="https://ais.pre.swissdigicert.ch/DSS-Server/rs/v1.0/sign">
  <OptionalOutputs>
    <async.ResponseID>*</async.ResponseID>
  </OptionalOutputs>
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:loadTest name="Basic Simple Run"><con:settings><con:setting id="HttpSettings@close-connections">true</con:setting></con:settings><con:threadCount>10</con:threadCount><con:startDelay>0</con:startDelay><con:sampleInterval>250</con:sampleInterval><con:calculateTPSOnTimePassed>true</con:calculateTPSOnTimePassed><con:resetStatisticsOnThreadCountChange>true</con:resetStatisticsOnThreadCountChange><con:historyLimit>-1</con:historyLimit><con:testLimit>5</con:testLimit><con:limitType>COUNT_PER_THREAD</con:limitType><con:loadStrategy><con:type>Simple</con:type><con:config><testDelay>1000</testDelay><randomFactor>0.5</randomFactor></con:config></con:loadStrategy><con:assertion type="Step Status" name="Step Status"/><con:maxAssertionErrors>100</con:maxAssertionErrors><con:statisticsLogFolder/><con:statisticsLogInterval>0</con:statisticsLogInterval><con:logStatisticsOnThreadChange>false</con:logStatisticsOnThreadChange><con:cancelOnReachedLimit>true</con:cancelOnReachedLimit><con:cancelExcessiveThreads>true</con:cancelExcessiveThreads><con:strategyInterval>500</con:strategyInterval><con:updateStatisticsPerTestStep>false</con:updateStatisticsPerTestStep><con:reportParameters/></con:loadTest><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>AP_ID</con:name><con:value>cartel.ch</con:value></con:property><con:property><con:name>STATIC_ID</con:name><con:value>kp2-cartel.ch</con:value></con:property><con:property><con:name>ONDEMAND_QUALIFIED</con:name><con:value>OnDemand-Qualified</con:value></con:property><con:property><con:name>ONDEMAND_ADVANCED</con:name><con:value>OnDemand-Advanced</con:value></con:property><con:property><con:name>MSISDN</con:name><con:value>4179123456</con:value></con:property><con:property><con:name>SHA256</con:name><con:value>http://www.w3.org/2001/04/xmlenc#sha256</con:value></con:property><con:property><con:name>SHA384</con:name><con:value>http://www.w3.org/2001/04/xmldsig-more#sha384</con:value></con:property><con:property><con:name>SHA512</con:name><con:value>http://www.w3.org/2001/04/xmlenc#sha512</con:value></con:property><con:property><con:name>DIGEST_256</con:name><con:value>1WON4H3Hrinf7LYRNmhV6Uf7apdUvuYEsmhxAklxumA=</con:value></con:property><con:property><con:name>DIGEST_384</con:name><con:value>be5JJtVMoZqkJ3isZaBBpwXXQtV4Opqf3KtYcHacCh7fVZ1bS8VSnMnK3z9mIy1R</con:value></con:property><con:property><con:name>DIGEST_512</con:name><con:value>FsntfB/ATHb1O7HlxpB4l9L+1vkgCOki3omkM6jJVnxXDRRgd1uZ7S/GkLPkFEUJ+SDllcWWjDNJHJcnkritGg==</con:value></con:property><con:property><con:name>_tmp</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">7f488616-771a-4a73-a4be-d6b4ddb61355</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/></con:soapui-project>