<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project activeEnvironment="Default" name="AIS Signing Service" resourceRoot="${projectDir}" soapui-version="4.6.2" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:description>Swissco All-In Signing Service</con:description><con:settings/><con:interface xsi:type="con:WsdlInterface" wsaVersion="NONE" name="DigitalSignatureServiceSoapBinding" type="wsdl" bindingName="{http://server.ais.swisscom.com/}DigitalSignatureServiceServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="../services/wsdl/service.wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="..\services\wsdl\service.wsdl"><con:part><con:url>..\services\wsdl\service.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="DigitalSignatureServiceService" targetNamespace="http://server.ais.swisscom.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://server.ais.swisscom.com/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns2="http://schemas.xmlsoap.org/soap/http" xmlns:ns1="http://service.ais.swisscom.com/">
  <wsdl:import location="IDigitalSignatureService.wsdl" namespace="http://service.ais.swisscom.com/"/>
  <wsdl:binding name="DigitalSignatureServiceServiceSoapBinding" type="ns1:IDigitalSignatureService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="pending">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="pending">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="pendingResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sign">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="sign">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="signResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="DigitalSignatureServiceService">
    <wsdl:port binding="tns:DigitalSignatureServiceServiceSoapBinding" name="DigitalSignatureServicePort">
      <soap:address location="https://ais.pre.swissdigicert.ch/DSS-Server/ws"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>..\services\wsdl\IDigitalSignatureService.wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="IDigitalSignatureService" targetNamespace="http://service.ais.swisscom.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://service.ais.swisscom.com/">
  <wsdl:types>
    <xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:attribute name="lang" type="xs:string"/>
    </xs:schema>
    <xs:schema elementFormDefault="unqualified" targetNamespace="http://service.ais.swisscom.com/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://service.ais.swisscom.com/" xmlns:ns2="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ns1="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
      <xs:import namespace="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" schemaLocation="../schema/oasis/oasis-dss-profiles-asynchronous-processing-schema-v1.0-os.xsd"/>
      <xs:import namespace="urn:oasis:names:tc:dss:1.0:core:schema" schemaLocation="../schema/oasis/oasis-dss-core-schema-v1.0-os.xsd"/>
      <xs:element name="pending" type="tns:pending"/>
      <xs:element name="pendingResponse" type="tns:pendingResponse"/>
      <xs:element name="sign" type="tns:sign"/>
      <xs:element name="signResponse" type="tns:signResponse"/>
      <xs:complexType name="pending">
        <xs:sequence>
          <xs:element minOccurs="0" ref="ns1:PendingRequest"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="pendingResponse">
        <xs:sequence>
          <xs:element minOccurs="0" ref="ns2:Response"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="sign">
        <xs:sequence>
          <xs:element minOccurs="0" ref="ns2:SignRequest"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="signResponse">
        <xs:sequence>
          <xs:element minOccurs="0" ref="ns2:SignResponse"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="sign">
    <wsdl:part element="ns1:sign" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="signResponse">
    <wsdl:part element="ns1:signResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="pendingResponse">
    <wsdl:part element="ns1:pendingResponse" name="parameters"/>
  </wsdl:message>
  <wsdl:message name="pending">
    <wsdl:part element="ns1:pending" name="parameters"/>
  </wsdl:message>
  <wsdl:portType name="IDigitalSignatureService">
    <wsdl:operation name="pending">
      <wsdl:input message="ns1:pending" name="pending"/>
      <wsdl:output message="ns1:pendingResponse" name="pendingResponse"/>
    </wsdl:operation>
    <wsdl:operation name="sign">
      <wsdl:input message="ns1:sign" name="sign"/>
      <wsdl:output message="ns1:signResponse" name="signResponse"/>
    </wsdl:operation>
  </wsdl:portType>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>..\services\schema\oasis\oasis-dss-profiles-asynchronous-processing-schema-v1.0-os.xsd</con:url><con:content><![CDATA[<!---->
<!--Schema defining the additional elements used for asynchronous processing.-->
<!--This schema extends the OASIS DSS core schema.-->
<!---->
<!--version : cd-r2, 12. Aug. 2006-->
<!--author  : andreas kuehne, kuehne@klup.de-->
<!---->
<xs:schema targetNamespace="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:dss="urn:oasis:names:tc:dss:1.0:core:schema">
  <xs:import namespace="urn:oasis:names:tc:dss:1.0:core:schema" schemaLocation="http://docs.oasis-open.org/dss/v1.0/oasis-dss-core-schema-v1.0-os.xsd"/>
  <!--Additional requests required for asynch protocol-->
  <xs:element name="PendingRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:RequestBaseType"/>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="ResponseID">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://docs.oasis-open.org/dss/v1.0/oasis-dss-core-schema-v1.0-os.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="urn:oasis:names:tc:dss:1.0:core:schema" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:dss="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:saml="urn:oasis:names:tc:SAML:1.0:assertion">
  <xs:annotation>
    <xs:documentation xml:lang="en">This Schema defines the Digital Signature Service Core Protocols, Elements, and Bindings Committee Specification version 1.0 release 1</xs:documentation>
  </xs:annotation>
  <xs:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd"/>
  <xs:import namespace="urn:oasis:names:tc:SAML:1.0:assertion" schemaLocation="http://www.oasis-open.org/committees/download.php/3408/oasis-sstc-saml-schema-protocol-1.1.xsd"/>
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/xml.xsd"/>
  <xs:complexType name="AnyType">
    <xs:sequence>
      <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InternationalStringType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute ref="xml:lang" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="InputDocuments">
    <xs:complexType>
      <xs:sequence>
        <xs:choice maxOccurs="unbounded">
          <xs:element ref="dss:Document"/>
          <xs:element ref="dss:TransformedData"/>
          <xs:element ref="dss:DocumentHash"/>
          <xs:element name="Other" type="dss:AnyType"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="DocumentBaseType" abstract="true">
    <xs:attribute name="ID" type="xs:ID" use="optional"/>
    <xs:attribute name="RefURI" type="xs:anyURI" use="optional"/>
    <xs:attribute name="RefType" type="xs:anyURI" use="optional"/>
    <xs:attribute name="SchemaRefs" type="xs:IDREFS" use="optional"/>
  </xs:complexType>
  <xs:element name="Document" type="dss:DocumentType"/>
  <xs:complexType name="DocumentType">
    <xs:complexContent>
      <xs:extension base="dss:DocumentBaseType">
        <xs:choice>
          <xs:element name="InlineXML" type="dss:InlineXMLType"/>
          <xs:element name="Base64XML" type="xs:base64Binary"/>
          <xs:element name="EscapedXML" type="xs:string"/>
          <xs:element ref="dss:Base64Data"/>
          <xs:element ref="dss:AttachmentReference"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="Base64Data">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:base64Binary">
          <xs:attribute name="MimeType" type="xs:string" use="optional"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="InlineXMLType">
    <xs:sequence>
      <xs:any processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="ignorePIs" type="xs:boolean" use="optional" default="true"/>
    <xs:attribute name="ignoreComments" type="xs:boolean" use="optional" default="true"/>
  </xs:complexType>
  <xs:element name="TransformedData">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:DocumentBaseType">
          <xs:sequence>
            <xs:element ref="ds:Transforms" minOccurs="0"/>
            <xs:element ref="dss:Base64Data"/>
          </xs:sequence>
          <xs:attribute name="WhichReference" type="xs:integer" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="DocumentHash">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:DocumentBaseType">
          <xs:sequence>
            <xs:element ref="ds:Transforms" minOccurs="0"/>
            <xs:element ref="ds:DigestMethod" minOccurs="0"/>
            <xs:element ref="ds:DigestValue"/>
          </xs:sequence>
          <xs:attribute name="WhichReference" type="xs:integer" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignatureObject">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="ds:Signature"/>
          <xs:element ref="dss:Timestamp"/>
          <xs:element ref="dss:Base64Signature"/>
          <xs:element ref="dss:SignaturePtr"/>
          <xs:element name="Other" type="dss:AnyType"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="SchemaRefs" type="xs:IDREFS" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Base64Signature">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:base64Binary">
          <xs:attribute name="Type" type="xs:anyURI"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignaturePtr">
    <xs:complexType>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="XPath" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Result">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ResultMajor" type="xs:anyURI"/>
        <xs:element name="ResultMinor" type="xs:anyURI" minOccurs="0"/>
        <xs:element name="ResultMessage" type="dss:InternationalStringType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="OptionalInputs" type="dss:AnyType"/>
  <xs:element name="OptionalOutputs" type="dss:AnyType"/>
  <xs:element name="ServicePolicy" type="xs:anyURI"/>
  <xs:element name="ClaimedIdentity">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Name" type="saml:NameIdentifierType"/>
        <xs:element name="SupportingInfo" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Language" type="xs:language"/>
  <xs:element name="AdditionalProfile" type="xs:anyURI"/>
  <xs:element name="Schemas" type="dss:SchemasType"/>
  <xs:complexType name="SchemasType">
    <xs:sequence>
      <xs:element ref="dss:Schema" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Schema" type="dss:DocumentType"/>
  <xs:complexType name="RequestBaseType">
    <xs:sequence>
      <xs:element ref="dss:OptionalInputs" minOccurs="0"/>
      <xs:element ref="dss:InputDocuments" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="RequestID" type="xs:string" use="optional"/>
    <xs:attribute name="Profile" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:complexType name="ResponseBaseType">
    <xs:sequence>
      <xs:element ref="dss:Result"/>
      <xs:element ref="dss:OptionalOutputs" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="RequestID" type="xs:string" use="optional"/>
    <xs:attribute name="Profile" type="xs:anyURI" use="required"/>
  </xs:complexType>
  <xs:element name="Response" type="dss:ResponseBaseType"/>
  <xs:element name="SignRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:RequestBaseType"/>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignResponse">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:ResponseBaseType">
          <xs:sequence>
            <xs:element ref="dss:SignatureObject" minOccurs="0"/>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignatureType" type="xs:anyURI"/>
  <xs:element name="AddTimestamp" type="dss:UpdateSignatureInstructionType"/>
  <xs:complexType name="TimeSignatureInstructionType">
    <xs:complexContent>
      <xs:extension base="dss:UpdateSignatureInstructionType">
        <xs:attribute name="TimeStampTheGivenSignature" type="xs:boolean" use="optional" default="false"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UpdateSignatureInstructionType">
    <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:element name="IntendedAudience">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Recipient" type="saml:NameIdentifierType" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="KeySelector">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="ds:KeyInfo"/>
        <xs:element name="Other" type="dss:AnyType"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="Properties">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="SignedProperties" type="dss:PropertiesType" minOccurs="0"/>
        <xs:element name="UnsignedProperties" type="dss:PropertiesType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="PropertiesType">
    <xs:sequence>
      <xs:element ref="dss:Property" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Property">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Identifier" type="xs:anyURI"/>
        <xs:element name="Value" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="IncludeObject">
    <xs:complexType>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="hasObjectTagsAndAttributesSet" type="xs:boolean" default="false"/>
      <xs:attribute name="ObjId" type="xs:string" use="optional"/>
      <xs:attribute name="createReference" type="xs:boolean" use="optional" default="true"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignaturePlacement">
    <xs:complexType>
      <xs:choice>
        <xs:element name="XPathAfter" type="xs:string"/>
        <xs:element name="XPathFirstChildOf" type="xs:string"/>
      </xs:choice>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="CreateEnvelopedSignature" type="xs:boolean" default="true"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="DocumentWithSignature">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:Document"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignedReferences">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:SignedReference" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignedReference">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ds:Transforms" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="WhichDocument" type="xs:IDREF" use="required"/>
      <xs:attribute name="RefURI" type="xs:anyURI" use="optional"/>
      <xs:attribute name="RefId" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="VerifyRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:RequestBaseType">
          <xs:sequence>
            <xs:element ref="dss:SignatureObject" minOccurs="0"/>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="VerifyResponse" type="dss:ResponseBaseType"/>
  <xs:element name="VerifyManifestResults" type="dss:VerifyManifestResultsType"/>
  <xs:complexType name="VerifyManifestResultsType">
    <xs:sequence>
      <xs:element ref="dss:ManifestResult" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ManifestResult">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ReferenceXpath" type="xs:string"/>
        <xs:element name="Status" type="xs:anyURI"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="UseVerificationTime"/>
  <xs:complexType name="UseVerificationTimeType">
    <xs:choice>
      <xs:element name="CurrentTime"/>
      <xs:element name="SpecificTime" type="xs:dateTime"/>
      <xs:any namespace="##other"/>
    </xs:choice>
  </xs:complexType>
  <xs:element name="ReturnVerificationTimeInfo"/>
  <xs:element name="AdditionalTimeInfo" type="dss:AdditionalTimeInfoType"/>
  <xs:complexType name="AdditionalTimeInfoType">
    <xs:simpleContent>
      <xs:extension base="xs:dateTime">
        <xs:attribute name="Type" type="xs:anyURI" use="required"/>
        <xs:attribute name="Ref" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="VerificationTimeInfo" type="dss:VerificationTimeInfoType"/>
  <xs:complexType name="VerificationTimeInfoType">
    <xs:sequence>
      <xs:element name="VerificationTime" type="xs:dateTime"/>
      <xs:element ref="dss:AdditionalTimeInfo" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AdditionalKeyInfo">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ds:KeyInfo"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ReturnProcessingDetails"/>
  <xs:element name="ProcessingDetails">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ValidDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="IndeterminateDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="InvalidDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="DetailType">
    <xs:sequence>
      <xs:element name="Code" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="Message" type="dss:InternationalStringType" minOccurs="0"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:anyURI" use="required"/>
  </xs:complexType>
  <xs:element name="ReturnSigningTimeInfo"/>
  <xs:element name="SigningTimeInfo" type="dss:SigningTimeInfoType"/>
  <xs:complexType name="SigningTimeInfoType">
    <xs:sequence>
      <xs:element name="SigningTime" type="xs:dateTime"/>
      <xs:element name="SigningTimeBoundaries" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="LowerBoundary" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="UpperBoundary" type="xs:dateTime" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ReturnSignerIdentity"/>
  <xs:element name="SignerIdentity" type="saml:NameIdentifierType"/>
  <xs:element name="ReturnUpdatedSignature">
    <xs:complexType>
      <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="UpdatedSignature" type="dss:UpdatedSignatureType"/>
  <xs:complexType name="UpdatedSignatureType">
    <xs:sequence>
      <xs:element ref="dss:SignatureObject"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:element name="ReturnTransformedDocument">
    <xs:complexType>
      <xs:attribute name="WhichReference" type="xs:integer" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="TransformedDocument">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:Document"/>
      </xs:sequence>
      <xs:attribute name="WhichReference" type="xs:integer" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ReturnTimestampedSignature" type="dss:UpdateSignatureInstructionType"/>
  <xs:element name="TimestampedSignature" type="dss:UpdatedSignatureType"/>
  <xs:element name="Timestamp">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="ds:Signature"/>
        <xs:element name="RFC3161TimeStampToken" type="xs:base64Binary"/>
        <xs:element name="Other" type="dss:AnyType"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="TstInfo">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="SerialNumber" type="xs:integer"/>
        <xs:element name="CreationTime" type="xs:dateTime"/>
        <xs:element name="Policy" type="xs:anyURI" minOccurs="0"/>
        <xs:element name="ErrorBound" type="xs:duration" minOccurs="0"/>
        <xs:element name="Ordered" type="xs:boolean" default="false" minOccurs="0"/>
        <xs:element name="TSA" type="saml:NameIdentifierType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="RequesterIdentity">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Name" type="saml:NameIdentifierType"/>
        <xs:element name="SupportingInfo" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="AttachmentReference" type="dss:AttachmentReferenceType"/>
  <xs:complexType name="AttachmentReferenceType">
    <xs:sequence minOccurs="0">
      <xs:element ref="ds:DigestMethod"/>
      <xs:element ref="ds:DigestValue"/>
    </xs:sequence>
    <xs:attribute name="AttRefURI" type="xs:anyURI"/>
    <xs:attribute name="MimeType" type="xs:string" use="optional"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!DOCTYPE schema PUBLIC "-//W3C//DTD XMLSchema 200102//EN" "http://www.w3.org/2001/XMLSchema.dtd">
<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" version="0.1" elementFormDefault="qualified" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"></restriction>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" minOccurs="0" type="ds:HMACOutputLengthType"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
      <element name="XPath" type="string"/>
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any processContents="lax" namespace="##other"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <choice>
      <sequence>
        <element name="PGPKeyID" type="base64Binary"/>
        <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <sequence>
        <element name="PGPKeyPacket" type="base64Binary"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
    </choice>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <!--add a grep facet-->
    <attribute name="Encoding" type="anyURI" use="optional"/>
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://www.oasis-open.org/committees/download.php/3408/oasis-sstc-saml-schema-protocol-1.1.xsd</con:url><con:content><![CDATA[<schema targetNamespace="urn:oasis:names:tc:SAML:1.0:assertion" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="1.1" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:saml="urn:oasis:names:tc:SAML:1.0:assertion" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd"/>
  <annotation>
    <documentation>Document identifier: oasis-sstc-saml-schema-assertion-1.1
                Location: http://www.oasis-open.org/committees/documents.php?wg_abbrev=security
                Revision history:
                V1.0 (November, 2002):
                  Initial standard schema.
                V1.1 (September, 2003):
                  * Note that V1.1 of this schema has the same XML namespace as V1.0.
                  Rebased ID content directly on XML Schema types
                  Added DoNotCacheCondition element and DoNotCacheConditionType</documentation>
  </annotation>
  <simpleType name="DecisionType">
    <restriction base="string">
      <enumeration value="Permit"/>
      <enumeration value="Deny"/>
      <enumeration value="Indeterminate"/>
    </restriction>
  </simpleType>
  <element name="AssertionIDReference" type="NCName"/>
  <element name="Assertion" type="saml:AssertionType"/>
  <complexType name="AssertionType">
    <sequence>
      <element ref="saml:Conditions" minOccurs="0"/>
      <element ref="saml:Advice" minOccurs="0"/>
      <choice maxOccurs="unbounded">
        <element ref="saml:Statement"/>
        <element ref="saml:SubjectStatement"/>
        <element ref="saml:AuthenticationStatement"/>
        <element ref="saml:AuthorizationDecisionStatement"/>
        <element ref="saml:AttributeStatement"/>
      </choice>
      <element ref="ds:Signature" minOccurs="0"/>
    </sequence>
    <attribute name="MajorVersion" type="integer" use="required"/>
    <attribute name="MinorVersion" type="integer" use="required"/>
    <attribute name="AssertionID" type="ID" use="required"/>
    <attribute name="Issuer" type="string" use="required"/>
    <attribute name="IssueInstant" type="dateTime" use="required"/>
  </complexType>
  <element name="Conditions" type="saml:ConditionsType"/>
  <complexType name="ConditionsType">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element ref="saml:AudienceRestrictionCondition"/>
      <element ref="saml:DoNotCacheCondition"/>
      <element ref="saml:Condition"/>
    </choice>
    <attribute name="NotBefore" type="dateTime" use="optional"/>
    <attribute name="NotOnOrAfter" type="dateTime" use="optional"/>
  </complexType>
  <element name="Condition" type="saml:ConditionAbstractType"/>
  <complexType name="ConditionAbstractType" abstract="true"/>
  <element name="AudienceRestrictionCondition" type="saml:AudienceRestrictionConditionType"/>
  <complexType name="AudienceRestrictionConditionType">
    <complexContent>
      <extension base="saml:ConditionAbstractType">
        <sequence>
          <element ref="saml:Audience" maxOccurs="unbounded"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="Audience" type="anyURI"/>
  <element name="DoNotCacheCondition" type="saml:DoNotCacheConditionType"/>
  <complexType name="DoNotCacheConditionType">
    <complexContent>
      <extension base="saml:ConditionAbstractType"/>
    </complexContent>
  </complexType>
  <element name="Advice" type="saml:AdviceType"/>
  <complexType name="AdviceType">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element ref="saml:AssertionIDReference"/>
      <element ref="saml:Assertion"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="Statement" type="saml:StatementAbstractType"/>
  <complexType name="StatementAbstractType" abstract="true"/>
  <element name="SubjectStatement" type="saml:SubjectStatementAbstractType"/>
  <complexType name="SubjectStatementAbstractType" abstract="true">
    <complexContent>
      <extension base="saml:StatementAbstractType">
        <sequence>
          <element ref="saml:Subject"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="Subject" type="saml:SubjectType"/>
  <complexType name="SubjectType">
    <choice>
      <sequence>
        <element ref="saml:NameIdentifier"/>
        <element ref="saml:SubjectConfirmation" minOccurs="0"/>
      </sequence>
      <element ref="saml:SubjectConfirmation"/>
    </choice>
  </complexType>
  <element name="NameIdentifier" type="saml:NameIdentifierType"/>
  <complexType name="NameIdentifierType">
    <simpleContent>
      <extension base="string">
        <attribute name="NameQualifier" type="string" use="optional"/>
        <attribute name="Format" type="anyURI" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <element name="SubjectConfirmation" type="saml:SubjectConfirmationType"/>
  <complexType name="SubjectConfirmationType">
    <sequence>
      <element ref="saml:ConfirmationMethod" maxOccurs="unbounded"/>
      <element ref="saml:SubjectConfirmationData" minOccurs="0"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
    </sequence>
  </complexType>
  <element name="SubjectConfirmationData" type="anyType"/>
  <element name="ConfirmationMethod" type="anyURI"/>
  <element name="AuthenticationStatement" type="saml:AuthenticationStatementType"/>
  <complexType name="AuthenticationStatementType">
    <complexContent>
      <extension base="saml:SubjectStatementAbstractType">
        <sequence>
          <element ref="saml:SubjectLocality" minOccurs="0"/>
          <element ref="saml:AuthorityBinding" minOccurs="0" maxOccurs="unbounded"/>
        </sequence>
        <attribute name="AuthenticationMethod" type="anyURI" use="required"/>
        <attribute name="AuthenticationInstant" type="dateTime" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="SubjectLocality" type="saml:SubjectLocalityType"/>
  <complexType name="SubjectLocalityType">
    <attribute name="IPAddress" type="string" use="optional"/>
    <attribute name="DNSAddress" type="string" use="optional"/>
  </complexType>
  <element name="AuthorityBinding" type="saml:AuthorityBindingType"/>
  <complexType name="AuthorityBindingType">
    <attribute name="AuthorityKind" type="QName" use="required"/>
    <attribute name="Location" type="anyURI" use="required"/>
    <attribute name="Binding" type="anyURI" use="required"/>
  </complexType>
  <element name="AuthorizationDecisionStatement" type="saml:AuthorizationDecisionStatementType"/>
  <complexType name="AuthorizationDecisionStatementType">
    <complexContent>
      <extension base="saml:SubjectStatementAbstractType">
        <sequence>
          <element ref="saml:Action" maxOccurs="unbounded"/>
          <element ref="saml:Evidence" minOccurs="0"/>
        </sequence>
        <attribute name="Resource" type="anyURI" use="required"/>
        <attribute name="Decision" type="saml:DecisionType" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Action" type="saml:ActionType"/>
  <complexType name="ActionType">
    <simpleContent>
      <extension base="string">
        <attribute name="Namespace" type="anyURI"/>
      </extension>
    </simpleContent>
  </complexType>
  <element name="Evidence" type="saml:EvidenceType"/>
  <complexType name="EvidenceType">
    <choice maxOccurs="unbounded">
      <element ref="saml:AssertionIDReference"/>
      <element ref="saml:Assertion"/>
    </choice>
  </complexType>
  <element name="AttributeStatement" type="saml:AttributeStatementType"/>
  <complexType name="AttributeStatementType">
    <complexContent>
      <extension base="saml:SubjectStatementAbstractType">
        <sequence>
          <element ref="saml:Attribute" maxOccurs="unbounded"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AttributeDesignator" type="saml:AttributeDesignatorType"/>
  <complexType name="AttributeDesignatorType">
    <attribute name="AttributeName" type="string" use="required"/>
    <attribute name="AttributeNamespace" type="anyURI" use="required"/>
  </complexType>
  <element name="Attribute" type="saml:AttributeType"/>
  <complexType name="AttributeType">
    <complexContent>
      <extension base="saml:AttributeDesignatorType">
        <sequence>
          <element ref="saml:AttributeValue" maxOccurs="unbounded"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AttributeValue" type="anyType"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://www.w3.org/2001/xml.xsd</con:url><con:content><![CDATA[<?xml-stylesheet href="../2008/09/xsd.xsl" type="text/xsl"?>
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
  <xs:annotation>
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation>
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>..\services\schema\oasis\oasis-dss-core-schema-v1.0-os.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="urn:oasis:names:tc:dss:1.0:core:schema" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:dss="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:saml="urn:oasis:names:tc:SAML:1.0:assertion">
  <xs:annotation>
    <xs:documentation xml:lang="en">This Schema defines the Digital Signature Service Core Protocols, Elements, and Bindings Committee Specification version 1.0 release 1</xs:documentation>
  </xs:annotation>
  <xs:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd"/>
  <xs:import namespace="urn:oasis:names:tc:SAML:1.0:assertion" schemaLocation="http://www.oasis-open.org/committees/download.php/3408/oasis-sstc-saml-schema-protocol-1.1.xsd"/>
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/xml.xsd"/>
  <xs:complexType name="AnyType">
    <xs:sequence>
      <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InternationalStringType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute ref="xml:lang" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="InputDocuments">
    <xs:complexType>
      <xs:sequence>
        <xs:choice maxOccurs="unbounded">
          <xs:element ref="dss:Document"/>
          <xs:element ref="dss:TransformedData"/>
          <xs:element ref="dss:DocumentHash"/>
          <xs:element name="Other" type="dss:AnyType"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="DocumentBaseType" abstract="true">
    <xs:attribute name="ID" type="xs:ID" use="optional"/>
    <xs:attribute name="RefURI" type="xs:anyURI" use="optional"/>
    <xs:attribute name="RefType" type="xs:anyURI" use="optional"/>
    <xs:attribute name="SchemaRefs" type="xs:IDREFS" use="optional"/>
  </xs:complexType>
  <xs:element name="Document" type="dss:DocumentType"/>
  <xs:complexType name="DocumentType">
    <xs:complexContent>
      <xs:extension base="dss:DocumentBaseType">
        <xs:choice>
          <xs:element name="InlineXML" type="dss:InlineXMLType"/>
          <xs:element name="Base64XML" type="xs:base64Binary"/>
          <xs:element name="EscapedXML" type="xs:string"/>
          <xs:element ref="dss:Base64Data"/>
          <xs:element ref="dss:AttachmentReference"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="Base64Data">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:base64Binary">
          <xs:attribute name="MimeType" type="xs:string" use="optional"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="InlineXMLType">
    <xs:sequence>
      <xs:any processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="ignorePIs" type="xs:boolean" use="optional" default="true"/>
    <xs:attribute name="ignoreComments" type="xs:boolean" use="optional" default="true"/>
  </xs:complexType>
  <xs:element name="TransformedData">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:DocumentBaseType">
          <xs:sequence>
            <xs:element ref="ds:Transforms" minOccurs="0"/>
            <xs:element ref="dss:Base64Data"/>
          </xs:sequence>
          <xs:attribute name="WhichReference" type="xs:integer" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="DocumentHash">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:DocumentBaseType">
          <xs:sequence>
            <xs:element ref="ds:Transforms" minOccurs="0"/>
            <xs:element ref="ds:DigestMethod" minOccurs="0"/>
            <xs:element ref="ds:DigestValue"/>
          </xs:sequence>
          <xs:attribute name="WhichReference" type="xs:integer" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignatureObject">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="ds:Signature"/>
          <xs:element ref="dss:Timestamp"/>
          <xs:element ref="dss:Base64Signature"/>
          <xs:element ref="dss:SignaturePtr"/>
          <xs:element name="Other" type="dss:AnyType"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="SchemaRefs" type="xs:IDREFS" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Base64Signature">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:base64Binary">
          <xs:attribute name="Type" type="xs:anyURI"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignaturePtr">
    <xs:complexType>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="XPath" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Result">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ResultMajor" type="xs:anyURI"/>
        <xs:element name="ResultMinor" type="xs:anyURI" minOccurs="0"/>
        <xs:element name="ResultMessage" type="dss:InternationalStringType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="OptionalInputs" type="dss:AnyType"/>
  <xs:element name="OptionalOutputs" type="dss:AnyType"/>
  <xs:element name="ServicePolicy" type="xs:anyURI"/>
  <xs:element name="ClaimedIdentity">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Name" type="saml:NameIdentifierType"/>
        <xs:element name="SupportingInfo" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Language" type="xs:language"/>
  <xs:element name="AdditionalProfile" type="xs:anyURI"/>
  <xs:element name="Schemas" type="dss:SchemasType"/>
  <xs:complexType name="SchemasType">
    <xs:sequence>
      <xs:element ref="dss:Schema" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Schema" type="dss:DocumentType"/>
  <xs:complexType name="RequestBaseType">
    <xs:sequence>
      <xs:element ref="dss:OptionalInputs" minOccurs="0"/>
      <xs:element ref="dss:InputDocuments" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="RequestID" type="xs:string" use="optional"/>
    <xs:attribute name="Profile" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:complexType name="ResponseBaseType">
    <xs:sequence>
      <xs:element ref="dss:Result"/>
      <xs:element ref="dss:OptionalOutputs" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="RequestID" type="xs:string" use="optional"/>
    <xs:attribute name="Profile" type="xs:anyURI" use="required"/>
  </xs:complexType>
  <xs:element name="Response" type="dss:ResponseBaseType"/>
  <xs:element name="SignRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:RequestBaseType"/>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignResponse">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:ResponseBaseType">
          <xs:sequence>
            <xs:element ref="dss:SignatureObject" minOccurs="0"/>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignatureType" type="xs:anyURI"/>
  <xs:element name="AddTimestamp" type="dss:UpdateSignatureInstructionType"/>
  <xs:complexType name="TimeSignatureInstructionType">
    <xs:complexContent>
      <xs:extension base="dss:UpdateSignatureInstructionType">
        <xs:attribute name="TimeStampTheGivenSignature" type="xs:boolean" use="optional" default="false"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UpdateSignatureInstructionType">
    <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:element name="IntendedAudience">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Recipient" type="saml:NameIdentifierType" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="KeySelector">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="ds:KeyInfo"/>
        <xs:element name="Other" type="dss:AnyType"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="Properties">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="SignedProperties" type="dss:PropertiesType" minOccurs="0"/>
        <xs:element name="UnsignedProperties" type="dss:PropertiesType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="PropertiesType">
    <xs:sequence>
      <xs:element ref="dss:Property" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Property">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Identifier" type="xs:anyURI"/>
        <xs:element name="Value" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="IncludeObject">
    <xs:complexType>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="hasObjectTagsAndAttributesSet" type="xs:boolean" default="false"/>
      <xs:attribute name="ObjId" type="xs:string" use="optional"/>
      <xs:attribute name="createReference" type="xs:boolean" use="optional" default="true"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignaturePlacement">
    <xs:complexType>
      <xs:choice>
        <xs:element name="XPathAfter" type="xs:string"/>
        <xs:element name="XPathFirstChildOf" type="xs:string"/>
      </xs:choice>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="CreateEnvelopedSignature" type="xs:boolean" default="true"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="DocumentWithSignature">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:Document"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignedReferences">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:SignedReference" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignedReference">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ds:Transforms" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="WhichDocument" type="xs:IDREF" use="required"/>
      <xs:attribute name="RefURI" type="xs:anyURI" use="optional"/>
      <xs:attribute name="RefId" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="VerifyRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:RequestBaseType">
          <xs:sequence>
            <xs:element ref="dss:SignatureObject" minOccurs="0"/>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="VerifyResponse" type="dss:ResponseBaseType"/>
  <xs:element name="VerifyManifestResults" type="dss:VerifyManifestResultsType"/>
  <xs:complexType name="VerifyManifestResultsType">
    <xs:sequence>
      <xs:element ref="dss:ManifestResult" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ManifestResult">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ReferenceXpath" type="xs:string"/>
        <xs:element name="Status" type="xs:anyURI"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="UseVerificationTime"/>
  <xs:complexType name="UseVerificationTimeType">
    <xs:choice>
      <xs:element name="CurrentTime"/>
      <xs:element name="SpecificTime" type="xs:dateTime"/>
      <xs:any namespace="##other"/>
    </xs:choice>
  </xs:complexType>
  <xs:element name="ReturnVerificationTimeInfo"/>
  <xs:element name="AdditionalTimeInfo" type="dss:AdditionalTimeInfoType"/>
  <xs:complexType name="AdditionalTimeInfoType">
    <xs:simpleContent>
      <xs:extension base="xs:dateTime">
        <xs:attribute name="Type" type="xs:anyURI" use="required"/>
        <xs:attribute name="Ref" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="VerificationTimeInfo" type="dss:VerificationTimeInfoType"/>
  <xs:complexType name="VerificationTimeInfoType">
    <xs:sequence>
      <xs:element name="VerificationTime" type="xs:dateTime"/>
      <xs:element ref="dss:AdditionalTimeInfo" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AdditionalKeyInfo">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ds:KeyInfo"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ReturnProcessingDetails"/>
  <xs:element name="ProcessingDetails">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ValidDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="IndeterminateDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="InvalidDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="DetailType">
    <xs:sequence>
      <xs:element name="Code" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="Message" type="dss:InternationalStringType" minOccurs="0"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:anyURI" use="required"/>
  </xs:complexType>
  <xs:element name="ReturnSigningTimeInfo"/>
  <xs:element name="SigningTimeInfo" type="dss:SigningTimeInfoType"/>
  <xs:complexType name="SigningTimeInfoType">
    <xs:sequence>
      <xs:element name="SigningTime" type="xs:dateTime"/>
      <xs:element name="SigningTimeBoundaries" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="LowerBoundary" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="UpperBoundary" type="xs:dateTime" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ReturnSignerIdentity"/>
  <xs:element name="SignerIdentity" type="saml:NameIdentifierType"/>
  <xs:element name="ReturnUpdatedSignature">
    <xs:complexType>
      <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="UpdatedSignature" type="dss:UpdatedSignatureType"/>
  <xs:complexType name="UpdatedSignatureType">
    <xs:sequence>
      <xs:element ref="dss:SignatureObject"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:element name="ReturnTransformedDocument">
    <xs:complexType>
      <xs:attribute name="WhichReference" type="xs:integer" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="TransformedDocument">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:Document"/>
      </xs:sequence>
      <xs:attribute name="WhichReference" type="xs:integer" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ReturnTimestampedSignature" type="dss:UpdateSignatureInstructionType"/>
  <xs:element name="TimestampedSignature" type="dss:UpdatedSignatureType"/>
  <xs:element name="Timestamp">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="ds:Signature"/>
        <xs:element name="RFC3161TimeStampToken" type="xs:base64Binary"/>
        <xs:element name="Other" type="dss:AnyType"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="TstInfo">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="SerialNumber" type="xs:integer"/>
        <xs:element name="CreationTime" type="xs:dateTime"/>
        <xs:element name="Policy" type="xs:anyURI" minOccurs="0"/>
        <xs:element name="ErrorBound" type="xs:duration" minOccurs="0"/>
        <xs:element name="Ordered" type="xs:boolean" default="false" minOccurs="0"/>
        <xs:element name="TSA" type="saml:NameIdentifierType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="RequesterIdentity">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Name" type="saml:NameIdentifierType"/>
        <xs:element name="SupportingInfo" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="AttachmentReference" type="dss:AttachmentReferenceType"/>
  <xs:complexType name="AttachmentReferenceType">
    <xs:sequence minOccurs="0">
      <xs:element ref="ds:DigestMethod"/>
      <xs:element ref="ds:DigestValue"/>
    </xs:sequence>
    <xs:attribute name="AttRefURI" type="xs:anyURI"/>
    <xs:attribute name="MimeType" type="xs:string" use="optional"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint></con:endpoints><con:operation isOneWay="false" action="" name="pending" bindingOperationName="pending" type="Request-Response" outputName="pendingResponse" inputName="pending" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Pending"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:asynch="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <asynch:PendingRequest Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>cartel.ch</Name>
               </ClaimedIdentity>
               <asynch:ResponseID>07409050-464f-4b6d-b638-9afc6e9cabe6</asynch:ResponseID>
            </OptionalInputs>
         </asynch:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.ais.swisscom.com/IDigitalSignatureService/pending"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation isOneWay="false" action="" name="sign" bindingOperationName="sign" type="Request-Response" outputName="signResponse" inputName="sign" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call name="Timestamp by WSDL [synch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ser="http://service.ais.swisscom.com/" xmlns:urn="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:xd="http://www.w3.org/2000/09/xmldsig#">
   <soapenv:Header/>
   <soapenv:Body>
      <ser:sign>
         <urn:SignRequest RequestID="${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSS')}" Profile="urn:com:swisscom:dss:v1.0">
            <urn:OptionalInputs>
               <urn:ClaimedIdentity Format="urn:com:swisscom:dss:v1.0:entity">
                  <urn:Name>cartel.ch</urn:Name>
               </urn:ClaimedIdentity>
               <urn:SignatureType>urn:ietf:rfc:3161</urn:SignatureType>
               <urn:AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</urn:AdditionalProfile>
            </urn:OptionalInputs>
            <urn:InputDocuments>
               <urn:DocumentHash>
                  <xd:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <xd:DigestValue>GcXfOzOP8GsBu7odeT1w3GnMedppEWvngCQ7Ef1IBMA=</xd:DigestValue>
               </urn:DocumentHash>
            </urn:InputDocuments>
         </urn:SignRequest>
      </ser:sign>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Timestamp [synch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSS')}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity Format="urn:com:swisscom:dss:v1.0:entity">
                  <Name>cartel.ch</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>GcXfOzOP8GsBu7odeT1w3GnMedppEWvngCQ7Ef1IBMA=</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.ais.swisscom.com/IDigitalSignatureService/sign"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Static [synch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSS')}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity Format="urn:com:swisscom:dss:v1.0:entity">
                  <Name>cartel.ch:kp2-cartel.ch</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>GcXfOzOP8GsBu7odeT1w3GnMedppEWvngCQ7Ef1IBMA=</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.ais.swisscom.com/IDigitalSignatureService/sign"/><con:wsrmConfig version="1.2"/></con:call><con:call name="OnDemand [synch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSS')}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>cartel.ch:OnDemand-Advanced</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>GcXfOzOP8GsBu7odeT1w3GnMedppEWvngCQ7Ef1IBMA=</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.ais.swisscom.com/IDigitalSignatureService/sign"/><con:wsrmConfig version="1.2"/></con:call><con:call name="OnDemand MID [synch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSS')}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>cartel.ch:OnDemand-Advanced</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID>
                        <sc:MSISDN>+41797895164</sc:MSISDN>
                        <sc:Message>SoapUI: Please Authenticate with your PIN</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>GcXfOzOP8GsBu7odeT1w3GnMedppEWvngCQ7Ef1IBMA=</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.ais.swisscom.com/IDigitalSignatureService/sign"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Timestamp [asynch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSS')}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity Format="urn:com:swisscom:dss:v1.0:entity">
                  <Name>cartel.ch</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>GcXfOzOP8GsBu7odeT1w3GnMedppEWvngCQ7Ef1IBMA=</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.ais.swisscom.com/IDigitalSignatureService/sign"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Timestamp BATCH [synch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSS')}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity Format="urn:com:swisscom:dss:v1.0:entity">
                  <Name>cartel.ch</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="sco-case1.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>1WON4H3Hrinf7LYRNmhV6Uf7apdUvuYEsmhxAklxumA=</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="sco-case2.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>PMbaV562vh2HjLeEQ+Xz2qYAqXNPylp/KrHHnlZrmag=</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="sco-case3.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>qQYswQVETwZqPEV8HIxHhfP2+ID65jD4lWQjzrXXFAs=</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.ais.swisscom.com/IDigitalSignatureService/sign"/><con:wsrmConfig version="1.2"/></con:call><con:call name="Static BATCH [synch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSS')}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity Format="urn:com:swisscom:dss:v1.0:entity">
                  <Name>cartel.ch:kp2-cartel.ch</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="sco-case1.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>1WON4H3Hrinf7LYRNmhV6Uf7apdUvuYEsmhxAklxumA=</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="sco-case2.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>PMbaV562vh2HjLeEQ+Xz2qYAqXNPylp/KrHHnlZrmag=</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="sco-case3.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>qQYswQVETwZqPEV8HIxHhfP2+ID65jD4lWQjzrXXFAs=</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.ais.swisscom.com/IDigitalSignatureService/sign"/><con:wsrmConfig version="1.2"/></con:call><con:call name="OnDemand BATCH [synch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSS')}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>cartel.ch:OnDemand-Advanced</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="sco-case1.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>1WON4H3Hrinf7LYRNmhV6Uf7apdUvuYEsmhxAklxumA=</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="sco-case2.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>PMbaV562vh2HjLeEQ+Xz2qYAqXNPylp/KrHHnlZrmag=</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="sco-case3.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>qQYswQVETwZqPEV8HIxHhfP2+ID65jD4lWQjzrXXFAs=</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.ais.swisscom.com/IDigitalSignatureService/sign"/><con:wsrmConfig version="1.2"/></con:call><con:call name="OnDemand MID BATCH [synch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:sc="urn:com:swisscom:dss:1.0:schema">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSS')}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>cartel.ch:OnDemand-Advanced</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3369</SignatureType>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:ondemandcertificate</AdditionalProfile>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
               <sc:CertificateRequest>
                  <sc:DistinguishedName>cn=Hans Muster,o=ACME,c=CH</sc:DistinguishedName>
                  <sc:StepUpAuthorisation>
                     <sc:MobileID>
                        <sc:MSISDN>+41797895164</sc:MSISDN>
                        <sc:Message>SoapUI: Please Authenticate with your PIN</sc:Message>
                        <sc:Language>EN</sc:Language>
                     </sc:MobileID>
                  </sc:StepUpAuthorisation>
               </sc:CertificateRequest>
               <AddTimestamp Type="urn:ietf:rfc:3161"/>
               <sc:AddOcspResponse Type="urn:ietf:rfc:2560"/>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash ID="sco-case1.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>1WON4H3Hrinf7LYRNmhV6Uf7apdUvuYEsmhxAklxumA=</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="sco-case2.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>PMbaV562vh2HjLeEQ+Xz2qYAqXNPylp/KrHHnlZrmag=</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="sco-case3.crt">
                  <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
                  <dsig:DigestValue>qQYswQVETwZqPEV8HIxHhfP2+ID65jD4lWQjzrXXFAs=</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://server.ais.swisscom.com/IDigitalSignatureService/sign"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AIS Signing Service" type="rest" basePath="/DSS-Server/rs" definitionUrl="..\services\wadl\service.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="../services/wadl/service.wadl"><con:part><con:url>../services/wadl/service.wadl</con:url><con:content><![CDATA[<application xmlns="http://wadl.dev.java.net/2009/02" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:prefix1="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:prefix2="urn:oasis:names:tc:dss:1.0:core:schema">
  <grammars>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://www.w3.org/XML/1998/namespace">
      <xs:attribute name="lang" type="xs:string"/>
    </xs:schema>
    <include href="../schema/oasis/oasis-dss-core-schema-v1.0-os.xsd"/>
    <include href="../schema/oasis/oasis-dss-profiles-asynchronous-processing-schema-v1.0-os.xsd"/>
  </grammars>
  <resources base="https://ais.pre.swissdigicert.ch/DSS-Server/rs">
    <resource path="/v1.0">
      <resource path="/pending">
        <method name="POST">
          <request>
            <representation mediaType="application/xml" element="prefix1:PendingRequest"/>
            <representation mediaType="application/json"/>
          </request>
          <response>
            <representation mediaType="application/xml" element="prefix2:Response"/>
            <representation mediaType="application/json"/>
          </response>
        </method>
      </resource>
      <resource path="/sign">
        <method name="POST">
          <request>
            <representation mediaType="application/xml" element="prefix2:SignRequest"/>
            <representation mediaType="application/json"/>
          </request>
          <response>
            <representation mediaType="application/xml" element="prefix2:Response"/>
            <representation mediaType="application/json"/>
          </response>
        </method>
      </resource>
    </resource>
  </resources>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>..\services\schema\oasis\oasis-dss-core-schema-v1.0-os.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="urn:oasis:names:tc:dss:1.0:core:schema" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:dss="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:saml="urn:oasis:names:tc:SAML:1.0:assertion">
  <xs:annotation>
    <xs:documentation xml:lang="en">This Schema defines the Digital Signature Service Core Protocols, Elements, and Bindings Committee Specification version 1.0 release 1</xs:documentation>
  </xs:annotation>
  <xs:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd"/>
  <xs:import namespace="urn:oasis:names:tc:SAML:1.0:assertion" schemaLocation="http://www.oasis-open.org/committees/download.php/3408/oasis-sstc-saml-schema-protocol-1.1.xsd"/>
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/xml.xsd"/>
  <xs:complexType name="AnyType">
    <xs:sequence>
      <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InternationalStringType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute ref="xml:lang" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="InputDocuments">
    <xs:complexType>
      <xs:sequence>
        <xs:choice maxOccurs="unbounded">
          <xs:element ref="dss:Document"/>
          <xs:element ref="dss:TransformedData"/>
          <xs:element ref="dss:DocumentHash"/>
          <xs:element name="Other" type="dss:AnyType"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="DocumentBaseType" abstract="true">
    <xs:attribute name="ID" type="xs:ID" use="optional"/>
    <xs:attribute name="RefURI" type="xs:anyURI" use="optional"/>
    <xs:attribute name="RefType" type="xs:anyURI" use="optional"/>
    <xs:attribute name="SchemaRefs" type="xs:IDREFS" use="optional"/>
  </xs:complexType>
  <xs:element name="Document" type="dss:DocumentType"/>
  <xs:complexType name="DocumentType">
    <xs:complexContent>
      <xs:extension base="dss:DocumentBaseType">
        <xs:choice>
          <xs:element name="InlineXML" type="dss:InlineXMLType"/>
          <xs:element name="Base64XML" type="xs:base64Binary"/>
          <xs:element name="EscapedXML" type="xs:string"/>
          <xs:element ref="dss:Base64Data"/>
          <xs:element ref="dss:AttachmentReference"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="Base64Data">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:base64Binary">
          <xs:attribute name="MimeType" type="xs:string" use="optional"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="InlineXMLType">
    <xs:sequence>
      <xs:any processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="ignorePIs" type="xs:boolean" use="optional" default="true"/>
    <xs:attribute name="ignoreComments" type="xs:boolean" use="optional" default="true"/>
  </xs:complexType>
  <xs:element name="TransformedData">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:DocumentBaseType">
          <xs:sequence>
            <xs:element ref="ds:Transforms" minOccurs="0"/>
            <xs:element ref="dss:Base64Data"/>
          </xs:sequence>
          <xs:attribute name="WhichReference" type="xs:integer" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="DocumentHash">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:DocumentBaseType">
          <xs:sequence>
            <xs:element ref="ds:Transforms" minOccurs="0"/>
            <xs:element ref="ds:DigestMethod" minOccurs="0"/>
            <xs:element ref="ds:DigestValue"/>
          </xs:sequence>
          <xs:attribute name="WhichReference" type="xs:integer" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignatureObject">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="ds:Signature"/>
          <xs:element ref="dss:Timestamp"/>
          <xs:element ref="dss:Base64Signature"/>
          <xs:element ref="dss:SignaturePtr"/>
          <xs:element name="Other" type="dss:AnyType"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="SchemaRefs" type="xs:IDREFS" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Base64Signature">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:base64Binary">
          <xs:attribute name="Type" type="xs:anyURI"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignaturePtr">
    <xs:complexType>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="XPath" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Result">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ResultMajor" type="xs:anyURI"/>
        <xs:element name="ResultMinor" type="xs:anyURI" minOccurs="0"/>
        <xs:element name="ResultMessage" type="dss:InternationalStringType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="OptionalInputs" type="dss:AnyType"/>
  <xs:element name="OptionalOutputs" type="dss:AnyType"/>
  <xs:element name="ServicePolicy" type="xs:anyURI"/>
  <xs:element name="ClaimedIdentity">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Name" type="saml:NameIdentifierType"/>
        <xs:element name="SupportingInfo" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Language" type="xs:language"/>
  <xs:element name="AdditionalProfile" type="xs:anyURI"/>
  <xs:element name="Schemas" type="dss:SchemasType"/>
  <xs:complexType name="SchemasType">
    <xs:sequence>
      <xs:element ref="dss:Schema" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Schema" type="dss:DocumentType"/>
  <xs:complexType name="RequestBaseType">
    <xs:sequence>
      <xs:element ref="dss:OptionalInputs" minOccurs="0"/>
      <xs:element ref="dss:InputDocuments" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="RequestID" type="xs:string" use="optional"/>
    <xs:attribute name="Profile" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:complexType name="ResponseBaseType">
    <xs:sequence>
      <xs:element ref="dss:Result"/>
      <xs:element ref="dss:OptionalOutputs" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="RequestID" type="xs:string" use="optional"/>
    <xs:attribute name="Profile" type="xs:anyURI" use="required"/>
  </xs:complexType>
  <xs:element name="Response" type="dss:ResponseBaseType"/>
  <xs:element name="SignRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:RequestBaseType"/>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignResponse">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:ResponseBaseType">
          <xs:sequence>
            <xs:element ref="dss:SignatureObject" minOccurs="0"/>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignatureType" type="xs:anyURI"/>
  <xs:element name="AddTimestamp" type="dss:UpdateSignatureInstructionType"/>
  <xs:complexType name="TimeSignatureInstructionType">
    <xs:complexContent>
      <xs:extension base="dss:UpdateSignatureInstructionType">
        <xs:attribute name="TimeStampTheGivenSignature" type="xs:boolean" use="optional" default="false"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UpdateSignatureInstructionType">
    <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:element name="IntendedAudience">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Recipient" type="saml:NameIdentifierType" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="KeySelector">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="ds:KeyInfo"/>
        <xs:element name="Other" type="dss:AnyType"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="Properties">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="SignedProperties" type="dss:PropertiesType" minOccurs="0"/>
        <xs:element name="UnsignedProperties" type="dss:PropertiesType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="PropertiesType">
    <xs:sequence>
      <xs:element ref="dss:Property" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Property">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Identifier" type="xs:anyURI"/>
        <xs:element name="Value" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="IncludeObject">
    <xs:complexType>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="hasObjectTagsAndAttributesSet" type="xs:boolean" default="false"/>
      <xs:attribute name="ObjId" type="xs:string" use="optional"/>
      <xs:attribute name="createReference" type="xs:boolean" use="optional" default="true"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignaturePlacement">
    <xs:complexType>
      <xs:choice>
        <xs:element name="XPathAfter" type="xs:string"/>
        <xs:element name="XPathFirstChildOf" type="xs:string"/>
      </xs:choice>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="CreateEnvelopedSignature" type="xs:boolean" default="true"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="DocumentWithSignature">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:Document"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignedReferences">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:SignedReference" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignedReference">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ds:Transforms" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="WhichDocument" type="xs:IDREF" use="required"/>
      <xs:attribute name="RefURI" type="xs:anyURI" use="optional"/>
      <xs:attribute name="RefId" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="VerifyRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:RequestBaseType">
          <xs:sequence>
            <xs:element ref="dss:SignatureObject" minOccurs="0"/>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="VerifyResponse" type="dss:ResponseBaseType"/>
  <xs:element name="VerifyManifestResults" type="dss:VerifyManifestResultsType"/>
  <xs:complexType name="VerifyManifestResultsType">
    <xs:sequence>
      <xs:element ref="dss:ManifestResult" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ManifestResult">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ReferenceXpath" type="xs:string"/>
        <xs:element name="Status" type="xs:anyURI"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="UseVerificationTime"/>
  <xs:complexType name="UseVerificationTimeType">
    <xs:choice>
      <xs:element name="CurrentTime"/>
      <xs:element name="SpecificTime" type="xs:dateTime"/>
      <xs:any namespace="##other"/>
    </xs:choice>
  </xs:complexType>
  <xs:element name="ReturnVerificationTimeInfo"/>
  <xs:element name="AdditionalTimeInfo" type="dss:AdditionalTimeInfoType"/>
  <xs:complexType name="AdditionalTimeInfoType">
    <xs:simpleContent>
      <xs:extension base="xs:dateTime">
        <xs:attribute name="Type" type="xs:anyURI" use="required"/>
        <xs:attribute name="Ref" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="VerificationTimeInfo" type="dss:VerificationTimeInfoType"/>
  <xs:complexType name="VerificationTimeInfoType">
    <xs:sequence>
      <xs:element name="VerificationTime" type="xs:dateTime"/>
      <xs:element ref="dss:AdditionalTimeInfo" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AdditionalKeyInfo">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ds:KeyInfo"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ReturnProcessingDetails"/>
  <xs:element name="ProcessingDetails">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ValidDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="IndeterminateDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="InvalidDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="DetailType">
    <xs:sequence>
      <xs:element name="Code" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="Message" type="dss:InternationalStringType" minOccurs="0"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:anyURI" use="required"/>
  </xs:complexType>
  <xs:element name="ReturnSigningTimeInfo"/>
  <xs:element name="SigningTimeInfo" type="dss:SigningTimeInfoType"/>
  <xs:complexType name="SigningTimeInfoType">
    <xs:sequence>
      <xs:element name="SigningTime" type="xs:dateTime"/>
      <xs:element name="SigningTimeBoundaries" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="LowerBoundary" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="UpperBoundary" type="xs:dateTime" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ReturnSignerIdentity"/>
  <xs:element name="SignerIdentity" type="saml:NameIdentifierType"/>
  <xs:element name="ReturnUpdatedSignature">
    <xs:complexType>
      <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="UpdatedSignature" type="dss:UpdatedSignatureType"/>
  <xs:complexType name="UpdatedSignatureType">
    <xs:sequence>
      <xs:element ref="dss:SignatureObject"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:element name="ReturnTransformedDocument">
    <xs:complexType>
      <xs:attribute name="WhichReference" type="xs:integer" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="TransformedDocument">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:Document"/>
      </xs:sequence>
      <xs:attribute name="WhichReference" type="xs:integer" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ReturnTimestampedSignature" type="dss:UpdateSignatureInstructionType"/>
  <xs:element name="TimestampedSignature" type="dss:UpdatedSignatureType"/>
  <xs:element name="Timestamp">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="ds:Signature"/>
        <xs:element name="RFC3161TimeStampToken" type="xs:base64Binary"/>
        <xs:element name="Other" type="dss:AnyType"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="TstInfo">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="SerialNumber" type="xs:integer"/>
        <xs:element name="CreationTime" type="xs:dateTime"/>
        <xs:element name="Policy" type="xs:anyURI" minOccurs="0"/>
        <xs:element name="ErrorBound" type="xs:duration" minOccurs="0"/>
        <xs:element name="Ordered" type="xs:boolean" default="false" minOccurs="0"/>
        <xs:element name="TSA" type="saml:NameIdentifierType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="RequesterIdentity">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Name" type="saml:NameIdentifierType"/>
        <xs:element name="SupportingInfo" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="AttachmentReference" type="dss:AttachmentReferenceType"/>
  <xs:complexType name="AttachmentReferenceType">
    <xs:sequence minOccurs="0">
      <xs:element ref="ds:DigestMethod"/>
      <xs:element ref="ds:DigestValue"/>
    </xs:sequence>
    <xs:attribute name="AttRefURI" type="xs:anyURI"/>
    <xs:attribute name="MimeType" type="xs:string" use="optional"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd</con:url><con:content><![CDATA[<!DOCTYPE schema PUBLIC "-//W3C//DTD XMLSchema 200102//EN" "http://www.w3.org/2001/XMLSchema.dtd">
<!--Schema for XML Signatures
    http://www.w3.org/2000/09/xmldsig#
    $Revision: 1.1 $ on $Date: 2002/02/08 20:32:26 $ by $Author: reagle $

    Copyright 2001 The Internet Society and W3C (Massachusetts Institute
    of Technology, Institut National de Recherche en Informatique et en
    Automatique, Keio University). All Rights Reserved.
    http://www.w3.org/Consortium/Legal/

    This document is governed by the W3C Software License [1] as described
    in the FAQ [2].

    [1] http://www.w3.org/Consortium/Legal/copyright-software-19980720
    [2] http://www.w3.org/Consortium/Legal/IPR-FAQ-20000620.html#DTD-->
<schema targetNamespace="http://www.w3.org/2000/09/xmldsig#" version="0.1" elementFormDefault="qualified" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#">
  <!--Basic Types Defined for Signatures-->
  <simpleType name="CryptoBinary">
    <restriction base="base64Binary"></restriction>
  </simpleType>
  <!--Start Signature-->
  <element name="Signature" type="ds:SignatureType"/>
  <complexType name="SignatureType">
    <sequence>
      <element ref="ds:SignedInfo"/>
      <element ref="ds:SignatureValue"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
      <element ref="ds:Object" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureValue" type="ds:SignatureValueType"/>
  <complexType name="SignatureValueType">
    <simpleContent>
      <extension base="base64Binary">
        <attribute name="Id" type="ID" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <!--Start SignedInfo-->
  <element name="SignedInfo" type="ds:SignedInfoType"/>
  <complexType name="SignedInfoType">
    <sequence>
      <element ref="ds:CanonicalizationMethod"/>
      <element ref="ds:SignatureMethod"/>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="CanonicalizationMethod" type="ds:CanonicalizationMethodType"/>
  <complexType name="CanonicalizationMethodType" mixed="true">
    <sequence>
      <any namespace="##any" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="SignatureMethod" type="ds:SignatureMethodType"/>
  <complexType name="SignatureMethodType" mixed="true">
    <sequence>
      <element name="HMACOutputLength" minOccurs="0" type="ds:HMACOutputLengthType"/>
      <any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
      <!--(0,unbounded) elements from (1,1) external namespace-->
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--Start Reference-->
  <element name="Reference" type="ds:ReferenceType"/>
  <complexType name="ReferenceType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
      <element ref="ds:DigestMethod"/>
      <element ref="ds:DigestValue"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="URI" type="anyURI" use="optional"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <element name="Transforms" type="ds:TransformsType"/>
  <complexType name="TransformsType">
    <sequence>
      <element ref="ds:Transform" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Transform" type="ds:TransformType"/>
  <complexType name="TransformType" mixed="true">
    <choice minOccurs="0" maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
      <element name="XPath" type="string"/>
    </choice>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <!--End Reference-->
  <element name="DigestMethod" type="ds:DigestMethodType"/>
  <complexType name="DigestMethodType" mixed="true">
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Algorithm" type="anyURI" use="required"/>
  </complexType>
  <element name="DigestValue" type="ds:DigestValueType"/>
  <simpleType name="DigestValueType">
    <restriction base="base64Binary"/>
  </simpleType>
  <!--End SignedInfo-->
  <!--Start KeyInfo-->
  <element name="KeyInfo" type="ds:KeyInfoType"/>
  <complexType name="KeyInfoType" mixed="true">
    <choice maxOccurs="unbounded">
      <element ref="ds:KeyName"/>
      <element ref="ds:KeyValue"/>
      <element ref="ds:RetrievalMethod"/>
      <element ref="ds:X509Data"/>
      <element ref="ds:PGPData"/>
      <element ref="ds:SPKIData"/>
      <element ref="ds:MgmtData"/>
      <any processContents="lax" namespace="##other"/>
      <!--(1,1) elements from (0,unbounded) namespaces-->
    </choice>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="KeyName" type="string"/>
  <element name="MgmtData" type="string"/>
  <element name="KeyValue" type="ds:KeyValueType"/>
  <complexType name="KeyValueType" mixed="true">
    <choice>
      <element ref="ds:DSAKeyValue"/>
      <element ref="ds:RSAKeyValue"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="RetrievalMethod" type="ds:RetrievalMethodType"/>
  <complexType name="RetrievalMethodType">
    <sequence>
      <element ref="ds:Transforms" minOccurs="0"/>
    </sequence>
    <attribute name="URI" type="anyURI"/>
    <attribute name="Type" type="anyURI" use="optional"/>
  </complexType>
  <!--Start X509Data-->
  <element name="X509Data" type="ds:X509DataType"/>
  <complexType name="X509DataType">
    <sequence maxOccurs="unbounded">
      <choice>
        <element name="X509IssuerSerial" type="ds:X509IssuerSerialType"/>
        <element name="X509SKI" type="base64Binary"/>
        <element name="X509SubjectName" type="string"/>
        <element name="X509Certificate" type="base64Binary"/>
        <element name="X509CRL" type="base64Binary"/>
        <any namespace="##other" processContents="lax"/>
      </choice>
    </sequence>
  </complexType>
  <complexType name="X509IssuerSerialType">
    <sequence>
      <element name="X509IssuerName" type="string"/>
      <element name="X509SerialNumber" type="integer"/>
    </sequence>
  </complexType>
  <!--End X509Data-->
  <!--Begin PGPData-->
  <element name="PGPData" type="ds:PGPDataType"/>
  <complexType name="PGPDataType">
    <choice>
      <sequence>
        <element name="PGPKeyID" type="base64Binary"/>
        <element name="PGPKeyPacket" type="base64Binary" minOccurs="0"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
      <sequence>
        <element name="PGPKeyPacket" type="base64Binary"/>
        <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
    </choice>
  </complexType>
  <!--End PGPData-->
  <!--Begin SPKIData-->
  <element name="SPKIData" type="ds:SPKIDataType"/>
  <complexType name="SPKIDataType">
    <sequence maxOccurs="unbounded">
      <element name="SPKISexp" type="base64Binary"/>
      <any namespace="##other" processContents="lax" minOccurs="0"/>
    </sequence>
  </complexType>
  <!--End SPKIData-->
  <!--End KeyInfo-->
  <!--Start Object (Manifest, SignatureProperty)-->
  <element name="Object" type="ds:ObjectType"/>
  <complexType name="ObjectType" mixed="true">
    <sequence minOccurs="0" maxOccurs="unbounded">
      <any namespace="##any" processContents="lax"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
    <attribute name="MimeType" type="string" use="optional"/>
    <!--add a grep facet-->
    <attribute name="Encoding" type="anyURI" use="optional"/>
  </complexType>
  <element name="Manifest" type="ds:ManifestType"/>
  <complexType name="ManifestType">
    <sequence>
      <element ref="ds:Reference" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperties" type="ds:SignaturePropertiesType"/>
  <complexType name="SignaturePropertiesType">
    <sequence>
      <element ref="ds:SignatureProperty" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <element name="SignatureProperty" type="ds:SignaturePropertyType"/>
  <complexType name="SignaturePropertyType" mixed="true">
    <choice maxOccurs="unbounded">
      <any namespace="##other" processContents="lax"/>
      <!--(1,1) elements from (1,unbounded) namespaces-->
    </choice>
    <attribute name="Target" type="anyURI" use="required"/>
    <attribute name="Id" type="ID" use="optional"/>
  </complexType>
  <!--End Object (Manifest, SignatureProperty)-->
  <!--Start Algorithm Parameters-->
  <simpleType name="HMACOutputLengthType">
    <restriction base="integer"/>
  </simpleType>
  <!--Start KeyValue Element-types-->
  <element name="DSAKeyValue" type="ds:DSAKeyValueType"/>
  <complexType name="DSAKeyValueType">
    <sequence>
      <sequence minOccurs="0">
        <element name="P" type="ds:CryptoBinary"/>
        <element name="Q" type="ds:CryptoBinary"/>
      </sequence>
      <element name="G" type="ds:CryptoBinary" minOccurs="0"/>
      <element name="Y" type="ds:CryptoBinary"/>
      <element name="J" type="ds:CryptoBinary" minOccurs="0"/>
      <sequence minOccurs="0">
        <element name="Seed" type="ds:CryptoBinary"/>
        <element name="PgenCounter" type="ds:CryptoBinary"/>
      </sequence>
    </sequence>
  </complexType>
  <element name="RSAKeyValue" type="ds:RSAKeyValueType"/>
  <complexType name="RSAKeyValueType">
    <sequence>
      <element name="Modulus" type="ds:CryptoBinary"/>
      <element name="Exponent" type="ds:CryptoBinary"/>
    </sequence>
  </complexType>
  <!--End KeyValue Element-types-->
  <!--End Signature-->
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://www.oasis-open.org/committees/download.php/3408/oasis-sstc-saml-schema-protocol-1.1.xsd</con:url><con:content><![CDATA[<schema targetNamespace="urn:oasis:names:tc:SAML:1.0:assertion" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="1.1" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:saml="urn:oasis:names:tc:SAML:1.0:assertion" xmlns="http://www.w3.org/2001/XMLSchema">
  <import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd"/>
  <annotation>
    <documentation>Document identifier: oasis-sstc-saml-schema-assertion-1.1
                Location: http://www.oasis-open.org/committees/documents.php?wg_abbrev=security
                Revision history:
                V1.0 (November, 2002):
                  Initial standard schema.
                V1.1 (September, 2003):
                  * Note that V1.1 of this schema has the same XML namespace as V1.0.
                  Rebased ID content directly on XML Schema types
                  Added DoNotCacheCondition element and DoNotCacheConditionType</documentation>
  </annotation>
  <simpleType name="DecisionType">
    <restriction base="string">
      <enumeration value="Permit"/>
      <enumeration value="Deny"/>
      <enumeration value="Indeterminate"/>
    </restriction>
  </simpleType>
  <element name="AssertionIDReference" type="NCName"/>
  <element name="Assertion" type="saml:AssertionType"/>
  <complexType name="AssertionType">
    <sequence>
      <element ref="saml:Conditions" minOccurs="0"/>
      <element ref="saml:Advice" minOccurs="0"/>
      <choice maxOccurs="unbounded">
        <element ref="saml:Statement"/>
        <element ref="saml:SubjectStatement"/>
        <element ref="saml:AuthenticationStatement"/>
        <element ref="saml:AuthorizationDecisionStatement"/>
        <element ref="saml:AttributeStatement"/>
      </choice>
      <element ref="ds:Signature" minOccurs="0"/>
    </sequence>
    <attribute name="MajorVersion" type="integer" use="required"/>
    <attribute name="MinorVersion" type="integer" use="required"/>
    <attribute name="AssertionID" type="ID" use="required"/>
    <attribute name="Issuer" type="string" use="required"/>
    <attribute name="IssueInstant" type="dateTime" use="required"/>
  </complexType>
  <element name="Conditions" type="saml:ConditionsType"/>
  <complexType name="ConditionsType">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element ref="saml:AudienceRestrictionCondition"/>
      <element ref="saml:DoNotCacheCondition"/>
      <element ref="saml:Condition"/>
    </choice>
    <attribute name="NotBefore" type="dateTime" use="optional"/>
    <attribute name="NotOnOrAfter" type="dateTime" use="optional"/>
  </complexType>
  <element name="Condition" type="saml:ConditionAbstractType"/>
  <complexType name="ConditionAbstractType" abstract="true"/>
  <element name="AudienceRestrictionCondition" type="saml:AudienceRestrictionConditionType"/>
  <complexType name="AudienceRestrictionConditionType">
    <complexContent>
      <extension base="saml:ConditionAbstractType">
        <sequence>
          <element ref="saml:Audience" maxOccurs="unbounded"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="Audience" type="anyURI"/>
  <element name="DoNotCacheCondition" type="saml:DoNotCacheConditionType"/>
  <complexType name="DoNotCacheConditionType">
    <complexContent>
      <extension base="saml:ConditionAbstractType"/>
    </complexContent>
  </complexType>
  <element name="Advice" type="saml:AdviceType"/>
  <complexType name="AdviceType">
    <choice minOccurs="0" maxOccurs="unbounded">
      <element ref="saml:AssertionIDReference"/>
      <element ref="saml:Assertion"/>
      <any namespace="##other" processContents="lax"/>
    </choice>
  </complexType>
  <element name="Statement" type="saml:StatementAbstractType"/>
  <complexType name="StatementAbstractType" abstract="true"/>
  <element name="SubjectStatement" type="saml:SubjectStatementAbstractType"/>
  <complexType name="SubjectStatementAbstractType" abstract="true">
    <complexContent>
      <extension base="saml:StatementAbstractType">
        <sequence>
          <element ref="saml:Subject"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="Subject" type="saml:SubjectType"/>
  <complexType name="SubjectType">
    <choice>
      <sequence>
        <element ref="saml:NameIdentifier"/>
        <element ref="saml:SubjectConfirmation" minOccurs="0"/>
      </sequence>
      <element ref="saml:SubjectConfirmation"/>
    </choice>
  </complexType>
  <element name="NameIdentifier" type="saml:NameIdentifierType"/>
  <complexType name="NameIdentifierType">
    <simpleContent>
      <extension base="string">
        <attribute name="NameQualifier" type="string" use="optional"/>
        <attribute name="Format" type="anyURI" use="optional"/>
      </extension>
    </simpleContent>
  </complexType>
  <element name="SubjectConfirmation" type="saml:SubjectConfirmationType"/>
  <complexType name="SubjectConfirmationType">
    <sequence>
      <element ref="saml:ConfirmationMethod" maxOccurs="unbounded"/>
      <element ref="saml:SubjectConfirmationData" minOccurs="0"/>
      <element ref="ds:KeyInfo" minOccurs="0"/>
    </sequence>
  </complexType>
  <element name="SubjectConfirmationData" type="anyType"/>
  <element name="ConfirmationMethod" type="anyURI"/>
  <element name="AuthenticationStatement" type="saml:AuthenticationStatementType"/>
  <complexType name="AuthenticationStatementType">
    <complexContent>
      <extension base="saml:SubjectStatementAbstractType">
        <sequence>
          <element ref="saml:SubjectLocality" minOccurs="0"/>
          <element ref="saml:AuthorityBinding" minOccurs="0" maxOccurs="unbounded"/>
        </sequence>
        <attribute name="AuthenticationMethod" type="anyURI" use="required"/>
        <attribute name="AuthenticationInstant" type="dateTime" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="SubjectLocality" type="saml:SubjectLocalityType"/>
  <complexType name="SubjectLocalityType">
    <attribute name="IPAddress" type="string" use="optional"/>
    <attribute name="DNSAddress" type="string" use="optional"/>
  </complexType>
  <element name="AuthorityBinding" type="saml:AuthorityBindingType"/>
  <complexType name="AuthorityBindingType">
    <attribute name="AuthorityKind" type="QName" use="required"/>
    <attribute name="Location" type="anyURI" use="required"/>
    <attribute name="Binding" type="anyURI" use="required"/>
  </complexType>
  <element name="AuthorizationDecisionStatement" type="saml:AuthorizationDecisionStatementType"/>
  <complexType name="AuthorizationDecisionStatementType">
    <complexContent>
      <extension base="saml:SubjectStatementAbstractType">
        <sequence>
          <element ref="saml:Action" maxOccurs="unbounded"/>
          <element ref="saml:Evidence" minOccurs="0"/>
        </sequence>
        <attribute name="Resource" type="anyURI" use="required"/>
        <attribute name="Decision" type="saml:DecisionType" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <element name="Action" type="saml:ActionType"/>
  <complexType name="ActionType">
    <simpleContent>
      <extension base="string">
        <attribute name="Namespace" type="anyURI"/>
      </extension>
    </simpleContent>
  </complexType>
  <element name="Evidence" type="saml:EvidenceType"/>
  <complexType name="EvidenceType">
    <choice maxOccurs="unbounded">
      <element ref="saml:AssertionIDReference"/>
      <element ref="saml:Assertion"/>
    </choice>
  </complexType>
  <element name="AttributeStatement" type="saml:AttributeStatementType"/>
  <complexType name="AttributeStatementType">
    <complexContent>
      <extension base="saml:SubjectStatementAbstractType">
        <sequence>
          <element ref="saml:Attribute" maxOccurs="unbounded"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AttributeDesignator" type="saml:AttributeDesignatorType"/>
  <complexType name="AttributeDesignatorType">
    <attribute name="AttributeName" type="string" use="required"/>
    <attribute name="AttributeNamespace" type="anyURI" use="required"/>
  </complexType>
  <element name="Attribute" type="saml:AttributeType"/>
  <complexType name="AttributeType">
    <complexContent>
      <extension base="saml:AttributeDesignatorType">
        <sequence>
          <element ref="saml:AttributeValue" maxOccurs="unbounded"/>
        </sequence>
      </extension>
    </complexContent>
  </complexType>
  <element name="AttributeValue" type="anyType"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://www.w3.org/2001/xml.xsd</con:url><con:content><![CDATA[<?xml-stylesheet href="../2008/09/xsd.xsl" type="text/xsl"?>
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
  <xs:annotation>
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation>
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>..\services\schema\oasis\oasis-dss-profiles-asynchronous-processing-schema-v1.0-os.xsd</con:url><con:content><![CDATA[<!---->
<!--Schema defining the additional elements used for asynchronous processing.-->
<!--This schema extends the OASIS DSS core schema.-->
<!---->
<!--version : cd-r2, 12. Aug. 2006-->
<!--author  : andreas kuehne, kuehne@klup.de-->
<!---->
<xs:schema targetNamespace="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:async="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:dss="urn:oasis:names:tc:dss:1.0:core:schema">
  <xs:import namespace="urn:oasis:names:tc:dss:1.0:core:schema" schemaLocation="http://docs.oasis-open.org/dss/v1.0/oasis-dss-core-schema-v1.0-os.xsd"/>
  <!--Additional requests required for asynch protocol-->
  <xs:element name="PendingRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:RequestBaseType"/>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:simpleType name="ResponseID">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://docs.oasis-open.org/dss/v1.0/oasis-dss-core-schema-v1.0-os.xsd</con:url><con:content><![CDATA[<xs:schema targetNamespace="urn:oasis:names:tc:dss:1.0:core:schema" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:dss="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ds="http://www.w3.org/2000/09/xmldsig#" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:saml="urn:oasis:names:tc:SAML:1.0:assertion">
  <xs:annotation>
    <xs:documentation xml:lang="en">This Schema defines the Digital Signature Service Core Protocols, Elements, and Bindings Committee Specification version 1.0 release 1</xs:documentation>
  </xs:annotation>
  <xs:import namespace="http://www.w3.org/2000/09/xmldsig#" schemaLocation="http://www.w3.org/TR/xmldsig-core/xmldsig-core-schema.xsd"/>
  <xs:import namespace="urn:oasis:names:tc:SAML:1.0:assertion" schemaLocation="http://www.oasis-open.org/committees/download.php/3408/oasis-sstc-saml-schema-protocol-1.1.xsd"/>
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="http://www.w3.org/2001/xml.xsd"/>
  <xs:complexType name="AnyType">
    <xs:sequence>
      <xs:any processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="InternationalStringType">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute ref="xml:lang" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="InputDocuments">
    <xs:complexType>
      <xs:sequence>
        <xs:choice maxOccurs="unbounded">
          <xs:element ref="dss:Document"/>
          <xs:element ref="dss:TransformedData"/>
          <xs:element ref="dss:DocumentHash"/>
          <xs:element name="Other" type="dss:AnyType"/>
        </xs:choice>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="DocumentBaseType" abstract="true">
    <xs:attribute name="ID" type="xs:ID" use="optional"/>
    <xs:attribute name="RefURI" type="xs:anyURI" use="optional"/>
    <xs:attribute name="RefType" type="xs:anyURI" use="optional"/>
    <xs:attribute name="SchemaRefs" type="xs:IDREFS" use="optional"/>
  </xs:complexType>
  <xs:element name="Document" type="dss:DocumentType"/>
  <xs:complexType name="DocumentType">
    <xs:complexContent>
      <xs:extension base="dss:DocumentBaseType">
        <xs:choice>
          <xs:element name="InlineXML" type="dss:InlineXMLType"/>
          <xs:element name="Base64XML" type="xs:base64Binary"/>
          <xs:element name="EscapedXML" type="xs:string"/>
          <xs:element ref="dss:Base64Data"/>
          <xs:element ref="dss:AttachmentReference"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="Base64Data">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:base64Binary">
          <xs:attribute name="MimeType" type="xs:string" use="optional"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="InlineXMLType">
    <xs:sequence>
      <xs:any processContents="lax"/>
    </xs:sequence>
    <xs:attribute name="ignorePIs" type="xs:boolean" use="optional" default="true"/>
    <xs:attribute name="ignoreComments" type="xs:boolean" use="optional" default="true"/>
  </xs:complexType>
  <xs:element name="TransformedData">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:DocumentBaseType">
          <xs:sequence>
            <xs:element ref="ds:Transforms" minOccurs="0"/>
            <xs:element ref="dss:Base64Data"/>
          </xs:sequence>
          <xs:attribute name="WhichReference" type="xs:integer" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="DocumentHash">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:DocumentBaseType">
          <xs:sequence>
            <xs:element ref="ds:Transforms" minOccurs="0"/>
            <xs:element ref="ds:DigestMethod" minOccurs="0"/>
            <xs:element ref="ds:DigestValue"/>
          </xs:sequence>
          <xs:attribute name="WhichReference" type="xs:integer" use="optional"/>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignatureObject">
    <xs:complexType>
      <xs:sequence>
        <xs:choice>
          <xs:element ref="ds:Signature"/>
          <xs:element ref="dss:Timestamp"/>
          <xs:element ref="dss:Base64Signature"/>
          <xs:element ref="dss:SignaturePtr"/>
          <xs:element name="Other" type="dss:AnyType"/>
        </xs:choice>
      </xs:sequence>
      <xs:attribute name="SchemaRefs" type="xs:IDREFS" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Base64Signature">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:base64Binary">
          <xs:attribute name="Type" type="xs:anyURI"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignaturePtr">
    <xs:complexType>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="XPath" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="Result">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ResultMajor" type="xs:anyURI"/>
        <xs:element name="ResultMinor" type="xs:anyURI" minOccurs="0"/>
        <xs:element name="ResultMessage" type="dss:InternationalStringType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="OptionalInputs" type="dss:AnyType"/>
  <xs:element name="OptionalOutputs" type="dss:AnyType"/>
  <xs:element name="ServicePolicy" type="xs:anyURI"/>
  <xs:element name="ClaimedIdentity">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Name" type="saml:NameIdentifierType"/>
        <xs:element name="SupportingInfo" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="Language" type="xs:language"/>
  <xs:element name="AdditionalProfile" type="xs:anyURI"/>
  <xs:element name="Schemas" type="dss:SchemasType"/>
  <xs:complexType name="SchemasType">
    <xs:sequence>
      <xs:element ref="dss:Schema" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Schema" type="dss:DocumentType"/>
  <xs:complexType name="RequestBaseType">
    <xs:sequence>
      <xs:element ref="dss:OptionalInputs" minOccurs="0"/>
      <xs:element ref="dss:InputDocuments" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="RequestID" type="xs:string" use="optional"/>
    <xs:attribute name="Profile" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:complexType name="ResponseBaseType">
    <xs:sequence>
      <xs:element ref="dss:Result"/>
      <xs:element ref="dss:OptionalOutputs" minOccurs="0"/>
    </xs:sequence>
    <xs:attribute name="RequestID" type="xs:string" use="optional"/>
    <xs:attribute name="Profile" type="xs:anyURI" use="required"/>
  </xs:complexType>
  <xs:element name="Response" type="dss:ResponseBaseType"/>
  <xs:element name="SignRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:RequestBaseType"/>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignResponse">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:ResponseBaseType">
          <xs:sequence>
            <xs:element ref="dss:SignatureObject" minOccurs="0"/>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignatureType" type="xs:anyURI"/>
  <xs:element name="AddTimestamp" type="dss:UpdateSignatureInstructionType"/>
  <xs:complexType name="TimeSignatureInstructionType">
    <xs:complexContent>
      <xs:extension base="dss:UpdateSignatureInstructionType">
        <xs:attribute name="TimeStampTheGivenSignature" type="xs:boolean" use="optional" default="false"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="UpdateSignatureInstructionType">
    <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:element name="IntendedAudience">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Recipient" type="saml:NameIdentifierType" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="KeySelector">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="ds:KeyInfo"/>
        <xs:element name="Other" type="dss:AnyType"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="Properties">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="SignedProperties" type="dss:PropertiesType" minOccurs="0"/>
        <xs:element name="UnsignedProperties" type="dss:PropertiesType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="PropertiesType">
    <xs:sequence>
      <xs:element ref="dss:Property" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Property">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Identifier" type="xs:anyURI"/>
        <xs:element name="Value" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="IncludeObject">
    <xs:complexType>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="hasObjectTagsAndAttributesSet" type="xs:boolean" default="false"/>
      <xs:attribute name="ObjId" type="xs:string" use="optional"/>
      <xs:attribute name="createReference" type="xs:boolean" use="optional" default="true"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignaturePlacement">
    <xs:complexType>
      <xs:choice>
        <xs:element name="XPathAfter" type="xs:string"/>
        <xs:element name="XPathFirstChildOf" type="xs:string"/>
      </xs:choice>
      <xs:attribute name="WhichDocument" type="xs:IDREF"/>
      <xs:attribute name="CreateEnvelopedSignature" type="xs:boolean" default="true"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="DocumentWithSignature">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:Document"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignedReferences">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:SignedReference" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="SignedReference">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ds:Transforms" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="WhichDocument" type="xs:IDREF" use="required"/>
      <xs:attribute name="RefURI" type="xs:anyURI" use="optional"/>
      <xs:attribute name="RefId" type="xs:string" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="VerifyRequest">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="dss:RequestBaseType">
          <xs:sequence>
            <xs:element ref="dss:SignatureObject" minOccurs="0"/>
          </xs:sequence>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="VerifyResponse" type="dss:ResponseBaseType"/>
  <xs:element name="VerifyManifestResults" type="dss:VerifyManifestResultsType"/>
  <xs:complexType name="VerifyManifestResultsType">
    <xs:sequence>
      <xs:element ref="dss:ManifestResult" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ManifestResult">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ReferenceXpath" type="xs:string"/>
        <xs:element name="Status" type="xs:anyURI"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="UseVerificationTime"/>
  <xs:complexType name="UseVerificationTimeType">
    <xs:choice>
      <xs:element name="CurrentTime"/>
      <xs:element name="SpecificTime" type="xs:dateTime"/>
      <xs:any namespace="##other"/>
    </xs:choice>
  </xs:complexType>
  <xs:element name="ReturnVerificationTimeInfo"/>
  <xs:element name="AdditionalTimeInfo" type="dss:AdditionalTimeInfoType"/>
  <xs:complexType name="AdditionalTimeInfoType">
    <xs:simpleContent>
      <xs:extension base="xs:dateTime">
        <xs:attribute name="Type" type="xs:anyURI" use="required"/>
        <xs:attribute name="Ref" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:element name="VerificationTimeInfo" type="dss:VerificationTimeInfoType"/>
  <xs:complexType name="VerificationTimeInfoType">
    <xs:sequence>
      <xs:element name="VerificationTime" type="xs:dateTime"/>
      <xs:element ref="dss:AdditionalTimeInfo" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="AdditionalKeyInfo">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="ds:KeyInfo"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="ReturnProcessingDetails"/>
  <xs:element name="ProcessingDetails">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="ValidDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="IndeterminateDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="InvalidDetail" type="dss:DetailType" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:complexType name="DetailType">
    <xs:sequence>
      <xs:element name="Code" type="xs:anyURI" minOccurs="0"/>
      <xs:element name="Message" type="dss:InternationalStringType" minOccurs="0"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:anyURI" use="required"/>
  </xs:complexType>
  <xs:element name="ReturnSigningTimeInfo"/>
  <xs:element name="SigningTimeInfo" type="dss:SigningTimeInfoType"/>
  <xs:complexType name="SigningTimeInfoType">
    <xs:sequence>
      <xs:element name="SigningTime" type="xs:dateTime"/>
      <xs:element name="SigningTimeBoundaries" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="LowerBoundary" type="xs:dateTime" minOccurs="0"/>
            <xs:element name="UpperBoundary" type="xs:dateTime" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ReturnSignerIdentity"/>
  <xs:element name="SignerIdentity" type="saml:NameIdentifierType"/>
  <xs:element name="ReturnUpdatedSignature">
    <xs:complexType>
      <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="UpdatedSignature" type="dss:UpdatedSignatureType"/>
  <xs:complexType name="UpdatedSignatureType">
    <xs:sequence>
      <xs:element ref="dss:SignatureObject"/>
    </xs:sequence>
    <xs:attribute name="Type" type="xs:anyURI" use="optional"/>
  </xs:complexType>
  <xs:element name="ReturnTransformedDocument">
    <xs:complexType>
      <xs:attribute name="WhichReference" type="xs:integer" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="TransformedDocument">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="dss:Document"/>
      </xs:sequence>
      <xs:attribute name="WhichReference" type="xs:integer" use="required"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="ReturnTimestampedSignature" type="dss:UpdateSignatureInstructionType"/>
  <xs:element name="TimestampedSignature" type="dss:UpdatedSignatureType"/>
  <xs:element name="Timestamp">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="ds:Signature"/>
        <xs:element name="RFC3161TimeStampToken" type="xs:base64Binary"/>
        <xs:element name="Other" type="dss:AnyType"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  <xs:element name="TstInfo">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="SerialNumber" type="xs:integer"/>
        <xs:element name="CreationTime" type="xs:dateTime"/>
        <xs:element name="Policy" type="xs:anyURI" minOccurs="0"/>
        <xs:element name="ErrorBound" type="xs:duration" minOccurs="0"/>
        <xs:element name="Ordered" type="xs:boolean" default="false" minOccurs="0"/>
        <xs:element name="TSA" type="saml:NameIdentifierType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="RequesterIdentity">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="Name" type="saml:NameIdentifierType"/>
        <xs:element name="SupportingInfo" type="dss:AnyType" minOccurs="0"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="AttachmentReference" type="dss:AttachmentReferenceType"/>
  <xs:complexType name="AttachmentReferenceType">
    <xs:sequence minOccurs="0">
      <xs:element ref="ds:DigestMethod"/>
      <xs:element ref="ds:DigestValue"/>
    </xs:sequence>
    <xs:attribute name="AttRefURI" type="xs:anyURI"/>
    <xs:attribute name="MimeType" type="xs:string" use="optional"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint></con:endpoints><con:resource name="/v1.0" path="/v1.0"><con:settings/><con:parameters/><con:resource name="/pending" path="/pending"><con:settings/><con:parameters><con:parameter><con:name>Accept</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="POST" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:urn="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">urn:PendingRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:urn="urn:oasis:names:tc:dss:1.0:core:schema">urn:Response</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="XML Pending" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<ns3:PendingRequest Profile="urn:com:swisscom:dss:v1.0" xmlns:ns2="http://www.w3.org/2000/09/xmldsig#" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ns4="urn:com:swisscom:dss:1.0:schema" xmlns:ns3="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">
    <OptionalInputs>
        <ClaimedIdentity>
            <Name>cartel.ch</Name>
        </ClaimedIdentity>
        <ns3:ResponseID>cc23b1c6-a266-4a43-8269-a813f0c18bce</ns3:ResponseID>
    </OptionalInputs>
</ns3:PendingRequest>

]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>Accept</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="/sign" path="/sign"><con:settings/><con:parameters><con:parameter><con:name>Accept</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="POST" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:urn="urn:oasis:names:tc:dss:1.0:core:schema">urn:SignRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:urn="urn:oasis:names:tc:dss:1.0:core:schema">urn:Response</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="XML Timestamp [synch]" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<SignRequest xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" RequestID="${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSS')}" Profile="urn:com:swisscom:dss:v1.0">
<OptionalInputs>
    <ClaimedIdentity>
        <Name>cartel.ch</Name>
    </ClaimedIdentity>
    <SignatureType>urn:ietf:rfc:3161</SignatureType>
    <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
</OptionalInputs>
<InputDocuments>
    <DocumentHash>
        <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
        <dsig:DigestValue>GcXfOzOP8GsBu7odeT1w3GnMedppEWvngCQ7Ef1IBMA=</dsig:DigestValue>
    </DocumentHash>
</InputDocuments>
</SignRequest>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:request><con:request name="XML Timestamp [asynch]" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request><![CDATA[<SignRequest xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" RequestID="${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSS')}" Profile="urn:com:swisscom:dss:v1.0">
<OptionalInputs>
    <ClaimedIdentity>
        <Name>cartel.ch</Name>
    </ClaimedIdentity>
    <SignatureType>urn:ietf:rfc:3161</SignatureType>
    <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
    <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
</OptionalInputs>
<InputDocuments>
    <DocumentHash>
        <dsig:DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
        <dsig:DigestValue>GcXfOzOP8GsBu7odeT1w3GnMedppEWvngCQ7Ef1IBMA=</dsig:DigestValue>
    </DocumentHash>
</InputDocuments>
</SignRequest>]]></con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="application/xml" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:request></con:method></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="AIS Signing Service" type="rest" basePath="/DSS-Server/rs" definitionUrl="..\services\wadl\service.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT"/><con:endpoints><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint></con:endpoints><con:resource name="/v1.0" path="/v1.0"><con:settings/><con:parameters/><con:resource name="/pending" path="/pending"><con:settings/><con:parameters><con:parameter><con:name>Accept</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="POST" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:urn="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0">urn:PendingRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:urn="urn:oasis:names:tc:dss:1.0:core:schema">urn:Response</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="JSON Pending" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "async.PendingRequest": {
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "dss.OptionalInputs": {
      "dss.ClaimedIdentity": {
        "dss.Name": "cartel.ch"
      },
      "async.ResponseID": "969be0c4-a071-4e51-bde3-50cd4f443aa4"
    }
  }
}</con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>Accept</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:resource name="/sign" path="/sign"><con:settings/><con:parameters><con:parameter><con:name>Accept</con:name><con:value/><con:style>HEADER</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="POST" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:urn="urn:oasis:names:tc:dss:1.0:core:schema">urn:SignRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:urn="urn:oasis:names:tc:dss:1.0:core:schema">urn:Response</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="JSON Timestamp [synch]" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "dss.SignRequest": {
    "@RequestID": "${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSS')}",
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "dss.OptionalInputs": {
      "dss.ClaimedIdentity": {
        "dss.Name": "cartel.ch"
      },
      "dss.SignatureType": "urn:ietf:rfc:3161",
      "dss.AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:timestamping"
    },
    "dss.InputDocuments": {
      "dss.DocumentHash": {
        "xmldsig.DigestMethod": {
          "@Algorithm": "http://www.w3.org/2001/04/xmlenc#sha256"
        },
        "xmldsig.DigestValue": "GcXfOzOP8GsBu7odeT1w3GnMedppEWvngCQ7Ef1IBMA="
      }
    }
  }
}</con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>Accept</con:entry></con:parameterOrder></con:request><con:request name="JSON Timestamp [asynch]" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "dss.SignRequest": {
    "@RequestID": "${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSS')}",
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "dss.OptionalInputs": {
      "dss.ClaimedIdentity": {
        "dss.Name": "cartel.ch"
      },
      "dss.SignatureType": "urn:ietf:rfc:3161",
      "dss.AdditionalProfile": [
            "urn:oasis:names:tc:dss:1.0:profiles:timestamping",
            "urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing"
        ]
    },
    "dss.InputDocuments": {
      "dss.DocumentHash": {
        "xmldsig.DigestMethod": {
          "@Algorithm": "http://www.w3.org/2001/04/xmlenc#sha256"
        },
        "xmldsig.DigestValue": "GcXfOzOP8GsBu7odeT1w3GnMedppEWvngCQ7Ef1IBMA="
      }
    }
  }
}</con:request><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder><con:entry/></con:parameterOrder></con:request></con:method></con:resource></con:resource></con:interface><con:testSuite name="REGRESSION"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Timestamps" searchProperties="true" id="acc25e33-9db9-4a26-9236-6f18a75ba286" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="Timestamp 256 [synch]" id="9ceff850-35cc-48fc-8942-e5728602154b"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>DigitalSignatureServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Timestamp 256 [synch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSS')}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity Format="urn:com:swisscom:dss:v1.0:entity">
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace ns5='urn:com:swisscom:dss:1.0:schema';
declare namespace ns4='http://service.ais.swisscom.com/';
declare namespace ns3='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace ns2='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ns4:signResponse/ns1:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ns2="http://www.w3.org/2000/09/xmldsig#" xmlns:ns3="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ns4="http://service.ais.swisscom.com/" xmlns:ns5="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Timestamp>
      <RFC3161TimeStampToken>*</RFC3161TimeStampToken>
    </Timestamp>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Timestamp BATCH [synch]" id="112d4473-5726-4bca-9241-9c9e3c23edda"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>DigitalSignatureServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Timestamp BATCH [synch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSS')}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity Format="urn:com:swisscom:dss:v1.0:entity">
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
<!--
               <DocumentHash ID="224">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA224}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_224}</dsig:DigestValue>
               </DocumentHash>
-->
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace ns5='urn:com:swisscom:dss:1.0:schema';
declare namespace ns4='http://service.ais.swisscom.com/';
declare namespace ns3='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace ns2='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ns4:signResponse/ns1:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="2013-12-13T17:50:33.439" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ns2="http://www.w3.org/2000/09/xmldsig#" xmlns:ns3="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ns4="http://service.ais.swisscom.com/" xmlns:ns5="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:Success</ResultMajor>
  </Result>
  <SignatureObject>
    <Other>
      <ns5:SignatureObjects>
        <ns5:ExtendedSignatureObject WhichDocument="256">
          <Timestamp>
            <RFC3161TimeStampToken>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</RFC3161TimeStampToken>
          </Timestamp>
        </ns5:ExtendedSignatureObject>
        <ns5:ExtendedSignatureObject WhichDocument="384">
          <Timestamp>
            <RFC3161TimeStampToken>MIIV1gYJKoZIhvcNAQcCoIIVxzCCFcMCAQMxDzANBglghkgBZQMEAgIFADCCAQIGCyqGSIb3DQEJEAEEoIHyBIHvMIHsAgEBBgkrBgEEAeJvAwEwQTANBglghkgBZQMEAgIFAAQwbe5JJtVMoZqkJ3isZaBBpwXXQtV4Opqf3KtYcHacCh7fVZ1bS8VSnMnK3z9mIy1RAhEAgAAAJgAAAULs3eMgYUV7GBgRMjAxMzEyMTMxNjUwMzMuOVowBIACAfQCAwFRYqBopGYwZDELMAkGA1UEBhMCY2gxETAPBgNVBAoTCFN3aXNzY29tMSQwIgYDVQQLExtEaWdpdGFsIENlcnRpZmljYXRlIFNlcnZpY2UxHDAaBgNVBAMTE1N3aXNzY29tIFRFU1QgVFNBIDOgghHEMIIFyTCCBLGgAwIBAgIRAKH0ndFeYXSNn1cC4OsDBBQwDQYJKoZIhvcNAQELBQAwaDELMAkGA1UEBhMCY2gxETAPBgNVBAoTCFN3aXNzY29tMSUwIwYDVQQLExxEaWdpdGFsIENlcnRpZmljYXRlIFNlcnZpY2VzMR8wHQYDVQQDExZTd2lzc2NvbSBURVNUIFRTUyBDQSAyMB4XDTEyMDYwNTEyNDY1M1oXDTE1MDYwNTEyNDY1M1owZDELMAkGA1UEBhMCY2gxETAPBgNVBAoTCFN3aXNzY29tMSQwIgYDVQQLExtEaWdpdGFsIENlcnRpZmljYXRlIFNlcnZpY2UxHDAaBgNVBAMTE1N3aXNzY29tIFRFU1QgVFNBIDMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC1eiFDFwo5ssCS/Xmujkoc0uIHgBHEY/2piXV91VN1SftrKe/M/Tybc3HwDQWmUc3JvKFwWTrbZu6lwfq7xqmzRRJ82YrcjqFdJ6feFxUVtif8gnAyBpyf0xfCwZFji92G+INX2mjTPDzvqML/WPxz3anQ8TW6PQaohzZ84e33w/rLI1j7PQOAz9D8jLNFny30B0YEn0BlYdSrEX3OuUGS5MLYYTSM0kSYqbptb3U6ZJ/WYO+jw7urUJyDHOz0nCdjYt5cf6S3UAmGfqNn7QGNwEj9DqWw1pNWRWLIu4ZhpNi58nQhAmDv/E8Aio4vJsP2c/riy3BZsUJblPnTtWfVAgMBAAGjggJwMIICbDCBgQYIKwYBBQUHAQEEdTBzMDYGCCsGAQUFBzABhipodHRwOi8vb2NzcC5wcmUuc3dpc3NkaWdpY2VydC5jaC9zZGNzLXRzczIwOQYIKwYBBQUHMAKGLWh0dHA6Ly9haWEucHJlLnN3aXNzZGlnaWNlcnQuY2gvc2Rjcy10c3MyLmNydDAfBgNVHSMEGDAWgBRk/goDNAM+eh8mTeWWdR7ypz1AdDAMBgNVHRMBAf8EAjAAMHAGA1UdIARpMGcwZQYGYIV0AVMHMFswMAYIKwYBBQUHAgEWJGh0dHA6Ly93d3cucHJlLnN3aXNzZGlnaWNlcnQuY2gvY3BzLzAnBggrBgEFBQcCAjAbGhlTd2lzc2NvbSBURVNUIEVudmlyb25tZW50MIHGBgNVHR8Egb4wgbswM6AxoC+GLWh0dHA6Ly9jcmwucHJlLnN3aXNzZGlnaWNlcnQuY2gvc2Rjcy10c3MyLmNybDCBg6CBgKB+hnxsZGFwOi8vbGRhcC5wcmUuc3dpc3NkaWdpY2VydC5jaC9DTj1Td2lzc2NvbSUyMFRFU1QlMjBUU1MlMjBDQSUyMDIsZGM9dHNzMixkYz1zd2lzc2RpZ2ljZXJ0LGRjPWNoP2NlcnRpZmljYXRlUmV2b2NhdGlvbkxpc3Q/MBYGA1UdJQEB/wQMMAoGCCsGAQUFBwMIMDUGA1UdEgQuMCykKjAoMSYwJAYDVQQKEx1Td2lzc2NvbSBURVNUIEVudmlyb25tZW50IElBTjAOBgNVHQ8BAf8EBAMCBkAwHQYDVR0OBBYEFJYJoVO+gYGlto0qcRPhAyu4vGHUMA0GCSqGSIb3DQEBCwUAA4IBAQAqxdEVFuH7rPTFtt+XsjFGMrv96q8ZT9F9l4fbhmbeuddqTgr0Vxr5jlo9QRWwhnNSmOhq4ekneTt32WSyvnmY4D2+PZGXgGXnSC9WNuesep2wna2lTL43abJvycUwgdqoQAxdJlYHk5W5NRlJcRMK1UmAOVkW90YiUt2uXuHeGntMavFvgyUMN5jyxh0DkYLjAR1gxK6V1h6dYpWKPSNcLXrVIUUbTNC3e2NrBDYZ2MTSbmQ9hBpAxBqbylUNvu3yZxb9B2Bv+HhC1lkEeV4XTwSvt8oGgB1HaNn/WcnbFYjHQV7zu/choo/GreY3RczAtaEqZ3UoQ98VZnKLtleWMIIF4TCCA8mgAwIBAgIQHPpMcRuMZK6zTTRxetxZpzANBgkqhkiG9w0BAQsFADBpMQswCQYDVQQGEwJjaDERMA8GA1UEChMIU3dpc3Njb20xJTAjBgNVBAsTHERpZ2l0YWwgQ2VydGlmaWNhdGUgU2VydmljZXMxIDAeBgNVBAMTF1N3aXNzY29tIFRFU1QgUm9vdCBDQSAyMB4XDTExMDkyODEzMTgxMFoXDTMxMDkyODEzMTgxMFowaTELMAkGA1UEBhMCY2gxETAPBgNVBAoTCFN3aXNzY29tMSUwIwYDVQQLExxEaWdpdGFsIENlcnRpZmljYXRlIFNlcnZpY2VzMSAwHgYDVQQDExdTd2lzc2NvbSBURVNUIFJvb3QgQ0EgMjCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMni5Q9xBSkUXprlj4doB37Pane104QvOk6OBaco+ft1pJ1RORr6Tg+sZoYcyP0JUjw8h6tsNYM8I2r7RWSBGTdU8xngdwqWRWQAK9qWXNIeZ3V0TDKWQQUD1QAesJXUtzEqIR9Tjyww8LszewV86yuSr1aBzISjimN/NN5piOp0jQ2N4V6z0ezUiCR/72nUeE95hKACPfiD1RfPIEWSzTXDEV/MjBmpFNdAeBmfr4mVwFiQxogjOni3AdQEyfj9hsf1mYrBayMoEjNrxzDwhNGltBgsALWsrvi8nMSjTyGKWpNO4vbvXut1zw3mf+LVQevqQf4JKwWYxQv/Ul3ANgDu3ZCAqiMGibS8kiE8fEDK4b7O+Da2fuk6vZQ32NSX0x7lNQWCc4Lknokwp88xPj2sHr2TOHmXxJiCZmDkajYs0t1o8pYGaYMoGPYebxS08zU++PuLYl85el7+AQyRhYVCBtMTpEw8ihGEvWFKyoNVxjgOyrjKokRNbKpZhczEQUmT2jS4PsikBmPIz5uzur8l2MJYcmOJmjJkKpFZTfRl60utgbuBF4j3Ex23cKhjXq9ok0oLWircr1DjUd/LAWXDXH8R+HWnNamc0FWMRpm2cFoASWqvZRk9p/oC/aHOyfirCkaFJzeV0O/CmKAhQ4ay5OaJHtIzSRe5ztXduzSvAgMBAAGjgYQwgYEwEgYDVR0TAQH/BAgwBgEB/wIBBzAOBgNVHQ8BAf8EBAMCAYYwGwYDVR0hBBQwEjAQBgZghXQBUwcGBmCFdAFTBzAdBgNVHQ4EFgQUX6cVX7/QCuD0qNDCcWjuuVP5i8UwHwYDVR0jBBgwFoAUX6cVX7/QCuD0qNDCcWjuuVP5i8UwDQYJKoZIhvcNAQELBQADggIBAHQbWYBOY+kKHdLmOocofUiYvO8YGMYjDYqKAptk1JcgP3rFzQ2TfgFYhvIFfFFqv4yyIOURcHoZjAC3jhBqUTpzdOen4FnVXkzMdZPm4ouZ9JIxL7epR1Mz9ZpZdV6lRmd+zEQM9VUy5i4tgxZ7RxuEqQy0ghXIRZbARaSE58KIB2LW8eGY7xuCXazmAhPito1iqk6wHf0PziOxn6kJOEDBkdSBkcxSiZ5kvVs1g65P1o0GIOLN9M21MdjTXAeXZFOxh2vZlzaNknIboEUEZ1UuSZ1aK6rJRWkgd/4993shmUMP+EIkSUEr8r4Y1Ypbcsdl+DifRw/MQczVusCax5Jk0sTUu8RO0tuayxs/7Lue2SRknfO3TBevGfZqRfOlpSmCUMJ1TseJxx9Hbvk6M4sK2oxx/3u5LzJaJfppgrS7qZRUnrSSGIwHbdPcoj710trFdvgm33mbElRDjhcu3CtBi8i4Wqg0UuiKCxvbGdDJcYf5PG6yWq73LbLlFewyhzxfRJCCJ0zWK6y+9K79pbFdJ6A3Z/8W/jyzql95H8AxwW0hMNNsK/gxMJEJeh8rBR6dV1e9QGUWOlb43Eb24oUp9nIsfe6EbmHrlcpqrVPfDNqoS+OT2gsdNoxoQ/i4ow3wd0uElx+PL6+ahYR1noMlpNZLGIOyWPnDalQbVZJqMIIGDjCCA/agAwIBAgIRAOxEvStbqk2zZBt+KNMlmUAwDQYJKoZIhvcNAQELBQAwaTELMAkGA1UEBhMCY2gxETAPBgNVBAoTCFN3aXNzY29tMSUwIwYDVQQLExxEaWdpdGFsIENlcnRpZmljYXRlIFNlcnZpY2VzMSAwHgYDVQQDExdTd2lzc2NvbSBURVNUIFJvb3QgQ0EgMjAeFw0xMjAxMDQwOTM4NDRaFw0yMjAxMDQwOTM4NDRaMGgxCzAJBgNVBAYTAmNoMREwDwYDVQQKEwhTd2lzc2NvbTElMCMGA1UECxMcRGlnaXRhbCBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczEfMB0GA1UEAxMWU3dpc3Njb20gVEVTVCBUU1MgQ0EgMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJ6WP5PodeskJ3zNlgXEybl/X6wE83hsnRFnOR908bC8RJ5t+DVoP2y1GxM08pEe2zNXHTl+a2LO4ihF3oQBTc9v4aFFNdg+TyAu2L4N7rpiXNgIqoN5hYme4KfrHTXKq5pZqDohZi0bw4v6gchgwBEBmENfoRP+83Z/lOpvxgV/UzlI6bMYT/MlqncTCw2s+023n2RMTENdayQm/IFu+bG3pDIZe0kxbrvkwJkpzgqu+b94MLiHzQaE5DWAEnTXwOtftoAm5fROVpjNJ+81Vo44dRUxnJCHHK/1Oj0RM3VgsXHcSm8l3juvk6tBFG31mDAFkDTy6L3SY+H4TCt1+BECAwEAAaOCAbAwggGsMFAGA1UdEgRJMEekRTBDMUEwPwYDVQQKEzhUaGlzIENBIGNlcnRpZmljYXRlIG11c3QgYmUgdXNlZCBmb3IgdGVzdCBwdXJwb3NlcyBvbmx5LjAfBgNVHSMEGDAWgBRfpxVfv9AK4PSo0MJxaO65U/mLxTBKBggrBgEFBQcBAQQ+MDwwOgYIKwYBBQUHMAKGLmh0dHA6Ly9haWEucHJlLnN3aXNzZGlnaWNlcnQuY2gvc2Rjcy1yb290Mi5jcnQwEgYDVR0TAQH/BAgwBgEB/wIBADBnBgNVHSAEYDBeMFwGBmCFdAFTBzBSMDAGCCsGAQUFBwIBFiRodHRwOi8vd3d3LnByZS5zd2lzc2RpZ2ljZXJ0LmNoL2Nwcy8wHgYIKwYBBQUHAgIwEhoQU3dpc3Njb20gVEVTVCBDQTA/BgNVHR8EODA2MDSgMqAwhi5odHRwOi8vY3JsLnByZS5zd2lzc2RpZ2ljZXJ0LmNoL3NkY3Mtcm9vdDIuY3JsMA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUZP4KAzQDPnofJk3llnUe8qc9QHQwDQYJKoZIhvcNAQELBQADggIBAHA0j5i9vk75Lle3a4FH4dlNSjYuGQPFPlDcwlkjG4UE0FbPb6H9AnZ+RfgmzlNt/mTJLNs6AtpusL/aC9cLLZDZWqtDk6Fb0JHS/tUDasb320BMoakyxSlsuIcZ2qytloFxgPzPKYUryeKd8/x74qFsCe8Vh/6uPoP9j4XVnIO0V95MsSefRBLpzJw6YWuv5gFrnEvpL8qeIOswACeqCXgXEMe9ZUc42kyweEfCWHlP71iNSsW0DyEZj85SQmI6qk4n5EpVU68j03sKEt6haYTyr9RCkyi/N/S3Rm7ShELre7dL+hCLZyltyIxt34jH5m9X0FjL5Hr79YXVCbJ6fRUUO8QDys+PTlAKivDeeoxujU2rVR7w5E4lx2FO/S+ACMNkeewYOf/MCdhu9IMFsBG8E9gkI6iwuKGeKr5PDeJezkVK/EzIKqZtVPr+Ul1A5F3el/HA+ZkcmNSNYP10uVMrAk5j8xrVEbFSFXxSs/iPk/uwuapFl7j9HHKR3Azk4Q8R4FBaLaJAFLHngE8jmRy0RQ82G6qgZuwE46KV2bapSU3WeNt/bG4tFI+WivX+s4yPz7AXRnXSRXkACUVfYXrWTyr6QVHjolCeb2gSZFnU+LgbbbqCfrhZz3VNi27FLvpeLZR0iBk/IM00Q0IUEtQ2908QJlTYxHRXmA7JSbxxMYIC3TCCAtkCAQEwfTBoMQswCQYDVQQGEwJjaDERMA8GA1UEChMIU3dpc3Njb20xJTAjBgNVBAsTHERpZ2l0YWwgQ2VydGlmaWNhdGUgU2VydmljZXMxHzAdBgNVBAMTFlN3aXNzY29tIFRFU1QgVFNTIENBIDICEQCh9J3RXmF0jZ9XAuDrAwQUMA0GCWCGSAFlAwQCAgUAoIIBMTAaBgkqhkiG9w0BCQMxDQYLKoZIhvcNAQkQAQQwHAYJKoZIhvcNAQkFMQ8XDTEzMTIxMzE2NTAzM1owPwYJKoZIhvcNAQkEMTIEMCA3Ms5JK5gKTBh+5jj8HaCUC4dA6L7X4HKyHkfkEPzaTRFDcYVmsbI7KAnUmBjOsjCBswYLKoZIhvcNAQkQAgwxgaMwgaAwgZ0wgZoEFFV0zdZHK4+a67pk6hW6wi1r+V2jMIGBMGykajBoMQswCQYDVQQGEwJjaDERMA8GA1UEChMIU3dpc3Njb20xJTAjBgNVBAsTHERpZ2l0YWwgQ2VydGlmaWNhdGUgU2VydmljZXMxHzAdBgNVBAMTFlN3aXNzY29tIFRFU1QgVFNTIENBIDICEQCh9J3RXmF0jZ9XAuDrAwQUMA0GCSqGSIb3DQEBDAUABIIBAET6Uzta3nH5Sb7BvnC7xjpFLB6AOL0DVLqAoGfTx3iv1yLZ5brDqTsPOHIQgCOq5Q2tayOhwulzaxBX+GBAnbq473CRvtUdpO9Vb2Z7jz1xrm8c88pjGPEEjWJLxhpeuy5G6SOFzoBT4/gfzVQVbhGmb43Y6xiFyM/FxsnCw7eimQ+Rw6I9PLqr1LQJ2fzXST8LzFHSsU9kHdh+Cu7/qLJwD7GbedmqBw6RPUTUGezKO9u/0yjN52iEgxJLUlG4h6ZZWwlu/oesyz72Xhwuh2M9JutSD7AIJWpPL7NydvwRcBOtUbrr7WyRImXYGY88GrYD53Cqlq0v0hB5KUdJdDM=</RFC3161TimeStampToken>
          </Timestamp>
        </ns5:ExtendedSignatureObject>
        <ns5:ExtendedSignatureObject WhichDocument="512">
          <Timestamp>
            <RFC3161TimeStampToken>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</RFC3161TimeStampToken>
          </Timestamp>
        </ns5:ExtendedSignatureObject>
      </ns5:SignatureObjects>
    </Other>
  </SignatureObject>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" name="Timestamp BATCH [asynch]" id="b24b180f-c7b0-4b8c-b46b-696807420950"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>DigitalSignatureServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Timestamp BATCH [asynch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSS')}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity Format="urn:com:swisscom:dss:v1.0:entity">
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
               <AdditionalProfile>urn:com:swisscom:dss:v1.0:profiles:batchprocessing</AdditionalProfile>
<AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
<!--
               <DocumentHash ID="224">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA224}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_224}</dsig:DigestValue>
               </DocumentHash>
-->
               <DocumentHash ID="256">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="384">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA384}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_384}</dsig:DigestValue>
               </DocumentHash>
               <DocumentHash ID="512">
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA512}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_512}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace ns5='urn:com:swisscom:dss:1.0:schema';
declare namespace ns4='http://service.ais.swisscom.com/';
declare namespace ns3='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace ns2='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ns4:signResponse/ns1:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ns2="http://www.w3.org/2000/09/xmldsig#" xmlns:ns3="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ns4="http://service.ais.swisscom.com/" xmlns:ns5="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <ns3:ResponseID>*</ns3:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="transfer" name="Get ResponseID" id="aac260de-1cce-4fc9-bca8-e1eb13c388f4"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>ID</con:name><con:sourceType>Response</con:sourceType><con:sourceStep>Timestamp BATCH [asynch]</con:sourceStep><con:sourcePath>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace ns5='urn:com:swisscom:dss:1.0:schema';
declare namespace ns4='http://service.ais.swisscom.com/';
declare namespace ns3='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace ns2='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ns4:signResponse/ns1:SignResponse/ns1:OptionalOutputs/ns3:ResponseID</con:sourcePath><con:targetType>tmp_ResponseID</con:targetType><con:targetStep>#TestSuite#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="delay" name="PollDelay" id="cf13b9da-cc18-4f76-9311-a75077459b01"><con:settings/><con:config><delay>500</delay></con:config></con:testStep><con:testStep type="request" name="Pending Timestamp BATCH" id="c221a120-3d55-4b9d-b54d-f024154590aa"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>DigitalSignatureServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Pending Timestamp BATCH"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns:asynch="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/">
   <soap:Body>
      <ais:pending>
         <asynch:PendingRequest Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity>
                  <Name>${#TestSuite#AP_ID}</Name>
               </ClaimedIdentity>
               <asynch:ResponseID>${#TestSuite#tmp_ResponseID}</asynch:ResponseID>
            </OptionalInputs>
         </asynch:PendingRequest>
      </ais:pending>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace ns5='urn:com:swisscom:dss:1.0:schema';
declare namespace ns4='http://service.ais.swisscom.com/';
declare namespace ns3='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace ns2='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ns4:signResponse/ns1:SignResponse</path><content><![CDATA[<SignResponse xsi:type="SignResponse" RequestID="*" Profile="urn:com:swisscom:dss:v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ns2="http://www.w3.org/2000/09/xmldsig#" xmlns:ns3="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ns4="http://service.ais.swisscom.com/" xmlns:ns5="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <Result>
    <ResultMajor>urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:resultmajor:Pending</ResultMajor>
  </Result>
  <OptionalOutputs>
    <ns3:ResponseID>*</ns3:ResponseID>
  </OptionalOutputs>
</SignResponse>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="goto" name="Check if Pending" id="6c91fd62-0c9d-4226-885c-f86ae70d9cb6"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>Repeat</con:name><con:type>XPATH</con:type><con:expression>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace ns5='urn:com:swisscom:dss:1.0:schema';
declare namespace ns4='http://service.ais.swisscom.com/';
declare namespace ns3='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace ns2='http://www.w3.org/2000/09/xmldsig#';

matches(//ns1:ResultMajor/text(),'pending')</con:expression><con:targetStep>PollDelay</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="request" name="Timestamp UnknownCustomer [synch]" id="cb6fa0dd-e377-4038-af3d-54457c748cb4"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>DigitalSignatureServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Timestamp UnknownCustomer [synch]"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ais="http://service.ais.swisscom.com/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#">
   <soap:Body>
      <ais:sign>
         <SignRequest RequestID="${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSS')}" Profile="urn:com:swisscom:dss:v1.0">
            <OptionalInputs>
               <ClaimedIdentity Format="urn:com:swisscom:dss:v1.0:entity">
                  <Name>abc</Name>
               </ClaimedIdentity>
               <SignatureType>urn:ietf:rfc:3161</SignatureType>
               <AdditionalProfile>urn:oasis:names:tc:dss:1.0:profiles:timestamping</AdditionalProfile>
            </OptionalInputs>
            <InputDocuments>
               <DocumentHash>
                  <dsig:DigestMethod Algorithm="${#TestSuite#SHA256}"/>
                  <dsig:DigestValue>${#TestSuite#DIGEST_256}</dsig:DigestValue>
               </DocumentHash>
            </InputDocuments>
         </SignRequest>
      </ais:sign>
   </soap:Body>
</soap:Envelope>]]></con:request><con:assertion type="SOAP Response"/><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns1='urn:oasis:names:tc:dss:1.0:core:schema';
declare namespace ns5='urn:com:swisscom:dss:1.0:schema';
declare namespace ns4='http://service.ais.swisscom.com/';
declare namespace ns3='urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0';
declare namespace ns2='http://www.w3.org/2000/09/xmldsig#';

//soap:Envelope/soap:Body/ns4:signResponse/ns1:SignResponse/ns1:Result</path><content><![CDATA[<Result xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="urn:oasis:names:tc:dss:1.0:core:schema" xmlns:ns2="http://www.w3.org/2000/09/xmldsig#" xmlns:ns3="urn:oasis:names:tc:dss:1.0:profiles:asynchronousprocessing:1.0" xmlns:ns4="http://service.ais.swisscom.com/" xmlns:ns5="urn:com:swisscom:dss:1.0:schema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <ResultMajor>urn:oasis:names:tc:dss:1.0:resultmajor:RequesterError</ResultMajor>
  <ResultMinor>urn:com:swisscom:dss:1.0:resultminor:UnknownCustomer</ResultMinor>
  <ResultMessage xml:lang="en"/>
</Result>]]></content><allowWildcards>true</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="restrequest" name="JSON Timestamp [synch]"><con:settings/><con:config service="AIS Signing Service" methodName="POST" resourcePath="/DSS-Server/rs/v1.0/sign" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="JSON Timestamp [synch]" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch</con:endpoint><con:request>{
  "dss.SignRequest": {
    "@RequestID": "${=new Date().format('yyyy-MM-dd')}T${=new Date().format('HH:mm:ss.SSS')}",
    "@Profile": "urn:com:swisscom:dss:v1.0",
    "dss.OptionalInputs": {
      "dss.ClaimedIdentity": {
        "dss.Name": "cartel.ch"
      },
      "dss.SignatureType": "urn:ietf:rfc:3161",
      "dss.AdditionalProfile": "urn:oasis:names:tc:dss:1.0:profiles:timestamping"
    },
    "dss.InputDocuments": {
      "dss.DocumentHash": {
        "xmldsig.DigestMethod": {
          "@Algorithm": "http://www.w3.org/2001/04/xmlenc#sha256"
        },
        "xmldsig.DigestValue": "GcXfOzOP8GsBu7odeT1w3GnMedppEWvngCQ7Ef1IBMA="
      }
    }
  }
}</con:request><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"dss.ResultMajor":"urn:oasis:names:tc:dss:1.0:resultmajor:Success"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="Accept" value="application/json" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry/></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Static" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="request" name="Test Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>DigitalSignatureServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Test Request"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request xsi:nil="true"/><con:assertion type="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OnDemand Non-MID" searchProperties="true"><con:settings/><con:testStep type="request" name="Test Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>DigitalSignatureServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Test Request"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request xsi:nil="true"/><con:assertion type="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="OnDemand MID" searchProperties="true"><con:settings/><con:testStep type="request" name="Test Request"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>DigitalSignatureServiceSoapBinding</con:interface><con:operation>sign</con:operation><con:request name="Test Request"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>https://ais.pre.swissdigicert.ch/DSS-Server/ws</con:endpoint><con:request xsi:nil="true"/><con:assertion type="SOAP Response"/><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties><con:property><con:name>AP_ID</con:name><con:value>cartel.ch</con:value></con:property><con:property><con:name>STATIC_ID</con:name><con:value>:kp2-cartel.ch</con:value></con:property><con:property><con:name>ONDEMAND_QUALIFIED</con:name><con:value>:OnDemand-Qualified</con:value></con:property><con:property><con:name>ONDEMAND_ADVANCED</con:name><con:value>:OnDemand-Advanced</con:value></con:property><con:property><con:name>MSISDN</con:name><con:value>41793083455</con:value></con:property><con:property><con:name>SHA224</con:name><con:value>http://www.w3.org/2001/04/xmldsig-more#sha224</con:value></con:property><con:property><con:name>SHA256</con:name><con:value>http://www.w3.org/2001/04/xmlenc#sha256</con:value></con:property><con:property><con:name>SHA384</con:name><con:value>http://www.w3.org/2001/04/xmldsig-more#sha384</con:value></con:property><con:property><con:name>SHA512</con:name><con:value>http://www.w3.org/2001/04/xmlenc#sha512</con:value></con:property><con:property><con:name>DIGEST_224</con:name><con:value>YyNmU8FIXM0wNgdcmZyJIW1S3f8KbOcN8Ulgzw==</con:value></con:property><con:property><con:name>DIGEST_256</con:name><con:value>1WON4H3Hrinf7LYRNmhV6Uf7apdUvuYEsmhxAklxumA=</con:value></con:property><con:property><con:name>DIGEST_384</con:name><con:value>be5JJtVMoZqkJ3isZaBBpwXXQtV4Opqf3KtYcHacCh7fVZ1bS8VSnMnK3z9mIy1R</con:value></con:property><con:property><con:name>DIGEST_512</con:name><con:value>FsntfB/ATHb1O7HlxpB4l9L+1vkgCOki3omkM6jJVnxXDRRgd1uZ7S/GkLPkFEUJ+SDllcWWjDNJHJcnkritGg==</con:value></con:property><con:property><con:name>tmp_ResponseID</con:name><con:value>c086e98c-5951-46ad-ac2a-7f21b8d7be88</con:value></con:property></con:properties></con:testSuite><con:properties><con:property><con:name>sd</con:name><con:value>dsfdsfds</con:value></con:property></con:properties><con:wssContainer/><con:sensitiveInformation/></con:soapui-project>